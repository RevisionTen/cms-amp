{"version":3,"sources":["node_modules/browser-pack/_prelude.js","examiner.js","src/examiner/examiner.js"],"names":[],"mappings":"AAAA;ACCA;AACA;ACFA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACDA;AACE;AACD;AAED;ADEA;AACA;AACA;AACA;ACFA;AACE;AACE;ADIJ;ACHI;AACE;AAIE;AACD;ADEP;ACDM;ADGN;ACFM;AACE;AACD;ADIP;ACd6C;AAavC;ADIN;ACHM;AACE;ADKR;ACJQ;AACE;AACD;AACF;ADMP;ACLM;AAAQ;AAAO;AAKhB;AACF;AACD;AAAkB;AAAD;AAClB;AAED;ADMA;AACA;AACA;AACA;AACA;ACNA;AACE;AAKD;ADID;AACA;AACA","file":"examiner.max.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nif (isLongTaskApiSupported(self)) {\n  detectLongTasks(self);\n}\n/**\n * @param {!Window} win\n */\n\n\nfunction detectLongTasks(win) {\n  var observer = new win.PerformanceObserver(function (entryList) {\n    var entries = entryList.getEntries();\n\n    for (var i = 0; i < entries.length; i++) {\n      if (entries[i].entryType != 'longtask' || entries[i].name != 'cross-origin-descendant') {\n        continue;\n      }\n\n      var attr = entries[i].attribution[0];\n\n      if (!attr || !attr.containerSrc) {\n        continue;\n      }\n\n      var duration = entries[i].duration;\n      var culprit = attr.containerSrc;\n\n      if (attr.containerName) {\n        var match = attr.containerName.match(/\"type\":\"([^\\\"]*)\"/);\n\n        if (match.length > 1) {\n          culprit = \"<amp-ad type=\\\"\" + match[1] + \"\\\">\";\n        }\n      }\n\n      console.\n      /*OK*/\n      log(\"%c LONG TASK %c \" + duration + \"ms from \" + culprit, 'background: red; color: white', 'background: #fff; color: #000');\n    }\n  });\n  observer.observe({\n    entryTypes: ['longtask']\n  });\n}\n/**\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isLongTaskApiSupported(win) {\n  return !!win.PerformanceObserver && !!win.TaskAttributionTiming && 'containerName' in win.TaskAttributionTiming.prototype;\n}\n\n},{}]},{},[1])\n\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nif (isLongTaskApiSupported(self)) {\n  detectLongTasks(self);\n}\n\n/**\n * @param {!Window} win\n */\nfunction detectLongTasks(win) {\n  const observer = new win.PerformanceObserver(function(entryList) {\n    const entries = entryList.getEntries();\n    for (let i = 0; i < entries.length; i++) {\n      if (\n        entries[i].entryType != 'longtask' ||\n        entries[i].name != 'cross-origin-descendant'\n      ) {\n        continue;\n      }\n      const attr = entries[i].attribution[0];\n      if (!attr || !attr.containerSrc) {\n        continue;\n      }\n\n      const {duration} = entries[i];\n      let culprit = attr.containerSrc;\n      if (attr.containerName) {\n        const match = attr.containerName.match(/\"type\":\"([^\\\"]*)\"/);\n        if (match.length > 1) {\n          culprit = `<amp-ad type=\"${match[1]}\">`;\n        }\n      }\n      console./*OK*/ log(\n        `%c LONG TASK %c ${duration}ms from ${culprit}`,\n        'background: red; color: white',\n        'background: #fff; color: #000'\n      );\n    }\n  });\n  observer.observe({entryTypes: ['longtask']});\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction isLongTaskApiSupported(win) {\n  return (\n    !!win.PerformanceObserver &&\n    !!win.TaskAttributionTiming &&\n    'containerName' in win.TaskAttributionTiming.prototype\n  );\n}\n"]}