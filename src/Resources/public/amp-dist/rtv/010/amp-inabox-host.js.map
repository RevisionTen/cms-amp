{"version":3,"sources":["node_modules/browser-pack/_prelude.js","inabox-host.js","ads/inabox/frame-overlay-helper.js","ads/inabox/frame-overlay-manager.js","ads/inabox/inabox-host.js","ads/inabox/inabox-messaging-host.js","ads/inabox/position-observer.js","ads/inabox/util.js","src/3p-frame-messaging.js","src/amp-events.js","src/ampdoc-fie.js","src/analytics.js","src/common-signals.js","src/config.js","src/css.js","src/dom.js","src/element-service.js","src/error.js","src/event-helper-listen.js","src/event-helper.js","src/experiments.js","src/exponential-backoff.js","src/full-overlay-frame-helper.js","src/iframe-helper.js","src/internal-version.js","src/json.js","src/layout-rect.js","src/log.js","src/mode-object.js","src/mode.js","src/observable.js","src/render-delaying-services.js","src/service.js","src/services.js","src/string.js","src/style-installer.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url-try-decode-uri-component.js","src/url.js","src/utils/array.js","src/utils/function.js","src/utils/lru-cache.js","src/utils/object.js","src/utils/promise.js","src/utils/rate-limit.js","third_party/css-escape/css-escape.js"],"names":[],"mappings":"AAAA;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACMA;ADJA;ACSA;ADPA;ACYA;ADVA;ACWA;ADTA;ACjBA;ADmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACJA;AACA;AAEA;ADKA;AACA;AACA;AACA;AACA;AACA;AACA;ACJA;AACE;AAGI;AACE;AACE;AAAW;AAAO;AAClB;AAAY;AAAO;AAFA;AAIrB;AACS;AAAO;AAEjB;AACD;AAAc;AAAA;AAAA;AAEZ;AAEA;ADSR;ACDQ;AAA4B;AAAD;AAE3B;AACE;AACE;AACE;AACA;AACA;AACD;AALkB;AAOtB;AACF;AAjCH;AAqCH;AAED;ADCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACDA;AACE;AACE;AACE;AAEA;ADEN;ACCM;AACE;AACE;AAC+B;AAAO;AAEvC;AALkB;AAOtB;AAdkB;AAgBtB;AAED;ADAA;AACA;AACA;AACA;AACA;AACA;AACA;ACAO;AAEP;ADCA;AACA;AACA;AACA;AACA;AACA;ACFO;AACL;AACD;AAED;ADGA;AACA;AACA;AACA;ACHO;AACL;AACD;AAED;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACJO;AAEP;ADKA;AACA;AACA;AACA;AACA;AACA;ACNO;AACL;AACD;AAED;ADOA;AACA;AACA;AACA;ACPO;AACL;AACD;ADSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AExJA;AF0JA;AE1KA;AF4KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AExKA;AACA;AAEA;AFyKA;AACA;AACA;AACA;AACA;AACA;AE1KE;AF4KF;AACA;AE1KE;AACE;AACA;AAEA;AF2KJ;AE1KI;AAEA;AF2KJ;AE1KI;AF4KJ;AEzKI;AF2KJ;AE1KI;AAEA;AACD;AAED;AF0KF;AACA;AACA;AACA;AACA;AE7K6B;AF+K7B;AE9KI;AAAqC;AAAA;AACtC;AAED;AFiLF;AACA;AACA;AEjLI;AACE;AACD;AACF;AAED;AFkLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEnLgC;AFqLhC;AEpLI;AACE;AACA;AACA;AACA;AACD;AACF;AAED;AFqLF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEtLkC;AFwLlC;AEvLI;AACA;AACA;AACA;AACA;AACA;AACA;AAII;AFsLR;AEpLQ;AACE;AACD;AACF;AAEC;AFqLR;AEnLQ;AACE;AACD;AACF;AAEJ;AFoLH;AACA;AACA;AEnLA;AFqLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEvLO;AACL;AAEA;AACD;AFwLD;AACA;AACA;AACA;AACA;AACA;AACA;AG5RA;AH8RA;AG7RA;AH+RA;AG9RA;AHgSA;AG/RA;AHiSA;AGzTA;AH2TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGzTA;AH2TA;AACA;AACA;AACA;AGpTA;AACA;AACA;AHsTA;AGrTA;AACA;AHuTA;AGtTA;AACA;AHwTA;AGvTA;AACA;AHyTA;AGxTA;AAEA;AHyTA;AACA;AACA;AACA;AACA;AGxTE;AH0TF;AACA;AGxTE;AACE;AACA;AACE;AACA;AACD;AH0TL;AACA;AGxTI;AACA;AACA;AH0TJ;AGxTI;AACE;AACA;AACD;AH0TL;AGzTI;AACA;AH2TJ;AG1TI;AACE;AACA;AACA;AACD;AACC;AACD;AH4TL;AG3TI;AH6TJ;AG5TI;AAAyB;AAAgC;AACvD;AACE;AACD;AACC;AACD;AACF;AHgUL;AG/TI;AACE;AACE;AACE;AACA;AACA;AACE;AACD;AHiUX;AGhUU;AACD;AACF;AACC;AACD;AACF;AHkUL;AACA;AGjUI;AHmUJ;AGlUI;AHoUJ;AGnUI;AACD;AAGH;AHmUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AGrUA;AACE;AHuUF;AGtUE;AACE;AAKD;AHoUH;AGnUE;AACD;AHqUD;AGnUA;AHqUA;AACA;AACA;AACA;AACA;AACA;AACA;AIjbA;AJmbA;AI9aA;AJgbA;AI/aA;AJibA;AIhbA;AJkbA;AIjbA;AJmbA;AIlbA;AJobA;AInbA;AJqbA;AI/cA;AJidA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIncA;AACA;AAEA;AJocA;AIncA;AAEA;AJocA;AACA;AACA;AACA;AIrcE;AJucF;AACA;AIrcE;AACE;AACA;AACD;AAED;AJscF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIxcI;AACE;AACD;AJ0cL;AIzcI;AACD;AAED;AJ0cF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1cI;AACE;AACD;AJ4cL;AI3cI;AACD;AJ6cH;AACA;AACA;AI5cA;AJ8cA;AACA;AACA;AACA;AACA;AACA;AI9cA;AJgdA;AACA;AACA;AACA;AIhdE;AJkdF;AACA;AACA;AIhdE;AACE;AACA;AAEA;AJidJ;AIhdI;AAEA;AJidJ;AIhdI;AAEA;AJidJ;AIhdI;AAEA;AJidJ;AIhdI;AAEA;AAKA;AAKA;AAID;AAED;AJqcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIvcI;AJycJ;AIxcI;AACE;AACA;AACD;AJ0cL;AIxcI;AJ0cJ;AIzcI;AACE;AACA;AACD;AJ2cL;AIzcI;AACA;AJ2cJ;AIxcI;AACE;AACA;AACD;AJ0cL;AIxcI;AAQE;AACA;AACD;AJmcL;AIjcI;AACD;AAED;AJkcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIncwD;AJqcxD;AIpcI;AACA;AACA;AAKI;AACA;AAFG;AAMP;AACA;AAE6C;AAKvC;AAA4B;AALW;AAQ7C;AACD;AAED;AJ0bF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1bI;AACA;AAAO;AAAO;AAIf;AAED;AJ0bF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI1bI;AACE;AAAO;AAAO;AAKR;AACA;AAFG;AAOV;AAED;AACD;AAED;AJqbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIrbI;AACE;AAAO;AAAO;AAKR;AACA;AAFG;AAOV;AAED;AACD;AAED;AJgbF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIhbI;AACE;AACD;AJkbL;AIjbI;AJmbJ;AIlbI;AACE;AACD;AJobL;AInbI;AJqbJ;AIpbI;AACE;AJsbN;AIrbM;AAKE;AACE;AAA6B;AAAQ;AAAT;AAC5B;AACD;AJsbT;AIrbQ;AACE;AACD;AACF;AACF;AJubL;AItbI;AACD;AAED;AJubF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AIvbI;AACE;AACD;AAED;AACA;AJwbJ;AACA;AIxbI;AJ0bJ;AIzbI;AAMA;AACA;AACA;AACA;AACA;AJsbJ;AACA;AItbI;AACE;AJwbN;AIvbM;AAKE;AACE;AAAO;AAAmC;AAA1C;AACD;AACF;AACF;AAED;AJubJ;AACA;AIvbI;AAAO;AAAmC;AAA1C;AACD;AAED;AJ2bF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AI3bI;AACA;AJ6bJ;AI5bI;AACE;AACD;AAED;AJ6bJ;AACA;AI7bI;AACE;AACE;AACE;AACD;AJ+bT;AI9bQ;AACD;AACF;AACF;AJgcH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK5zBA;AL8zBA;AKxzBA;AL0zBA;AKzzBA;AL2zBA;AKl1BA;ALo1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKz0BA;AL20BA;AACA;AACA;AACA;AACA;AKz0BA;AAEA;AL00BA;AKz0BA;AAEA;AL00BA;AKz0BA;AL20BA;AACA;AACA;AACA;AK30BE;AL60BF;AACA;AK30BE;AACE;AACA;AACA;AL60BJ;AK50BI;AACA;AL80BJ;AK70BI;AACA;AL+0BJ;AK90BI;AACD;AAED;AL+0BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AKl1B6B;ALo1B7B;AKn1BI;AACE;AACA;AAGI;ALm1BV;AKl1BU;AACD;AAGH;AACA;AACA;AACD;ALk1BL;AACA;AKj1BI;AACA;AACE;AACD;AACF;AAED;ALk1BF;AACA;AACA;AACA;AACA;AKl1BI;AACD;AAED;ALm1BF;AACA;AACA;AACA;AACA;AACA;AACA;AKn1BI;AACE;AAAgB;AAA+B;AAC/C;AACA;AAHK;AAKR;AAED;ALs1BF;AACA;AACA;AACA;AACA;AACA;AKv1BoB;AAAA;AAGhB;AACmB;AAAO;AAAkB;AAAO;AACnD;AACmB;AAAO;AAAiB;AAAO;AAClD;AAGM;AAAO;AACP;AAAO;AAEd;AAED;AL41BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AK51BI;AACU;AAAO;AAEjB;AL81BJ;AK71BI;AAKE;AACuB;AAAO;AAE9B;AAKD;ALu1BL;AKt1BI;AACD;ALw1BH;AACA;AACA;AKv1BA;ALy1BA;AACA;AACA;AACA;AACA;AACA;AACA;AK31BA;AACE;AL61BF;AK51BE;AAAQ;AAAO;AACb;AAAW;AAAO;AACnB;ALk2BH;AKj2BE;AAGE;AACA;AACA;AACA;AACA;AAEA;AACD;ALg2BH;AK/1BE;AACD;AAED;ALg2BA;AACA;AACA;AACA;AACA;AACA;AKh2BA;AACE;AACD;AAED;ALi2BA;AACA;AACA;AACA;AACA;AACA;AKj2BO;AACL;AAEA;AACD;ALk2BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM5iCA;AN8iCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM5iCA;AN8iCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM5iCO;AACL;AACE;AACE;AACD;AN8iCL;AM7iCI;AACE;AACD;AACF;AACF;AAED;AN8iCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AM9iCO;AACL;AACD;ANgjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOjmCA;APmmCA;AOlmCA;APomCA;AOnmCA;APqmCA;AOpmCA;APsmCA;AOznCA;AP2nCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOpnCA;AACA;AACO;AACL;AACA;AACA;AACA;AAJuB;AAOzB;APqnCA;AACA;AOrnCO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AA/ByB;AAkC3B;APknCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOnnCO;AACL;AAMD;AAED;AP+mCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AO/mCO;AAKL;AAFA;AAEA;AP+mCF;AO/mCE;AADA;AACA;APmnCF;AOlnCE;AACA;AACA;AACA;AACA;AACD;AAED;APmnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AOnnCO;AACL;AACE;AACD;APqnCH;AOpnCE;AACA;APsnCF;AOrnCE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;APsnCA;AACA;AACA;AACA;AACA;AACA;AOtnCO;AACL;AAKD;AAED;APmnCA;AACA;AOnnCO;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;APonCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQnxCA;ARqxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AQnxCA;ARqxCA;AACA;AACA;AQnxCO;AACL;AACA;AACA;AACA;AAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZuB;ARmyCzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AShzCA;ATkzCA;AACA;AACA;AS7yCA;AAEA;AAEA;AT6yCA;AACA;AACA;AS5yCA;AACE;AACA;AACA;AAHiB;AAMnB;AT6yCA;AACA;AACA;AS5yCO;AAEH;AAAmB;AAAA;AACnB;AAFe;AAMnB;AT6yCA;AACA;AACA;AACA;AACA;AACA;AACA;AS9yCO;AACL;AACD;AAED;AT+yCA;AACA;AACA;AACA;AACA;AS/yCO;AACL;AACE;AACD;ATizCH;AShzCE;AACA;AACD;ATkzCD;AACA;AACA;AACA;AACA;AACA;AACA;AUz2CA;AV22CA;AU33CA;AV63CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AUz3CA;AV23CA;AACA;AACA;AACA;AACA;AACA;AUz3CO;AACL;AACE;AACE;AACD;AV23CL;AU13CI;AACD;AACF;AV43CD;AACA;AACA;AACA;AACA;AACA;AACA;AWl6CA;AXo6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWl6CA;AXo6CA;AACA;AACA;AWl6CO;AACL;AXo6CF;AACA;AWl6CE;AXo6CF;AWl6CE;AXo6CF;AACA;AWl6CE;AXo6CF;AWl6CE;AXo6CF;AACA;AACA;AWl6CE;AXo6CF;AWl6CE;AXo6CF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWl6CE;AXo6CF;AWl6CE;AXo6CF;AACA;AACA;AACA;AWl6CE;AXo6CF;AWl6CE;AXo6CF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AWl6CE;AXo6CF;AWl6CE;AXo6CF;AACA;AWl6CE;AArD2B;AX09C7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYr/CA;AZu/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AYr/CA;AZu/CA;AACA;AACA;AACA;AACA;AACA;AYr/CA;AAEA;AAKA;AAKA;AZ8+CA;AY7+CO;AACL;AACA;AACA;AACA;AZ++CF;AY9+CE;AZg/CF;AACA;AY9+CE;AAEA;AACA;AAEA;AZ8+CF;AY7+CE;AZ++CF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AY7+CE;AAvBkB;AZugDpB;AY1+CO;AACL;AADoB;AZ8+CtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa3iDA;Ab6iDA;Aa5iDA;Ab8iDA;Aa/jDA;AbikDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Aa5jDA;Ab8jDA;AACA;AACA;AACA;AACA;Aa5jDO;AACL;AACD;AAED;Ab6jDA;AACA;AACA;AACA;Aa7jDA;AAEA;Ab8jDA;AACA;AACA;AACA;Aa7jDO;AACL;AACD;AAED;Ab8jDA;AACA;AACA;AACA;AACA;AACA;Aa9jDO;AACL;AACE;AACD;AbgkDH;Aa9jDE;AACD;AAED;Ab+jDA;AACA;AACA;AACA;AACA;AACA;Aa/jDA;AACE;AACE;AACA;AACA;AACA;AAEA;AbgkDJ;Aa/jDI;AAAmB;AAAO;AAC3B;AACC;AACD;AACF;AAED;AbkkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AalkDO;AACL;AACD;AAED;AbmkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AankDO;AACL;AACD;AAED;AbokDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AapkDO;AACL;AbskDF;AapkDE;AACA;AACD;AbskDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcxuDA;Ad0uDA;AczuDA;Ad2uDA;ActuDA;AdwuDA;AcvuDA;AdyuDA;AcxuDA;Ad0uDA;AczuDA;Ad2uDA;AcpwDA;AdswDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcxvDA;AACE;AACA;AACA;AACA;AACA;AACA;AANwB;AAQ1B;AAEA;AdyvDA;AcxvDO;AAEP;AdyvDA;AACA;AczvDO;AAEP;Ad0vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac3vDO;AACL;AACE;AACA;AACD;AACD;Ad6vDF;AACA;Ac7vDE;Ad+vDF;Ac9vDE;AACE;AACA;AACE;AACE;AACA;AACD;AACF;AACD;AAA0B;AAAD;AAC1B;AACC;AACA;AACE;AACE;AACA;AACD;AACF;AAAE;AAAmB;AACvB;AACF;AAED;AdmwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcnwDO;AACL;AACE;AACD;AACF;AAED;AdowDA;AACA;AACA;AACA;AACA;AACA;AcpwDO;AACL;AAAkC;AAAA;AACnC;AAED;AduwDA;AACA;AACA;AACA;AACA;AACA;AcvwDO;AACL;AAA0B;AAAA;AAC3B;AAED;Ad0wDA;AACA;AACA;AACA;AACA;Ac1wDO;AACL;AACE;AACD;AACF;AAED;Ad2wDA;AACA;AACA;AACA;AACA;Ac3wDO;AACL;AACE;AACD;AACF;AAED;Ad4wDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac5wDO;AACL;Ad8wDF;Ac7wDE;AACE;AACD;Ad+wDH;Ac9wDE;AACD;AAED;Ad+wDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/wDO;AACL;AACA;AACD;AAED;AdgxDA;AACA;AACA;AACA;AACA;AACA;AACA;AchxDO;AACL;AACE;AACD;AdkxDH;AcjxDE;AACD;AAED;AdkxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AclxDO;AACL;AACA;AACD;AAED;AdmxDA;AACA;AACA;AACA;AACA;AACA;AACA;AcnxDO;AACL;AdqxDF;AcpxDE;AACE;AACD;AdsxDH;AACA;AcpxDE;AdsxDF;AcrxDE;AACE;AduxDJ;ActxDI;AACE;AACD;AACC;AACD;AACF;AdwxDH;AcvxDE;AACD;AAED;AdwxDA;AACA;AACA;AACA;AACA;AACA;AcxxDO;AACL;AACE;AACA;AACD;Ad0xDH;AczxDE;Ad2xDF;AczxDE;Ad2xDF;Ac1xDE;AACD;AAED;Ad2xDA;AACA;AACA;AACA;AACA;AACA;Ac3xDO;AACL;AACA;AACE;AACD;AAED;Ad4xDF;AACA;Ac5xDE;AACE;AACD;Ad8xDH;Ac7xDE;AACoB;AAAwB;AAG7C;AAED;Ad6xDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac7xDO;AACL;AACE;AACE;AACD;AACF;Ad+xDH;Ac9xDE;AACD;AAED;Ad+xDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/xDO;AACL;AACE;AACE;AACD;AACF;AdiyDH;AchyDE;AACD;AAED;AdiyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcjyDO;AACL;AACE;AACD;AdmyDH;AcjyDE;AACE;AACD;AACF;AAED;AdkyDA;AACA;AACA;AACA;AACA;AACA;AACA;AclyDO;AACL;AdoyDF;AcnyDE;AAKE;AACE;AACD;AACF;AdiyDH;AchyDE;AACD;AAED;AdiyDA;AACA;AACA;AACA;AACA;AACA;AACA;AcjyDO;AACL;AACA;AACA;AACE;AACD;AACF;AAED;AdkyDA;AACA;AACA;AACA;AACA;AACA;AACA;AclyDO;AACL;AAKE;AACE;AACD;AACF;AdgyDH;Ac/xDE;AACD;AAED;AdgyDA;AACA;AACA;AACA;AACA;AACA;AACA;AchyDO;AACL;AdkyDF;AcjyDE;AAKE;AACE;AACD;AACF;Ad+xDH;Ac9xDE;AACD;AAED;Ad+xDA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/xDO;AACL;AAKE;AACE;AACD;AACF;Ad6xDH;Ac5xDE;AACD;AAED;Ad6xDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac7xDO;AACL;Ad+xDF;Ac9xDE;AACE;AACE;AACD;AACF;AdgyDH;Ac/xDE;AACD;AAED;AdgyDA;AACA;AACA;AACA;AACA;AACA;AACA;AchyDO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AdoyDA;AACA;AACA;AACA;AACA;AACA;AACA;AcpyDO;AACL;AACA;AACE;AACD;AACF;AAED;AdqyDA;AACA;AACA;AACA;AACA;AACA;AACA;AcryDO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AdyyDA;AACA;AACA;AACA;AACA;AACA;AACA;AczyDO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;Ad6yDA;AACA;AACA;AACA;AACA;AACA;AACA;Ac7yDO;AACL;AACA;AAAO;AAAO;AAAd;AACD;AAED;AdizDA;AACA;AACA;AACA;AACA;AACA;AACA;AcjzDO;AACL;AdmzDF;Ac7yDE;AACE;AACD;Ad+yDH;Ac9yDE;AACD;AAED;Ad+yDA;AACA;AACA;AACA;AACA;AACA;AACA;Ac/yDO;AACL;AACA;AAAe;AAAO;AACvB;AAED;AdkzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AclzDA;AACE;AACA;AACA;AACA;AAAsB;AAAO;AAC7B;AACA;AACD;AAED;AdqzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcrzDO;AACL;AACE;AAAY;AAAO;AACpB;AdyzDH;AACA;AcvzDE;AACA;AACD;AAED;AdwzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AcxzDO;AACL;AACE;AAAY;AAAO;AAGpB;Ad0zDH;AACA;AcxzDE;AACD;AAED;AdyzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AczzDO;AAKL;AAA6D;AAAA;AdyzD/D;Ac1zDE;AAGA;AACA;Ad0zDF;AczzDE;AACE;Ad2zDJ;Ac1zDI;AACE;Ad4zDN;Ac3zDM;AACD;AACF;Ad6zDH;Ac5zDE;AACD;AAED;Ad6zDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac7zDO;AACL;Ad+zDF;Ac9zDE;AACE;AACE;AACD;AACF;Adg0DH;Ac5zDE;AACD;AAED;Ad6zDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac7zDO;AACL;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;Ad8zDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac9zDO;AAAqC;Adi0D5C;Ac/zDE;AACE;AACD;AACF;AAED;Adg0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ach0DO;AACL;AACA;AACA;AACA;Adk0DF;Acj0DE;AACE;AACD;AACC;AACD;Adm0DH;AACA;Acj0DE;AACE;AACD;Adm0DH;Acl0DE;AACD;AAED;Adm0DA;AACA;AACA;AACA;AACA;AACA;Acn0DO;AACL;AAKD;AAED;Adg0DA;AACA;AACA;AACA;AACA;AACA;Ach0DO;AACL;AAID;AAED;Ad8zDA;AACA;AACA;AACA;AACA;AACA;Ac9zDO;AACL;AAIA;AACD;AAED;Ad4zDA;AACA;AACA;AACA;AACA;AACA;Ac5zDO;AACL;AACE;AACD;Ad8zDH;Ac7zDE;AACD;AAED;Ad8zDA;AACA;AACA;AACA;AACA;Ac9zDA;AACE;AACD;AAED;Ad+zDA;AACA;AACA;AACA;AACA;AACA;Ac/zDO;AACL;AACE;AAAQ;AAAO;AAChB;AAEA;AACF;AAED;Adi0DA;AACA;AACA;AACA;AACA;AACA;Acj0DO;AACL;AACD;AAED;Adk0DA;AACA;AACA;AACA;AACA;AACA;Acl0DO;AACL;AAEA;Adm0DF;Acl0DE;AAGE;AAEH;AAED;Adg0DA;AACA;AACA;AACA;AACA;AACA;AACA;Ach0DO;AACL;Adk0DF;Acj0DE;AACE;AACA;AACD;AAED;Adk0DF;AACA;Acl0DE;AACE;AACA;AACA;AACD;Ado0DH;Acl0DE;AACD;AAED;Adm0DA;AACA;AACA;AACA;AACA;AACA;Acn0DO;AACL;Adq0DF;Ac9zDE;AACE;AACD;AACF;AAED;Ad+zDA;AACA;AACA;AACA;AACA;AACA;Ac/zDO;AACL;Adi0DF;Ac1zDE;AACE;AACA;AACD;Ad4zDH;Acv0DwC;Ady0DxC;Ac5zDE;AACE;AACD;Ad8zDH;Ac7zDE;Ad+zDF;AcxzDE;AACE;AACD;AACF;AAED;AdyzDA;AACA;AACA;AACA;AACA;AACA;AACA;AczzDO;AAAsC;Ad4zD7C;Ac1zDE;AACE;AACD;Ad4zDH;Ach0D6C;Adk0D7C;Ac5zDE;AACE;AACD;Ad8zDH;Ac7zDE;AAKA;AACD;AAED;Ad0zDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac1zDO;AACL;AACD;AAED;Ad2zDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac3zDO;AACL;AACE;AACD;Ad6zDH;Ac3zDE;AACA;Ad6zDF;AczzDE;AACE;AACD;Ad2zDH;AACA;AczzDE;AACD;AAED;Ad0zDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ac1zDO;AACL;AACA;Ad4zDF;Ac1zDE;AACE;AACE;AACD;AACC;AACD;AACF;Ad4zDH;Ac1zDE;AACD;AAED;Ad2zDA;AACA;AACA;AACA;AACA;Ac3zDO;AAAwC;AAE7C;AAAwB;AAAO;AAC/B;AAAsC;AAAO;AAC7C;AACD;Adi0DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AeztFA;Af2tFA;Ae1tFA;Af4tFA;AeltFA;AfotFA;AentFA;AfqtFA;AACA;AACA;AACA;AACA;AervFA;AfuvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AevuFA;AfyuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AevuFO;AACL;AACS;AAAA;AAEV;AAED;AfwuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AexuFO;AACL;Af0uFF;AezuFE;AACE;AAAO;AAAkC;AAAzC;AACD;Af8uFH;Ae7uFE;AACD;AAED;Af8uFA;AACA;AACA;AACA;AACA;AACA;Ae9uFA;AACE;AACA;AACE;AACD;AfgvFH;Ae/uFE;AACD;AAED;AfgvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AehvFO;AACL;AAKc;AAAA;AACf;AAED;Af8uFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae9uFO;AAML;Af2uFF;Ae1uFE;AACE;AAAO;AAAkC;AAAzC;AACD;Af+uFH;Ae9uFE;AACA;AAEQ;AAAA;AAIJ;AACA;AACA;AACE;AACD;AACC;AACD;Af6uFP;Ae5uFM;AACD;AACJ;AAED;Af6uFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae7uFO;AAKL;Af2uFF;Ae1uFE;AACE;AAAO;AAAkC;AAAzC;AACD;Af+uFH;Ae9uFE;AACA;AfgvFF;Ae9uFE;AACE;AACD;AACC;AACA;AACD;AACF;AAED;Af+uFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae/uFA;AACE;AAAO;AAAwB;AAA/B;AAUD;AAED;Af0uFA;AACA;AACA;AACA;AACA;AACA;Ae1uFO;AACL;AACA;AACE;AACD;Af4uFH;Ae3uFE;AAEA;Af4uFF;Ae3uFE;Af6uFF;Ae1uFE;AACE;AACA;AAGA;AACD;Af0uFH;AezuFE;AACD;AAED;Af0uFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae1uFO;AACL;AACE;AACD;AACF;AAED;Af2uFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae3uFA;AACE;AACD;AAED;Af4uFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae5uFA;AACE;Af8uFF;AACA;AACA;AACA;AACA;AACA;Ae3uFE;AACA;AACA;AACE;AACD;Af6uFH;Ae3uFE;AACA;AAAO;AAAkC;AAAzC;AAID;AAED;Af4uFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;Ae5uFA;AACE;AAEQ;AAAA;AAEJ;AACA;AACA;AACE;AACD;AACC;AACD;Af6uFP;Ae5uFM;AACD;AACJ;Af8uFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBhiGA;AhBkiGA;AgBjiGA;AhBmiGA;AgBliGA;AhBoiGA;AgB7hGA;AhB+hGA;AgB9hGA;AhBgiGA;AgB/hGA;AhBiiGA;AgBhiGA;AhBkiGA;AgBjiGA;AhBmiGA;AgBliGA;AhBoiGA;AgBniGA;AhBqiGA;AgBpiGA;AhBsiGA;AgBriGA;AhBuiGA;AgBtiGA;AhBwiGA;AgB1kGA;AhB4kGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtjGA;AhBwjGA;AACA;AgBtjGA;AAEA;AhBujGA;AACA;AACA;AgBtjGA;AAEA;AhBujGA;AACA;AACA;AgBtjGA;AAEA;AhBujGA;AACA;AACA;AACA;AACA;AgBtjGA;AAEA;AhBujGA;AACA;AACA;AACA;AACA;AgBtjGA;AAEA;AhBujGA;AACA;AACA;AACA;AgBtjGA;AhBwjGA;AgBtjGA;AAEA;AhBujGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBtjGA;AACE;AACE;AACD;AhBwjGH;AgBvjGE;AACD;AAED;AhBwjGA;AACA;AACA;AACA;AACA;AACA;AACA;AgBxjGA;AACE;AACA;AACA;AACD;AAED;AhByjGA;AACA;AACA;AACA;AACA;AACA;AgBzjGA;AACE;AACE;AACA;AAAsB;AAA4B;AACnD;AACC;AACD;AACF;AAED;AhB4jGA;AACA;AACA;AACA;AACA;AACA;AgB5jGA;AAEA;AhB6jGA;AACA;AACA;AACA;AACA;AgB5jGO;AACL;AhB8jGF;AgB7jGE;AAME;AAAuB;AAAuB;AAC/C;AACF;AAED;AhB2jGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3jGO;AACL;AACE;AACA;AhB6jGJ;AgB5jGI;AACE;AACE;AAAkC;AAAuB;AACzD;AACD;AACC;AACA;AACA;AACD;AACF;AACC;AACD;AhBgkGL;AACA;AgB/jGI;AACE;AACE;AAGA;AACD;AACF;AhB+jGL;AgB7jGI;AACE;AAAO;AAAuB;AAA9B;AACD;AhBkkGL;AgBjkGI;AhBmkGJ;AgBhkGI;AhBkkGJ;AgBjkGI;AACE;AhBmkGN;AgBlkGM;AACE;AACA;AACD;AACF;AhBokGL;AACA;AgBlkGI;AACE;AhBokGN;AgBnkGM;AACE;AACD;AACC;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AACF;AhBqkGL;AgBpkGI;AACE;AACD;AAGD;AhBokGJ;AACA;AgBpkGI;AAQD;AACC;AACE;AACD;AACF;AhB+jGH;AgB9jGE;AAAO;AAAuB;AAA9B;AACD;AAED;AhBkkGA;AACA;AACA;AACA;AACA;AgBlkGO;AACL;AACD;AAED;AhBmkGA;AACA;AACA;AACA;AACA;AgBnkGO;AACL;AACE;AACD;AhBqkGH;AgBpkGE;AACE;AACD;AhBskGH;AgBrkGE;AACE;AACD;AhBukGH;AgBtkGE;AACD;AAED;AhBukGA;AACA;AACA;AACA;AACA;AgBvkGO;AACL;AACD;AAED;AhBwkGA;AACA;AACA;AACA;AACA;AgBxkGO;AACL;AACE;AACD;AhB0kGH;AgBzkGE;AACE;AACD;AhB2kGH;AgB1kGE;AACE;AACD;AhB4kGH;AgB3kGE;AACD;AAED;AhB4kGA;AACA;AACA;AACA;AACA;AgB5kGO;AACL;AAAc;AAA0B;AACxC;AACE;AAME;AACA;AACD;AhB2kGL;AgB1kGI;AACD;AACF;AAED;AhB2kGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB3kGA;AAAsD;AhB8kGtD;AgB7kGE;AACA;AACE;AACD;AhB+kGH;AgB9kGE;AACE;AACD;AhBglGH;AgB/kGE;AhBilGF;AgBhlGE;AACE;AACD;AAEA;AhBilGH;AgBhlGE;AACE;AACA;AACA;AACA;AACD;AhBklGH;AgBjlGE;AhBmlGF;AgB3kGE;AACE;AACE;AACE;AAEE;AAA4B;AAG7B;AACF;AAEA;AACF;AACF;AACF;AAED;AhBykGA;AACA;AACA;AACA;AACA;AACA;AACA;AgBzkGO;AACL;AACA;AACA;AACA;AACE;AACE;AACA;AACA;AACD;AACF;AACF;AAED;AhB0kGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1kGO;AACL;AhB4kGF;AgB3kGE;AACE;AACD;AhB6kGH;AgB5kGE;AACA;AACA;AhB8kGF;AgB7kGE;AACE;AACD;AhB+kGH;AgB9kGE;AhBglGF;AgB/kGE;AACE;AACD;AhBilGH;AgBhlGE;AACE;AACE;AACD;AhBklGL;AgBjlGI;AACA;AACD;AACF;AAED;AhBklGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBllGO;AACL;AACE;AAA2B;AAC3B;AAA2B;AAC3B;AAA2B;AAC3B;AAA6B;AAC7B;AAA6B;AAC7B;AAA2B;AAC3B;AhB0lGJ;AgBjmGc;AASb;AAED;AhB0lGA;AACA;AACA;AACA;AACA;AACA;AgB1lGA;AACE;AACE;AACE;AACD;AACC;AACA;AACD;AACF;AhB4lGH;AgB3lGE;AACE;AACD;AhB6lGH;AgB3lGE;AACD;AAED;AhB4lGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB5lGO;AAQL;AAEA;AACA;AACA;AACA;AACA;AhBslGF;AgBrlGE;AhBulGF;AgBtlGE;AACE;AACD;AhBwlGH;AgBvlGE;AACE;AACD;AhBylGH;AgBvlGE;AACA;AAGA;AhBulGF;AgBtlGE;AAGE;AACA;AAEA;AACA;AAEA;AhBolGJ;AgBllGI;AACE;AACD;AACF;AhBolGH;AgBllGE;AhBolGF;AgBjlGE;AACE;AACD;AAGD;AACA;AACA;AhBilGF;AACA;AgBjlGE;AAAa;AAA4B;AACzC;AACA;AACA;AACA;AAGA;AhBmlGF;AgBllGE;AACA;AAEA;AhBmlGF;AgBllGE;AACE;AACA;AACD;AACC;AACD;AhBolGH;AgBllGE;AACE;AACD;AhBolGH;AgBllGE;AhBolGF;AgBjlGE;AACE;AACD;AAGD;AhBilGF;AACA;AgBjlGE;AhBmlGF;AgBhlGE;AhBklGF;AgBhlGE;AACE;AACD;AhBklGH;AgBjlGE;AACE;AACD;AhBmlGH;AACA;AgBllGE;AACE;AACD;AhBolGH;AgBllGE;AACE;AACA;AhBolGJ;AgBnlGI;AACE;AACD;AhBqlGL;AgBplGI;AACE;AACD;AACF;AhBslGH;AgBplGE;AACE;AACD;AhBslGH;AgBrlGE;AAEA;AACA;AhBslGF;AgBrlGE;AACE;AACA;AACD;AhBulGH;AgBtlGE;AhBwlGF;AgBtlGE;AACE;AhBwlGJ;AgBrlGI;AhBulGJ;AgBrlGI;AACE;AACD;AhBulGL;AgBrlGI;AACE;AACD;AhBulGL;AACA;AgBrlGI;AACE;AACD;AACF;AACC;AACA;AACA;AACD;AhBulGH;AgBtlGE;AACA;AACA;AAEA;AAEA;AACD;AAED;AhBqlGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgBrlGO;AACL;AACE;AACD;AhBulGH;AgBtlGE;AhBwlGF;AgBvlGE;AACE;AACE;AACD;AACF;AhBylGH;AgBxlGE;AACD;AAED;AhBylGA;AACA;AACA;AACA;AgBzlGO;AACL;AACD;AAED;AhB0lGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgB1lGO;AACL;AACA;AhB4lGF;AgB3lGE;AACE;AACD;AhB6lGH;AgB5lGE;AhB8lGF;AgB7lGE;AACE;AACD;AAAW;AhBgmGd;AgB5lGI;AACE;AACD;AhB8lGL;AACA;AgB5lGI;AACE;AACD;AAGD;AACA;AACA;AACA;AACA;AhB4lGJ;AACA;AgB5lGI;AhB8lGJ;AgB7lGI;AACE;AACD;AhB+lGL;AACA;AgB7lGI;AACE;AACD;AACF;AhB+lGH;AgB7lGE;AACD;AAED;AhB8lGA;AACA;AACA;AACA;AACA;AgB9lGO;AACL;AACA;AACA;AACE;AACE;AACA;AAFgB;AAIlB;AACD;AACF;AAED;AhB+lGA;AACA;AACA;AACA;AACA;AACA;AgB/lGA;AACE;AhBimGF;AgB9lGE;AACD;AhBgmGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBxzHA;AjB0zHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBxzHA;AjB0zHA;AACA;AACA;AACA;AiBxzHA;AAEA;AjByzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiBxzHO;AAML;AACA;AACA;AjBqzHF;AACA;AACA;AiBpzHE;AjBszHF;AiBpzHE;AACE;AACE;AACD;AACC;AACA;AjBszHN;AiBrzHM;AACD;AACF;AjBuzHH;AiBtzHE;AACA;AjBwzHF;AiBvzHE;AACE;AACD;AjByzHH;AiBxzHE;AAKA;AACE;AACE;AAKD;AjBkzHL;AACA;AiBjzHI;AACA;AACA;AACD;AACF;AAED;AjBkzHA;AACA;AACA;AACA;AACA;AACA;AACA;AiBlzHO;AACL;AACA;AACE;AACD;AjBozHH;AiBlzHE;AjBozHF;AiBnzHE;AACE;AACA;AACE;AACE;AACD;AjBqzHP;AiBxzHoB;AAKhB;AACA;AACD;AAEA;AjBqzHH;AiBpzHE;AACD;AAED;AjBqzHA;AACA;AACA;AACA;AiBrzHO;AACL;AACD;AjBuzHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB16HA;AlB46HA;AkB36HA;AlB66HA;AkB56HA;AlB86HA;AkBh8HA;AlBk8HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB57HA;AACA;AAEA;AlB67HA;AkB57HO;AAEP;AlB67HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB97HO;AACL;AAAkB;AAAiC;AAAC;AAAD;AACnD;AAEA;AlBm8HF;AkBl8HE;AACE;AACD;AACC;AACA;AACA;AAMA;AACD;AACF;AAED;AlB87HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB97HO;AACL;AAMD;AAED;AlB07HA;AACA;AACA;AACA;AACA;AACA;AkB17HO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AlB87HA;AACA;AACA;AACA;AACA;AACA;AkB97HO;AACL;AAAO;AAA6C;AAApD;AACD;AAED;AlBk8HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBl8HO;AACL;AACA;AAII;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAGH;AACD;AAED;AlB87HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkB97HO;AAML;AACA;AACE;AACD;AACD;AlB27HF;AkB17HE;AACE;AACD;AlB47HH;AkB37HE;AACD;AAED;AlB47HA;AACA;AACA;AACA;AACA;AACA;AkB57HO;AACL;AAKE;AACC;AAEJ;AAED;AlBw7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkBx7HO;AACL;AACA;AlB07HF;AkBz7HE;AACE;AACD;AlB27HH;AkB17HE;AlB47HF;AkB37HE;AAIE;AACD;AlB07HH;AkBz7HE;AACE;AACA;AACA;AACE;AACA;AACA;AACE;AADgE;AAGnE;AACC;AACD;AlB27HL;AACA;AkB17HI;AACE;AACD;AlB47HL;AkB37HI;AAEA;AACA;AlB47HJ;AkB37HI;AACE;AAEO;AAAA;AlB67Hb;AkB37HM;AACE;AACD;AACF;AlB67HL;AkB57HI;AACD;AAED;AAEI;AACE;AACD;AlB47HP;AkB37HM;AACD;AAEC;AACE;AACD;AlB47HP;AkB37HM;AACD;AAEJ;AAED;AlB27HA;AACA;AACA;AACA;AACA;AACA;AkB37HA;AACE;AACA;AACA;AACA;AACE;AAED;AAGD;AlB07HF;AACA;AkB17HE;AlB47HF;AkB37HE;AACE;AACD;AlB67HH;AkB57HE;AACD;AAED;AlB67HA;AACA;AACA;AACA;AACA;AACA;AkB77HA;AACE;AACD;AAED;AlB87HA;AACA;AACA;AACA;AACA;AACA;AkB97HO;AACL;AACD;AlBg8HD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBvsIA;AnBysIA;AmBxsIA;AnB0sIA;AmBzsIA;AnB2sIA;AmB1sIA;AnB4sIA;AmBtuIA;AnBwuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBtuIA;AnBwuIA;AACA;AACA;AACA;AACA;AACA;AmBjuIA;AACA;AAEA;AnBkuIA;AmBjuIA;AAEA;AnBkuIA;AmBjuIA;AAEA;AnBkuIA;AACA;AACA;AACA;AACA;AACA;AmBjuIO;AAEP;AnBkuIA;AACA;AACA;AACA;AACA;AACA;AACA;AmBnuIO;AACL;AACD;AAED;AnBouIA;AACA;AACA;AACA;AACA;AACA;AmBpuIO;AACL;AAGD;AAED;AnBmuIA;AACA;AACA;AACA;AACA;AACA;AACA;AmBnuIO;AACL;AACA;AACD;AAED;AnBouIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBpuIO;AAML;AAAwC;AAAO;AAC/C;AnBmuIF;AmBluIE;AACE;AACA;AnBouIJ;AmBluII;AACE;AACA;AACA;AnBouIN;AmBluIM;AACE;AAOD;AACF;AACF;AnB8tIH;AmB7tIE;AACD;AAED;AnB8tIA;AACA;AACA;AACA;AACA;AACA;AACA;AmB9tIO;AACL;AACE;AACD;AnBguIH;AmB/tIE;AACA;AnBiuIF;AmB9tIE;AACE;AACE;AnBguIN;AmB/tIM;AACE;AACD;AACF;AACF;AnBiuIH;AACA;AmBhuIE;AAKE;AACA;AnB8tIJ;AmB3tII;AACE;AnB6tIN;AmB5tIM;AACE;AACE;AACD;AACF;AACF;AACF;AnB8tIH;AmB5tIE;AnB8tIF;AmB5tIE;AAKE;AACA;AACA;AnB0tIJ;AmBztII;AACE;AnB2tIN;AmB1tIM;AACE;AACD;AnB4tIP;AmB3tIM;AACE;AACD;AACF;AACF;AnB6tIH;AmB5tIE;AACD;AAED;AnB6tIA;AACA;AACA;AACA;AACA;AACA;AACA;AmB7tIO;AACL;AACD;AAED;AnB8tIA;AACA;AACA;AACA;AACA;AACA;AmB9tIA;AACE;AnBguIF;AmB/tIE;AACE;AACE;AACD;AACF;AACC;AACD;AnBiuIH;AmBhuIE;AAEA;AnBiuIF;AmBhuIE;AACE;AACE;AACD;AnBkuIL;AmBjuII;AACE;AACD;AACC;AACD;AACF;AnBmuIH;AmBluIE;AACD;AAED;AnBmuIA;AACA;AACA;AACA;AACA;AACA;AmBnuIA;AACE;AnBquIF;AmBpuIE;AACE;AACD;AnBsuIH;AmBruIE;AACE;AACE;AACD;AACF;AACC;AACD;AACF;AAED;AnBsuIA;AACA;AACA;AACA;AACA;AACA;AACA;AmBtuIO;AACL;AACD;AAED;AnBuuIA;AACA;AACA;AACA;AACA;AACA;AmBvuIO;AACL;AACA;AACD;AAED;AnBwuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBxuIA;AACE;AACA;AACD;AAED;AnByuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBzuIO;AACL;AADsC;AAIxC;AnB0uIA;AACA;AACA;AACA;AACA;AACA;AACA;AmB3uIA;AACE;AACA;AACD;AAED;AnB4uIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmB5uIO;AACL;AACA;AnB8uIF;AmB7uIE;AACE;AACA;AACA;AACE;AACD;AnB+uIL;AmB9uII;AACE;AAEA;AACD;AnB+uIL;AmB7uII;AAIE;AACA;AACD;AAGD;AACA;AnB0uIJ;AACA;AmB1uII;AAEsB;AAAO;AAC3B;AAEA;AAGA;AAED;AACF;AnBwuIH;AmBvuIE;AACD;AAED;AnBwuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBxuIO;AACL;AAGD;AAED;AnBuuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmBvuIO;AACL;AACA;AACA;AACD;AnByuID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBnnJA;ApBqnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBnnJA;ApBqnJA;AACA;AACA;AACA;AACA;AACA;AoBnnJO;AACL;AACA;AACE;AACD;AACF;AAED;ApBonJA;AACA;AACA;AACA;AACA;AACA;AoBpnJO;AACL;AACA;AACA;AACE;AACA;AACA;AACD;AACF;AAED;ApBqnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoBrnJO;AACL;AACA;ApBunJF;AoBtnJE;AACE;AACD;ApBwnJH;AoBvnJE;AACD;ApBynJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB/qJA;ArBirJA;AqBhsJA;ArBksJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB/rJA;ArBisJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqB/rJO;AAML;AACA;AAEA;AAIA;AAIA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVgB;AAYnB;AAED;ArBorJA;AACA;AACA;AACA;AACA;AACA;AACA;AqBprJO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZgB;AAcnB;AAED;ArBqrJA;AACA;AACA;AACA;AACA;AACA;AACA;AqBrrJO;AACL;AAYD;ArB4qJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBnxJA;AtBqxJA;AsBpxJA;AtBsxJA;AsBrxJA;AtBuxJA;AsBtxJA;AtBwxJA;AsBvxJA;AtByxJA;AsBxxJA;AtB0xJA;AsBzxJA;AtB2xJA;AsB1xJA;AtB4xJA;AsB3xJA;AtB6xJA;AsBrzJA;AtBuzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3yJA;AtB6yJA;AACA;AACA;AsB3yJA;AAEA;AtB4yJA;AACA;AACA;AACA;AACA;AsB3yJA;AAEA;AtB4yJA;AACA;AACA;AACA;AACA;AACA;AsB3yJA;AAEA;AtB4yJA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3yJA;AAA8C;AtB8yJ9C;AsB3yJE;AACE;AACD;AtB6yJH;AsB5yJE;AACD;AAED;AtB6yJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB7yJA;AACE;AtB+yJF;AsB9yJE;AACE;AACD;AtBgzJH;AsB9yJE;AtBgzJF;AsB/yJE;AACE;AACD;AtBizJH;AsBhzJE;AACD;AAED;AtBizJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBjzJA;AACE;AACA;AAEA;AtBkzJF;AsBjzJE;AACE;AtBmzJJ;AsBlzJI;AACE;AACA;AACD;AACF;AtBozJH;AsBlzJE;AACE;AACE;AACA;AAFa;AAIf;AACD;AtBozJH;AsBlzJE;AACD;AAED;AtBmzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBnzJA;AACE;AtBqzJF;AsBnzJE;AACE;AACD;AAGD;AACA;AtBmzJF;AACA;AsBnzJE;AtBqzJF;AsBpzJE;AACE;AAD8C;AtBwzJlD;AsBrzJI;AACE;AACD;AAIC;AACA;AACA;AACD;AACF;AtBozJH;AsBlzJE;AACD;AAED;AtBmzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBnzJA;AACE;AACE;AACE;AACD;AACF;AtBqzJH;AsBpzJE;AACD;AAED;AtBqzJA;AACA;AACA;AACA;AACA;AACA;AsBrzJA;AACE;AAAuB;AAAD;AtByzJxB;AsBvzJE;AACE;AtByzJJ;AsBvzJI;AACE;AADqC;AtB2zJ3C;AsBvzJM;AACE;AACA;AACE;AACD;AACF;AACF;AACF;AACF;AAED;AtBwzJA;AACA;AACA;AACA;AACA;AsBxzJA;AACE;AACE;AACD;AtB0zJH;AsBzzJE;AACE;AACE;AACD;AtB2zJL;AsB1zJI;AtB4zJJ;AsB1zJI;AACE;AACD;AtB4zJL;AsB1zJI;AtB4zJJ;AsBtzJI;AACE;AACD;AtBwzJL;AsBtzJI;AtBwzJJ;AsBvzJI;AACE;AACD;AAGD;AACA;AtBuzJJ;AACA;AsBvzJI;AtByzJJ;AsBxzJI;AACE;AACA;AACD;AACF;AtB0zJH;AsBxzJE;AACD;AAED;AtByzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBzzJO;AAQL;AACA;AAKA;AACA;AAEA;AAEA;AAMA;AACA;AAGA;AtBuyJF;AsBtyJE;AACE;AtBwyJJ;AsBryJI;AACE;AACA;AACE;AACD;AtBuyJP;AACA;AsBryJM;AtBuyJN;AsBtyJM;AACE;AACD;AACF;AAGD;AACA;AtBsyJJ;AACA;AsBtyJI;AACE;AACD;AtBwyJL;AsBtyJI;AACE;AACA;AACD;AtBwyJL;AsBvyJI;AACD;AtByyJH;AsBvyJE;AAEA;AACE;AACE;AtBwyJN;AsBvyJM;AACE;AACD;AAED;AtBwyJN;AACA;AsBxyJM;AACA;AACA;AACD;AACF;AACF;AAED;AtByyJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBzyJO;AACL;AtB2yJF;AsB1yJE;AACE;AACD;AtB4yJH;AsB3yJE;AACE;AACE;AACA;AAII;AACE;AACD;AtB0yJX;AsBzyJU;AAAS;AAAM;AAAQ;AAAQ;AAAvB;AACT;AAGH;AACD;AACF;AACF;AAED;AtB6yJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB7yJO;AACL;AAEI;AAA2B;AAA5B;AAKJ;AAED;AtB2yJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB3yJO;AACL;AACE;AACD;AtB6yJH;AsB5yJE;AACA;AACA;AtB8yJF;AsB7yJE;AACE;AACA;AACD;AtB+yJH;AsB9yJE;AACE;AACA;AAAW;AAAO;AACnB;AACF;AAED;AtBizJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBjzJA;AACE;AACD;AAED;AtBkzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBlzJO;AACL;AACE;AACE;AAEI;AAMD;AACJ;AACC;AACD;AACC;AACD;AACF;AtB8yJH;AsB7yJE;AAAO;AAA4B;AAAnC;AACD;AAED;AtBizJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBnzJE;AtBqzJF;AACA;AACA;AACA;AACA;AACA;AsBnzJE;AAAiD;AtBszJnD;AsBrzJI;AACA;AACA;AtBuzJJ;AsBtzJI;AACA;AtBwzJJ;AsBvzJI;AAEA;AtBwzJJ;AsBvzJI;AAII;AACA;AACA;AAAmC;AAAA;AACjC;AAA0B;AAAa;AAAd;AAC1B;AtB2zJT;AsB1zJQ;AACD;AAGD;AAAW;AAba;AAe3B;AAED;AtB0zJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB5zJI;AACA;AAAkC;AAAA;AAClC;AAOD;AAED;AtByzJF;AACA;AACA;AACA;AACA;AsBzzJI;AACA;AACD;AtB2zJH;AACA;AACA;AsB1zJA;AtB4zJA;AACA;AACA;AACA;AACA;AACA;AACA;AsB9zJO;AACL;AtBg0JF;AsB9zJE;AACE;AACD;AtBg0JH;AACA;AsB/zJE;AACD;AAGD;AtB+zJA;AACA;AsB/zJA;AAEA;AtBg0JA;AACA;AACA;AACA;AACA;AACA;AsB/zJO;AACL;AADgC;AAAA;AtBo0JlC;AsBj0JE;AACE;AACA;AtBm0JJ;AsBl0JI;AACE;AACD;AtBo0JL;AsBn0JI;AACE;AACD;AtBq0JL;AACA;AsBp0JI;AACE;AACD;AACF;AtBs0JH;AsBr0JE;AACD;AAED;AtBs0JA;AACA;AACA;AACA;AACA;AACA;AsBt0JO;AACL;AAAqC;AAAD;AAGpC;AtBw0JF;AsBv0JE;AAEA;AACD;AAED;AtBu0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsBv0JO;AACL;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACD;AACC;AACA;AACD;AACF;AAED;AtBw0JA;AACA;AsBx0JO;AAEP;AtBy0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsB10JO;AACL;AAAO;AAA6D;AAApE;AAGD;AAED;AtB40JA;AACA;AACA;AACA;AACA;AsB50JO;AACL;AAID;AAED;AtB00JA;AACA;AACA;AACA;AsB10JO;AACL;AACA;AAID;AAED;AtBw0JA;AACA;AACA;AACA;AACA;AsBx0JO;AACL;AAMD;AAED;AtBo0JA;AACA;AACA;AACA;AACA;AsBp0JO;AACL;AACD;AtBs0JD;AACA;AACA;AACA;AACA;AACA;AACA;AuB39KA;AvB69KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB39KA;AvB69KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuB39KO;AACL;AACD;AvB69KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBj/KA;AxBm/KA;AwBl/KA;AxBo/KA;AwB1gLA;AxB4gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB1gLA;AxB4gLA;AACA;AACA;AwBtgLA;AACA;AxBwgLA;AwBtgLA;AxBwgLA;AACA;AACA;AwBtgLA;AAEA;AxBugLA;AACA;AACA;AACA;AwBtgLA;AAEA;AxBugLA;AACA;AACA;AACA;AwBtgLA;AAEA;AxBugLA;AACA;AACA;AACA;AwBtgLA;AAEA;AxBugLA;AACA;AACA;AACA;AACA;AwBtgLO;AACL;AxBwgLF;AwBvgLE;AACE;AACE;AACD;AxBygLL;AwBxgLI;AACA;AACD;AxB0gLH;AwBzgLE;AAAO;AAA4B;AAAnC;AACD;AAED;AxB6gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB7gLO;AACL;AACA;AACE;AACD;AxB+gLH;AACA;AwB9gLE;AACA;AxBghLF;AwB/gLE;AACE;AxBihLJ;AwBhhLI;AAME;AACA;AACD;AxB6gLL;AwB5gLI;AACA;AACD;AxB8gLH;AwB7gLE;AACD;AAED;AxB8gLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB9gLO;AACL;AAAO;AAA4B;AAAW;AAAuB;AAArE;AACD;AAED;AxBohLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBphLO;AACL;AACE;AACD;AACC;AACE;AACD;AxBshLL;AwBrhLI;AACD;AACF;AAED;AxBshLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBthLO;AACL;AACA;AxBwhLF;AwBvhLE;AACE;AACD;AxByhLH;AwBxhLE;AxB0hLF;AwBzhLE;AACE;AACD;AxB2hLH;AwB1hLE;AACE;AACD;AACC;AACD;AACF;AAED;AxB2hLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwB3hLO;AAAqC;AAAX;AAAW;AxBgiL5C;AwB/hLE;AACE;AACD;AxBiiLH;AwBhiLE;AACE;AACD;AACD;AxBkiLF;AACA;AwBliLE;AAAgB;AAAG;AAAG;AAAP;AxBwiLjB;AwBviLE;AAAyB;AAAA;AAAA;AAAA;AxB6iL3B;AACA;AwB3iLI;AACE;AACE;AACD;AACC;AACE;AACD;AxB6iLT;AwB5iLQ;AACE;AAAY;AAAS;AAAS;AAAnB;AACZ;AxBkjLT;AwBjjLQ;AACD;AACC;AAA0B;AAAwB;AAClD;AAA0B;AAAwB;AxBujL1D;AwBtjLQ;AACE;AACD;AxBwjLT;AwBvjLQ;AACE;AACA;AAAY;AAAS;AAAS;AAAnB;AACZ;AxB6jLT;AwB5jLQ;AACD;AACF;AxB8jLL;AACA;AwB7jLI;AACE;AACD;AACF;AxB+jLH;AwB9jLE;AACD;AAED;AxB+jLA;AACA;AACA;AACA;AACA;AACA;AwB/jLA;AACE;AACE;AACD;AxBikLH;AwBhkLE;AACE;AAAwB;AAG3B;AAED;AxBgkLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBhkLO;AACL;AAAO;AAA4B;AAAnC;AACD;AAED;AxBokLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBpkLO;AACL;AAAO;AAA4C;AAAnD;AACD;AAED;AxBwkLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwBxkLO;AACL;AACD;AxB0kLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBj2LA;AzBm2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBj2LA;AzBm2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBj2LO;AAEP;AzBk2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBl2LO;AAEP;AzBm2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBn2LO;AAEP;AzBo2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBp2LO;AACL;AACA;AACA;AAH+B;AAMjC;AzBq2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBt2LO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARK;AAUR;AAED;AzBu2LA;AACA;AACA;AACA;AACA;AACA;AACA;AyBv2LO;AACL;AAMD;AAED;AzBm2LA;AACA;AACA;AACA;AACA;AACA;AACA;AyBn2LO;AACL;AAMD;AAED;AzB+1LA;AACA;AACA;AACA;AACA;AACA;AyB/1LO;AACL;AACA;AACA;AACA;AzBi2LF;AyBh2LE;AACE;AzBk2LJ;AyBj2LI;AACE;AACD;AzBm2LL;AyBl2LI;AACA;AACA;AACA;AzBo2LJ;AyBn2LI;AACE;AACD;AACF;AzBq2LH;AyBp2LE;AACE;AACD;AzBs2LH;AyBr2LE;AACD;AAED;AzBs2LA;AACA;AACA;AACA;AACA;AACA;AACA;AyBt2LO;AACL;AACE;AACD;AACC;AACD;AACC;AACD;AACF;AAED;AzBu2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBv2LO;AAKL;AACE;AAA4B;AAC1B;AACA;AACA;AACA;AAJ0B;AzB22LhC;AyBp2LE;AACE;AACD;AACC;AACD;AACF;AAED;AzBq2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBr2LO;AACL;AAMD;AAED;AzBi2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyBj2LO;AACL;AACE;AACD;AzBm2LH;AyBl2LE;AACD;AAED;AzBm2LA;AACA;AACA;AACA;AACA;AACA;AyBn2LO;AACL;AAMD;AAED;AzB+1LA;AACA;AACA;AACA;AACA;AACA;AyB/1LO;AACL;AACD;AAED;AzBg2LA;AACA;AACA;AACA;AACA;AACA;AyBh2LO;AACL;AACE;AACD;AzBk2LH;AyBj2LE;AAMD;AAED;AzB61LA;AACA;AACA;AACA;AACA;AyB71LO;AACL;AACE;AACD;AzB+1LH;AyB91LE;AACE;AACA;AACA;AACA;AAJK;AAMR;AzBg2LD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B7nMA;A1B+nMA;A0B9nMA;A1BgoMA;A0B/nMA;A1BioMA;A0BhoMA;A1BkoMA;A0BjoMA;A1BmoMA;A0BloMA;A1BooMA;A0BzpMA;A1B2pMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BjpMA;AAEA;A1BkpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BlpMO;AAEP;A1BmpMA;AACA;AACA;AACA;AACA;AACA;A0BnpMO;AAEP;A1BopMA;AACA;AACA;AACA;AACA;AACA;A0BrpMO;AACL;AACD;AAED;A1BspMA;AACA;AACA;AACA;AACA;A0BtpMO;AACL;AACD;AAED;A1BupMA;AACA;AACA;AACA;AACA;A0BvpMO;AACL;AACA;AACA;AACA;AACA;AALsB;AAQxB;A1BwpMA;AACA;AACA;AACA;AACA;AACA;AACA;A0BzpMO;AACL;AACD;AAED;A1B0pMA;AACA;AACA;AACA;AACA;A0B1pMA;AAEA;A1B2pMA;AACA;AACA;A0B1pMO;AACL;AACD;AAED;A1B2pMA;AACA;AACA;AACA;AACA;AACA;AACA;A0B3pMA;AAAsB;AAAA;AAEtB;A1B8pMA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9pMA;AAA2B;AAEvB;AAAA;AAFuB;AAM3B;A1B+pMA;AACA;AACA;AACA;AACA;AACA;A0B/pMA;AAAuC;AAAA;AAGvC;A1BiqMA;AACA;AACA;AACA;AACA;A0BjqMA;AAAwC;AAAA;AAGxC;A1BmqMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BrqME;A1BuqMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BrqME;AAA6C;A1BwqM/C;A0BxqM+C;AAAjB;AAAiB;A1B4qM/C;A0B3qMI;A1B6qMJ;AACA;AACA;AACA;A0B3qMI;AAEA;A1B4qMJ;A0B3qMI;AAEA;A1B4qMJ;A0B3qMI;AAEA;A1B4qMJ;A0B3qMI;AAEA;A1B4qMJ;A0B3qMI;AAEA;AACE;AAEgB;AAAA;AAEZ;AACE;AAAiB;AAA4B;AAC9C;AACF;AACJ;AACF;AAED;A1B4qMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9qMI;AACD;AAED;A1B+qMF;AACA;AACA;AACA;AACA;AACA;A0B/qMI;AACA;AACE;AACD;A1BirML;AACA;A0B/qMI;AACE;AACD;A1BirML;AACA;A0B/qMI;AACE;AACD;A1BirML;AACA;A0B/qMI;AACE;AACD;A1BirML;AACA;A0B/qMI;AACD;AAED;A1BgrMF;AACA;AACA;AACA;AACA;AACA;AACA;A0BhrMI;AACE;A1BkrMN;A0BjrMM;AACE;AACD;AACC;AACD;AACC;AACD;A1BmrMP;A0BlrMM;A1BorMN;A0BlrMM;A1BorMN;A0BnrMM;AACE;AACA;AACD;AACC;AACD;A1BqrMP;A0BprMM;AACD;AACF;AAED;A1BqrMF;AACA;AACA;AACA;AACA;AACA;A0BrrMI;AACD;AAED;A1BsrMF;AACA;AACA;AACA;AACA;AACA;AACA;A0BtrMI;AACE;AACD;AACF;AAED;A1BurMF;AACA;AACA;AACA;AACA;AACA;AACA;A0BvrMI;AACE;AACD;AACF;AAED;A1BwrMF;AACA;AACA;AACA;AACA;AACA;AACA;A0BxrMI;AACE;AACD;AACF;AAED;A1ByrMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BzrMI;AACE;AACD;AACC;AAIA;AACA;AACD;AACF;AAED;A1BurMF;AACA;AACA;AACA;AACA;AACA;AACA;A0BvrMI;A1ByrMJ;A0BxrMI;AACE;A1B0rMN;A0BxrMM;AACD;AACF;AAED;A1ByrMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BzrMI;A1B2rMJ;A0B1rMI;AACE;A1B4rMN;A0B1rMM;AACD;AACF;AAED;A1B2rMF;AACA;AACA;AACA;AACA;AACA;AACA;A0B3rMI;AACA;AACA;AACD;AAED;A1B4rMF;AACA;AACA;AACA;AACA;AACA;AACA;A0B5rMI;AACA;AACA;AACA;AACD;AAED;A1B6rMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B7rMI;A1B+rMJ;A0B9rMI;AACE;AAG4B;AAAuB;AAGpD;A1B6rML;A0B5rMI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;A1B8rMN;A0B7rMM;AACE;AACA;A1B+rMR;A0B9rMQ;AACE;AACD;A1BgsMT;A0B/rMQ;AACA;AACA;AACD;A1BisMP;A0BhsMM;AACA;AACA;AACA;AACA;A1BksMN;A0BhsMM;A1BksMN;A0BjsMM;AACD;A1BmsML;A0BlsMI;AACD;AAED;A1BmsMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BnsMI;AACA;AAMA;AAAO;AAAyB;AAAhC;AACD;AAED;A1BksMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BlsMI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A1BisMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BjsMI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A1BgsMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BhsMI;AAMA;AAAO;AAAuB;AAA9B;AACD;AAED;A1B+rMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B/rMI;AAMA;AAAO;AAAwB;AAA/B;AACD;AAED;A1B8rMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9rMI;AACE;AACD;A1BgsML;A0B/rMI;AACD;AAED;A1BgsMF;AACA;AACA;AACA;AACA;AACA;A0BhsMI;A1BksMJ;A0BjsMI;AACE;AACE;AACD;AACC;AACD;AACF;AACC;AACD;AACF;AAED;A1BksMF;AACA;AACA;AACA;AACA;AACA;AACA;A0BlsMI;AACE;AAA+B;AAAuB;AACvD;A1BssML;A0BrsMI;AACD;AAED;A1BssMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BtsMI;AACA;AAEA;AACA;AACA;A1BusMJ;A0BtsMI;AACE;AACD;A1BwsML;A0BvsMI;AACE;AACD;A1BysML;A0BxsMI;AACD;AAED;A1BysMF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BzsMI;AACE;AACD;AACC;AACD;AACF;A1B2sMH;AACA;AACA;A0B1sMA;A1B4sMA;AACA;AACA;AACA;AACA;AACA;AACA;A0B9sMA;AAAiC;AAC/B;AAAuB;AADQ;AAAA;AAGjC;A1BmtMA;AACA;AACA;AACA;AACA;A0BntMA;AACE;AACA;AACE;AACD;A1BqtMH;A0BptME;AACD;AAED;A1BqtMA;AACA;AACA;AACA;AACA;A0BrtMA;AACE;AACE;AACD;AACF;AAED;A1BstMA;AACA;AACA;AACA;AACA;AACA;A0BttMO;AACL;A1BwtMF;A0BvtME;AACE;AACD;A1BytMH;A0B7tMiD;AAAA;AAO/C;A1B0tMF;A0BxtME;AACE;AACD;A1B0tMH;AACA;A0BztME;AACA;AACD;AAED;A1B0tMA;AACA;AACA;AACA;AACA;AACA;A0B1tMO;AACL;AACA;A1B4tMF;A0B3tME;AACE;A1B6tMJ;A0B5tMI;AACE;AACD;AACC;AACE;AACD;A1B8tMP;A0B7tMM;AACD;AACF;A1B+tMH;A0B7tME;AACE;AACD;AACC;AACD;A1B+tMH;A0B9tME;AACD;AAED;A1B+tMA;AACA;AACA;AACA;AACA;AACA;A0B/tMO;AACL;AACA;AACE;AACA;A1BiuMJ;A0BhuMI;AACD;AACF;AAED;A1BiuMA;AACA;AACA;AACA;AACA;AACA;A0BjuMA;AACE;AACA;AACA;AAHiC;AAMnC;AAEA;A1BiuMA;AACA;AACA;AACA;AACA;AACA;A0BhuMA;AAEA;A1BiuMA;AACA;AACA;A0BhuMO;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A1BiuMF;A0BhuME;AACA;AACD;AAED;A1BiuMA;AACA;AACA;AACA;A0BjuMO;AACL;AACD;AAED;A1BkuMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BluMO;AACL;AACE;AACD;A1BouMH;A0BnuME;AACE;AACD;AACC;AACE;AACD;A1BquML;A0BpuMI;AACD;AACF;AAED;A1BquMA;AACA;AACA;AACA;AACA;AACA;A0BruMA;AACE;AACE;AACD;A1BuuMH;A0BtuME;AAGI;A1BsuMN;A0BruMM;AACE;AACD;A1BuuMP;A0BtuMM;AACD;AAGJ;AAED;A1BquMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BruMO;AACL;AACE;AACD;A1BuuMH;A0BtuME;AACE;AACD;A1BwuMH;A0BvuME;AACE;A1ByuMJ;A0BxuMI;AACE;AACD;A1B0uML;A0BzuMI;AACE;AACD;A1B2uML;A0B1uMI;AACD;AACF;AAED;A1B2uMA;AACA;AACA;AACA;AACA;AACA;A0B3uMO;AACL;AACE;AACD;A1B6uMH;A0B5uME;AACD;AAED;A1B6uMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0B7uMO;AAaL;AACE;AACD;A1BmuMH;A0BluME;AAAa;AAAc;AAa5B;AAED;A1BytMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0BztMO;AAaL;AAAc;AAAc;AAa7B;A1BqsMD;AACA;AACA;AACA;AACA;AACA;AACA;A2BnqOA;A3BqqOA;A2BrrOA;A3BurOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2BnrOA;A3BqrOA;AACA;AACA;AACA;AACA;A2BnrOO;AACL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVK;AAYR;A3BqrOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BntOA;A5BqtOA;A4BptOA;A5BstOA;A4BvuOA;A5ByuOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BpuOA;A5BsuOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BpuOO;AAEP;A5BquOA;AACA;AACA;AACA;AACA;AACA;A4BruOA;AAEA;A5BsuOA;AACA;AACA;AACA;AACA;A4BruOO;AACL;A5BuuOF;A4BtuOE;AACE;AACD;A5BwuOH;A4BvuOE;AACD;AAED;A5BwuOA;AACA;AACA;AACA;AACA;AACA;A4BxuOA;AACE;AACA;AAGA;AACA;AACA;A5BwuOF;A4BvuOE;AACA;AAEA;AACA;AAEA;AACA;AAEE;AACA;AAEF;AAEA;A5BouOF;A4BluOE;AACE;AACD;AAGD;AACA;AACA;A5BkuOF;AACA;A4BluOE;AACE;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBK;AA0BR;AAED;A5B+tOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4B/tOA;AACE;AACA;AACA;AACE;AACD;A5BiuOH;A4B/tOE;AACE;AACD;AAGD;AACA;AACA;AACA;A5B+tOF;AACA;A4B/tOE;AACD;AAED;A5BguOA;AACA;AACA;AACA;AACA;AACA;AACA;A4BhuOO;AACL;AACD;AAED;A5BiuOA;AACA;A4BjuOO;AACL;AACD;A5BmuOD;AACA;AACA;AACA;AACA;AACA;AACA;A6B14OA;A7B44OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6B14OA;A7B44OA;AACA;AACA;AACA;AACA;AACA;AACA;A6B54OE;A7B84OF;AACA;A6B54OE;AACE;AACA;AACD;AAED;A7B64OF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Bh5Oe;A7Bk5Of;A6Bj5OI;AACE;AACD;A7Bm5OL;A6Bl5OI;AACA;AACE;AACD;AACF;AAED;A7Bm5OF;AACA;AACA;AACA;AACA;AACA;A6Bn5OI;AACE;AACD;A7Bq5OL;A6Bp5OI;A7Bs5OJ;A6Br5OI;AACE;AACD;AACF;AAED;A7Bs5OF;AACA;AACA;AACA;AACA;A6Bt5OI;AACE;AACD;A7Bw5OL;A6Bv5OI;AACD;AAED;A7Bw5OF;AACA;AACA;AACA;AACA;AACA;A6Bx5OI;AACE;AACD;A7B05OL;A6Bz5OI;A7B25OJ;A6B15OI;AACE;AACA;AACD;AACF;AAED;A7B25OF;AACA;AACA;AACA;AACA;AACA;A6B35OI;AACE;AACD;A7B65OL;A6B55OI;AACD;A7B85OH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B1/OA;A9B4/OA;A8B3/OA;A9B6/OA;A8B5/OA;A9B8/OA;A8BhhPA;A9BkhPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B5gPA;A9B8gPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8B5gPA;AACE;AACA;AACA;AAHe;AAMjB;A9B6gPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BlhPE;A9BohPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8BnhPA;A9BqhPA;AACA;AACA;AACA;AACA;AACA;A8BthPA;AAEA;A9BuhPA;AACA;AACA;AACA;AACA;AACA;AACA;A8BthPO;AACL;AACE;AAEI;AACE;AACE;AACD;AACF;A9BuhPT;A8BthPQ;AACD;AAGH;AAKD;AACD;AACD;AAED;A9BihPA;AACA;AACA;AACA;AACA;AACA;A8BjhPO;AACL;AACD;AAED;A9BkhPA;AACA;AACA;AACA;AACA;AACA;AACA;A8BlhPO;AACL;AAAmC;AAAsC;AACzE;AACD;AAED;A9BqhPA;AACA;AACA;AACA;AACA;AACA;A8BrhPO;AACL;AACA;AACA;AAEA;AACE;AACD;AACF;A9BshPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BjqPA;A/BmqPA;A+BlqPA;A/BoqPA;A+BnqPA;A/BqqPA;A+BpqPA;A/BsqPA;A+B/rPA;A/BisPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B/rPA;A/BisPA;AACA;AACA;AACA;AACA;A+B1rPA;A/B4rPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B1rPA;AAEA;A/B2rPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BhsPE;A/BksPF;AACA;AACA;AACA;AACA;AACA;AACA;A+BjsPA;A/BmsPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BzsPE;A/B2sPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B1sPA;A/B4sPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B9sPO;AACL;AACA;AACA;AACA;A/BgtPF;A+B9sPE;AACA;A/BgtPF;A+B/sPE;AACE;AACE;AACD;A/BitPL;AACA;A+BhtPI;AACD;AACC;AACA;AACD;AACF;AAED;A/BitPA;AACA;AACA;AACA;AACA;AACA;AACA;A+BjtPO;AACL;AACA;AAKA;AAKA;A/B2sPF;A+B1sPE;AACE;AACA;AAIE;AAAA;AACA;AAAe;AAElB;AACC;AAAgD;AAAA;AAChD;AACD;AACF;AAED;A/B2sPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B3sPO;AACL;AACA;A/B6sPF;A+B5sPE;AACE;AACD;AACF;AAED;A/B6sPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B7sPO;AAML;AACA;AACA;A/B0sPF;A+BzsPE;AACE;AACD;AACF;AAED;A/B0sPA;AACA;AACA;AACA;AACA;AACA;AACA;A+B1sPO;AACL;AACA;AACA;AACD;AAED;A/B2sPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B3sPO;AACL;AACA;AACD;AAED;A/B4sPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B5sPO;AACL;AACD;AAED;A/B6sPA;AACA;AACA;AACA;AACA;AACA;AACA;A+B7sPO;AACL;A/B+sPF;A+B9sPE;AACE;AACD;AACC;AACD;AACF;AAED;A/B+sPA;AACA;AACA;AACA;AACA;AACA;AACA;A+B/sPO;AACL;AACD;AAED;A/BgtPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BhtPO;AACL;AACA;AACA;AACD;AAED;A/BitPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BjtPA;AACE;AACA;A/BmtPF;A+BltPE;AACE;AACD;AACC;AACD;AACF;AAED;A/BmtPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BntPO;AACL;AACD;AAED;A/BotPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BptPO;AACL;AAID;AAED;A/BktPA;AACA;AACA;AACA;AACA;AACA;A+BltPO;AACL;AACA;AACD;AAED;A/BmtPA;AACA;AACA;AACA;AACA;AACA;A+BntPO;AACL;AACD;AAED;A/BotPA;AACA;AACA;AACA;AACA;AACA;AACA;A+BptPO;AACL;AACD;AAED;A/BqtPA;AACA;AACA;AACA;AACA;AACA;AACA;A+BrtPO;AACL;AACA;A/ButPF;A+BttPE;AACE;AACE;AAAO;AAAmC;AAA1C;AACD;AAEA;AACF;A/B0tPH;A+BztPE;AACD;AAED;A/B0tPA;AACA;AACA;AACA;AACA;A+B1tPO;AACL;AACE;AACE;AAAyB;AAG3B;AAAuC;AAAsB;AAC9D;A/B6tPH;A+B5tPE;AAAO;AAA8C;AAArD;AACD;AAED;A/BguPA;AACA;AACA;AACA;AACA;A+BhuPA;AACE;AACA;AACD;AAED;A/BiuPA;AACA;AACA;AACA;AACA;AACA;AACA;A+BjuPA;AACE;AAAO;AAAqD;AAA5D;AAID;AAED;A/BkuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BluPA;AACE;AAIA;AACA;A/BiuPF;A+BhuPE;AACE;AACA;AACA;AACA;AACA;AACA;AAEA;A/BiuPJ;A+BhuPI;AACE;AACD;AACF;A/BkuPH;A+BjuPE;AACD;AAED;A/BkuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BluPA;AACE;AACA;A/BouPF;A+BluPE;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AANiB;AAQpB;A/BouPH;A+BluPE;AACE;AACA;AACD;A/BouPH;A+BluPE;AACA;AAGA;A/BkuPF;A+BjuPE;AACE;AACA;AACD;AACF;AAED;A/BkuPA;AACA;AACA;AACA;AACA;AACA;A+BluPA;AACE;A/BouPF;A+BnuPE;AACE;AACD;AAGD;AACA;A/BmuPF;AACA;A+BnuPE;AACA;AACA;AAAO;AAAkC;AAAzC;AACD;AAED;A/BuuPA;AACA;AACA;AACA;AACA;AACA;A+BvuPA;AACE;AACA;A/ByuPF;A+BxuPE;AACE;AACE;AACD;A/B0uPL;A+BzuPI;AACD;A/B2uPH;A+BzuPE;AACA;AACD;AAED;A/B0uPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+B1uPA;AACE;AACA;A/B4uPF;A+B3uPE;AACE;AACE;AACD;AACC;AACA;AACA;AAAoC;AAAwB;AAC7D;AACF;A/B+uPH;A+B9uPE;AACD;AAED;A/B+uPA;AACA;AACA;AACA;AACA;AACA;A+B/uPA;AACE;A/BivPF;A+BhvPE;AACE;AACD;A/BkvPH;A+BjvPE;AACD;AAED;A/BkvPA;AACA;AACA;AACA;AACA;AACA;A+BlvPO;AACL;AACD;AAED;A/BmvPA;AACA;AACA;AACA;AACA;AACA;AACA;A+BnvPO;AACL;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;A/BuvPA;AACA;AACA;AACA;AACA;AACA;A+BvvPO;AACL;AACD;AAED;A/BwvPA;AACA;AACA;AACA;AACA;AACA;A+BxvPO;AACL;AACD;AAED;A/ByvPA;AACA;AACA;AACA;A+BzvPA;AACE;AACA;AACA;A/B2vPF;A+B9vPyC;AAKrC;AACE;AACD;A/B4vPL;A+B3vPI;A/B6vPJ;A+B5vPI;AACE;AACD;AACC;AAAmC;AAAA;AAGpC;AAfoC;A/B8wPzC;A+B1wPE;AAA2B;A/B6wP7B;A+B7wP6B;AAY1B;AACF;AAED;A/BmwPA;AACA;AACA;AACA;AACA;A+BnwPA;AACE;AACE;AACD;A/BqwPH;A+BpwPE;AACE;AACD;AACC;AACA;AACA;AACD;AACF;AAED;A/BqwPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A+BrwPO;AACL;A/BuwPF;A+BrwPE;AACE;AACD;A/BuwPH;A+BtwPE;AAIA;AACA;AACA;AACD;AAED;A/BowPA;AACA;AACA;AACA;AACA;A+BpwPO;AACL;AAIA;AAIE;AAAA;AAEH;AAED;A/B+vPA;AACA;AACA;AACA;AACA;AACA;A+B/vPO;AACL;AACE;AACD;AACF;AAED;A/BgwPA;AACA;AACA;AACA;AACA;AACA;A+BhwPA;AACE;A/BkwPF;A+BhwPE;AACD;AAED;A/BiwPA;AACA;A+BjwPA;AACE;AADuC;AAAA;AAAA;AAGvC;A/BqwPF;A+BpwPE;AACE;AACA;AACA;AACA;AACA;AACA;AANK;AAQR;A/BswPD;AACA;AACA;AACA;AACA;AACA;AACA;AgC75QA;AhC+5QA;AgCv5QA;AhCy5QA;AgCj7QA;AhCm7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCl6QA;AACO;AhCo6QP;AACA;AACA;AACA;AACA;AACA;AACA;AgCv6QE;AhCy6QF;AACA;AACA;AACA;AgCv6QE;AhCy6QF;AACA;AACA;AACA;AACA;AgCv6QI;AAAO;AAAiF;AAAxF;AAKD;AAED;AhCu6QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCv6QI;AAAO;AAAiF;AAAxF;AAKD;AAED;AhCu6QF;AACA;AACA;AACA;AACA;AACA;AACA;AgCv6QI;AAAO;AAA+C;AAAtD;AAKD;AAED;AhCu6QF;AACA;AACA;AACA;AACA;AACA;AACA;AgCv6QI;AAAO;AAA+C;AAAtD;AAKD;AAED;AhCu6QF;AACA;AACA;AACA;AACA;AACA;AgCv6QI;AAAO;AAAqD;AAA5D;AAID;AAED;AhCw6QF;AACA;AACA;AACA;AACA;AACA;AgCx6QI;AAAO;AAAiE;AAAxE;AAID;AAED;AhCy6QF;AACA;AACA;AACA;AACA;AACA;AgCz6QI;AAAO;AAAkF;AAAzF;AAKD;AAED;AhCy6QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCz6QI;AAAO;AAAqD;AAA5D;AAID;AAED;AhC06QF;AACA;AACA;AACA;AACA;AACA;AACA;AgC16QI;AACD;AAED;AhC26QF;AACA;AACA;AACA;AACA;AACA;AACA;AgC56QyD;AAAvB;AAAuB;AhCg7QzD;AgC/6QI;AACE;AACA;AACA;AAAmC;AAAO;AAI3C;AhCg7QL;AgC/6QI;AAAO;AAAkG;AAAzG;AAKD;AAED;AhC+6QF;AACA;AACA;AACA;AACA;AACA;AgC/6QI;AAAO;AAAkG;AAAzG;AAKD;AAED;AhC+6QF;AACA;AACA;AACA;AACA;AACA;AgC/6QI;AAAO;AAAuD;AAA9D;AAID;AAED;AhCg7QF;AACA;AACA;AACA;AACA;AACA;AgCh7QI;AAAO;AAAqE;AAA5E;AAKD;AAED;AhCg7QF;AACA;AACA;AACA;AACA;AACA;AgCh7QI;AAAO;AAAqD;AAA5D;AAID;AAED;AhCi7QF;AACA;AACA;AACA;AACA;AACA;AgCj7QI;AAAO;AAAiD;AAAxD;AAID;AAED;AhCk7QF;AACA;AACA;AACA;AACA;AACA;AgCl7QI;AAAO;AAAiF;AAAxF;AAKD;AAED;AhCk7QF;AACA;AACA;AACA;AACA;AACA;AgCl7QI;AAAO;AAA6F;AAApG;AAKD;AAED;AhCk7QF;AACA;AACA;AACA;AACA;AACA;AgCl7QI;AAAO;AAA8C;AAArD;AAID;AAED;AhCm7QF;AACA;AACA;AACA;AACA;AACA;AgCn7QI;AAAO;AAAsD;AAA7D;AAID;AAED;AhCo7QF;AACA;AACA;AACA;AACA;AACA;AgCp7QI;AAAO;AAAsD;AAA7D;AAID;AAED;AhCq7QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCr7QI;AAAO;AAA2F;AAAlG;AAID;AAED;AhCs7QF;AACA;AACA;AACA;AACA;AACA;AACA;AgCt7QI;AAAO;AAA+D;AAAtE;AAID;AAED;AhCu7QF;AACA;AACA;AACA;AACA;AACA;AACA;AgCv7QI;AAAO;AAAgD;AAAvD;AAID;AAED;AhCw7QF;AACA;AACA;AACA;AACA;AACA;AgCx7QI;AACD;AAED;AhCy7QF;AACA;AACA;AACA;AACA;AACA;AACA;AgCz7QI;AAAO;AAA6F;AAApG;AAKD;AAED;AhCy7QF;AACA;AACA;AACA;AACA;AACA;AgCz7QI;AAAO;AAA4D;AAAnE;AAID;AAED;AhC07QF;AACA;AACA;AACA;AACA;AACA;AgC17QI;AAAO;AAAuD;AAA9D;AAID;AAED;AhC27QF;AACA;AACA;AACA;AACA;AACA;AgC37QI;AAAO;AAAuD;AAA9D;AAID;AAED;AhC47QF;AACA;AACA;AACA;AACA;AACA;AgC57QI;AAAO;AAAkD;AAAzD;AAID;AAED;AhC67QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC77QI;AAAO;AAAqF;AAA5F;AAID;AAED;AhC87QF;AACA;AACA;AACA;AACA;AACA;AgC97QI;AAAO;AAAkE;AAAzE;AAID;AAED;AhC+7QF;AACA;AACA;AACA;AACA;AACA;AgC/7QI;AAAO;AAA4E;AAAnF;AAID;AAED;AhCg8QF;AACA;AACA;AACA;AACA;AACA;AgCh8QI;AAAO;AAAgF;AAAvF;AAMD;AAED;AhC+7QF;AACA;AACA;AACA;AACA;AACA;AACA;AgC/7QI;AACE;AACC;AAFH;AAID;AAED;AhCg8QF;AACA;AACA;AACA;AACA;AACA;AgCh8QI;AACE;AACC;AAFH;AAID;AAED;AhCi8QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCj8QI;AACE;AACC;AAFH;AAID;AAED;AhCk8QF;AACA;AACA;AACA;AACA;AACA;AgCl8QI;AACE;AACC;AAFH;AAID;AAED;AhCm8QF;AACA;AACA;AACA;AACA;AACA;AgCn8QI;AACE;AACC;AAFH;AAID;AAED;AhCo8QF;AACA;AACA;AACA;AACA;AACA;AgCp8QI;AACE;AACC;AAFH;AAID;AAED;AhCq8QF;AACA;AACA;AACA;AACA;AACA;AgCr8QI;AACE;AACC;AAFH;AAID;AAED;AhCs8QF;AACA;AACA;AACA;AACA;AACA;AgCt8QI;AACE;AACC;AAFH;AAID;AAED;AhCu8QF;AACA;AACA;AACA;AACA;AACA;AgCv8QI;AACD;AAED;AhCw8QF;AACA;AACA;AACA;AACA;AACA;AACA;AgCx8QI;AACE;AACC;AAFH;AAID;AAED;AhCy8QF;AACA;AACA;AACA;AACA;AACA;AgCz8QI;AACE;AACC;AAFH;AAID;AAED;AhC08QF;AACA;AACA;AACA;AACA;AACA;AACA;AgC18QI;AACD;AAED;AhC28QF;AACA;AACA;AACA;AACA;AACA;AACA;AgC38QI;AACD;AAED;AhC48QF;AACA;AACA;AACA;AACA;AACA;AACA;AgC58QI;AACE;AACC;AAFH;AAID;AAED;AhC68QF;AACA;AACA;AACA;AACA;AACA;AACA;AgC78QI;AACD;AAED;AhC88QF;AACA;AACA;AACA;AACA;AACA;AgC98QI;AACE;AACC;AAFH;AASD;AAED;AhC08QF;AACA;AACA;AACA;AACA;AACA;AgC18QI;AACE;AACC;AAFH;AAID;AAED;AhC28QF;AACA;AACA;AACA;AACA;AACA;AgC38QI;AAAO;AAA0D;AAAjE;AAID;AAED;AhC48QF;AACA;AACA;AACA;AACA;AACA;AgC58QI;AAAO;AAAmD;AAA1D;AAID;AAED;AhC68QF;AACA;AACA;AACA;AACA;AACA;AgC78QI;AACA;AAAO;AAA4C;AAAnD;AAID;AAED;AhC88QF;AACA;AACA;AACA;AACA;AACA;AgC98QI;AAAO;AAAiE;AAAxE;AAID;AAED;AhC+8QF;AACA;AACA;AACA;AACA;AACA;AgC/8QI;AACE;AACC;AAFH;AAQD;AAED;AhC48QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgC58QI;AACE;AACC;AAFH;AAQD;AAED;AhCy8QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCz8QI;AAAO;AAAoE;AAA3E;AAMD;AAED;AhCw8QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCx8QI;AAAO;AAAyG;AAAhH;AAMD;AAED;AhCu8QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCv8QI;AAAO;AAAwC;AAA/C;AAID;AAED;AhCw8QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCx8QI;AAAO;AAA6E;AAApF;AAMD;AAED;AhCu8QF;AACA;AACA;AACA;AACA;AACA;AgCv8QI;AAAO;AAA2D;AAAlE;AAID;AAED;AhCw8QF;AACA;AACA;AACA;AACA;AACA;AgCx8QI;AACE;AACC;AAFH;AAQD;AAED;AhCq8QF;AACA;AACA;AACA;AACA;AACA;AgCr8QI;AAAO;AAA4D;AAAnE;AAID;AAED;AhCs8QF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AgCt8QI;AAAO;AAAsE;AAA7E;AAID;AAED;AhCu8QF;AACA;AACA;AACA;AACA;AACA;AgCv8QI;AAAO;AAA4C;AAAnD;AAID;AAED;AhCw8QF;AACA;AACA;AACA;AACA;AACA;AgCx8QI;AAAO;AAAyE;AAAhF;AAID;AAED;AhCy8QF;AACA;AACA;AACA;AACA;AACA;AgCz8QI;AAAO;AAAwC;AAA/C;AACD;AhC88QH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCxySA;AjC0ySA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCxySA;AjC0ySA;AACA;AACA;AACA;AiCxySA;AACE;AACD;AAED;AjCyySA;AACA;AACA;AACA;AACA;AiCzySA;AACE;AACD;AAED;AjC0ySA;AACA;AACA;AACA;AACA;AACA;AiC1ySO;AACL;AACD;AAED;AjC2ySA;AACA;AACA;AACA;AACA;AACA;AACA;AiC3ySO;AACL;AACD;AAED;AjC4ySA;AACA;AACA;AACA;AACA;AiC5ySO;AACL;AACD;AAED;AjC6ySA;AACA;AACA;AACA;AACA;AACA;AACA;AiC7ySO;AACL;AACA;AACD;AAED;AjC8ySA;AACA;AACA;AACA;AACA;AACA;AACA;AiC9ySO;AACL;AACE;AACD;AjCgzSH;AiC/ySE;AACD;AAED;AjCgzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiChzSO;AACL;AACE;AACD;AjCkzSH;AiCjzSE;AACE;AACD;AjCmzSH;AiClzSE;AACD;AAED;AjCmzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCnzSO;AACL;AjCqzSF;AiCtzSoE;AAGhE;AACA;AACE;AACA;AACD;AjCszSL;AiCrzSI;AACE;AACD;AAV+D;AjCk0SpE;AiCh0SE;AAAwC;AjCm0S1C;AiCn0S0C;AASvC;AjC6zSH;AiC5zSE;AACD;AAED;AjC6zSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiC7zSO;AAA2B;AAEhC;AjC+zSF;AiC9zSE;AACE;AACD;AjCg0SH;AACA;AiC/zSE;AACD;AAED;AjCg0SA;AACA;AACA;AACA;AACA;AACA;AiCh0SO;AACL;AACA;AACE;AACD;AjCk0SH;AiCh0SE;AACD;AAED;AjCi0SA;AACA;AACA;AACA;AACA;AACA;AiCj0SO;AACL;AACE;AACD;AjCm0SH;AiCj0SE;AACD;AAED;AjCk0SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AiCl0SO;AACL;AACE;AACD;AjCo0SH;AiCn0SE;AACA;AjCq0SF;AiCp0SE;AACE;AACD;AjCs0SH;AiCr0SE;AACD;AjCu0SD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCngTA;AlCqgTA;AkCpgTA;AlCsgTA;AkCrgTA;AlCugTA;AkCtgTA;AlCwgTA;AkCvgTA;AlCygTA;AkCxgTA;AlC0gTA;AkCzgTA;AlC2gTA;AkC1gTA;AlC4gTA;AkCniTA;AlCqiTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCzhTA;AACA;AAEA;AlC0hTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCzhTO;AAOL;AACA;AlCqhTF;AkC9gTE;AACE;AAEA;AACA;AACA;AACA;AlC+gTJ;AkC9gTI;AACE;AACA;AACD;AlCghTL;AACA;AkC/gTI;AACE;AACE;AACA;AACD;AACF;AACF;AlCihTH;AkChhTE;AACD;AAED;AlCihTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCjhTO;AAOL;AlC6gTF;AkCtgTE;AACE;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACD;AlCwgTL;AACA;AkCvgTI;AACE;AACE;AACA;AACD;AACF;AACF;AlCygTH;AkCxgTE;AACD;AAED;AlCygTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AkCzgTA;AACE;AlC2gTF;AkC1gTE;AACE;AACD;AlC4gTH;AkC1gTE;AAEA;AlC2gTF;AkCpgTE;AACE;AlCsgTJ;AkCrgTI;AACE;AACE;AACD;AlCugTP;AkCtgTM;AACD;AACF;AlCwgTH;AACA;AkCtgTE;AACA;AACA;AAAM;AAAO;AACb;AAEA;AlCygTF;AkCxgTE;AACE;AACD;AACC;AACA;AAGD;AACC;AACE;AACD;AlCwgTL;AkCvgTI;AACD;AlCygTH;AkCxgTE;AlC0gTF;AkCzgTE;AACE;AACD;AlC2gTH;AkC1gTE;AACD;AAED;AlC2gTA;AACA;AACA;AACA;AACA;AACA;AACA;AkC3gTA;AACE;AACA;AACE;AACD;AlC6gTH;AACA;AkC5gTE;AAAyB;AAAO;AlCghTlC;AkC/gTE;AACE;AACA;AACD;AlCihTH;AACA;AkChhTE;AACD;AAED;AlCihTA;AACA;AACA;AACA;AACA;AACA;AkCjhTO;AACL;AACD;AAED;AlCkhTA;AACA;AACA;AACA;AACA;AACA;AACA;AkClhTA;AACE;AACA;AACD;AAED;AlCmhTA;AACA;AkCnhTA;AAEA;AlCohTA;AACA;AACA;AACA;AkCnhTO;AACL;AACD;AAED;AlCohTA;AACA;AACA;AACA;AACA;AACA;AACA;AkCphTO;AACL;AACA;AAAY;AAAwB;AACpC;AAEI;AACD;AAEC;AACA;AACD;AAEC;AACA;AACA;AACA;AlCqhTN;AkCphTM;AACE;AlCshTR;AkCrhTQ;AAAU;AAAO;AAAgB;AAAkB;AACpD;AlC2hTP;AkC1hTM;AACE;AlC4hTR;AkC3hTQ;AACA;AACD;AACF;AACJ;AAED;AlC4hTA;AACA;AACA;AACA;AACA;AkC5hTO;AACL;AlC8hTF;AkC7hTE;AACE;AACD;AlC+hTH;AkC9hTE;AACA;AACD;AAED;AlC+hTA;AACA;AACA;AACA;AACA;AkC/hTA;AACE;AACE;AACA;AACA;AAHuC;AAK1C;AAED;AlCgiTA;AACA;AACA;AACA;AACA;AACA;AACA;AkChiTO;AACL;AACD;AAED;AlCiiTA;AACA;AACA;AACA;AACA;AACA;AACA;AkCjiTA;AACE;AlCmiTF;AkCliTE;AACE;AlCoiTJ;AkCniTI;AACE;AACD;AACF;AlCqiTH;AkCpiTE;AACD;AlCsiTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCx3TA;AnC03TA;AmCz3TA;AnC23TA;AmC13TA;AnC43TA;AmC/4TA;AnCi5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC94TA;AnCg5TA;AmC34TA;AACA;AAEA;AnC44TA;AmC34TA;AAEA;AnC44TA;AACA;AACA;AACA;AACA;AmC34TO;AACL;AACD;AAED;AnC44TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC54TA;AACE;AACE;AnC84TJ;AmC74TI;AACE;AACD;AACF;AnC+4TH;AmC94TE;AACD;AAED;AnC+4TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmC/4TO;AACL;AACE;AACA;AACD;AnCi5TH;AmCh5TE;AACE;AACD;AnCk5TH;AmCj5TE;AnCm5TF;AmCl5TE;AACE;AnCo5TJ;AmCn5TI;AACE;AACA;AnCq5TN;AmCn5TM;AACE;AACD;AACF;AnCq5TL;AmCp5TI;AACE;AACD;AACF;AnCs5TH;AmCr5TE;AACD;AAED;AnCs5TA;AACA;AACA;AACA;AACA;AACA;AACA;AmCt5TO;AAA6C;AnCy5TpD;AmCv5TE;AACE;AAKD;AACF;AAED;AnCo5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCp5TO;AACL;AnCs5TF;AmCj5TE;AACE;AAA8B;AAAuB;AAGtD;AACF;AAED;AnCk5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCl5TO;AACL;AnCo5TF;AmC/4TE;AACE;AACD;AnCi5TH;AmCh5TE;AACD;AAED;AnCi5TA;AACA;AACA;AACA;AACA;AACA;AACA;AmCj5TO;AACL;AACE;AACD;AACF;AAED;AnCk5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCl5TO;AACL;AACE;AAID;AnCi5TH;AmCh5TE;AACD;AAED;AnCi5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCj5TO;AACL;AACE;AAID;AnCg5TH;AmC/4TE;AACD;AAED;AnCg5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCh5TO;AAAsC;AAE3C;AAIA;AAMA;AACD;AAED;AnCy4TA;AACA;AACA;AACA;AACA;AACA;AmCz4TO;AACL;AACE;AACD;AnC24TH;AmC14TE;AACE;AACD;AACC;AACD;AACF;AAED;AnC24TA;AACA;AACA;AACA;AACA;AACA;AmC34TO;AACL;AACD;AAED;AnC44TA;AACA;AACA;AACA;AACA;AACA;AmC54TO;AACL;AACD;AAED;AnC64TA;AACA;AACA;AACA;AACA;AACA;AmC74TO;AACL;AACE;AACD;AnC+4TH;AmC94TE;AACD;AAED;AnC+4TA;AACA;AACA;AACA;AACA;AACA;AACA;AmC/4TO;AACL;AACE;AACD;AnCi5TH;AmCh5TE;AACE;AACD;AnCk5TH;AmCj5TE;AACE;AACD;AnCm5TH;AmCl5TE;AACD;AAED;AnCm5TA;AACA;AACA;AACA;AACA;AACA;AmCn5TO;AACL;AACD;AAED;AnCo5TA;AACA;AACA;AACA;AACA;AACA;AmCp5TO;AACL;AACE;AACD;AnCs5TH;AmCr5TE;AACD;AAED;AnCs5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCt5TO;AACL;AAID;AAED;AnCo5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AmCp5TO;AACL;AAAc;AAAqC;AACnD;AAAO;AAAwC;AAA/C;AACD;AAED;AnC05TA;AACA;AACA;AACA;AACA;AACA;AmC15TO;AACL;AACE;AACD;AACF;AAED;AnC25TA;AACA;AACA;AACA;AACA;AACA;AmC35TO;AACL;AACE;AACD;AnC65TH;AmC35TE;AACE;AACD;AACF;AnC65TD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCjxUA;ApCmxUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCjxUA;AACA;AAEA;ApCkxUA;AACA;AACA;AACA;AACA;AoCjxUA;AACE;AACD;AAED;ApCkxUA;AACA;AACA;AACA;AACA;AACA;AoClxUO;AACL;AACD;AAED;ApCmxUA;AACA;AACA;AACA;AACA;AACA;AACA;AoCnxUO;AACL;AACD;AAED;ApCoxUA;AACA;AACA;AACA;AACA;AACA;AoCpxUO;AACL;AACD;AAED;ApCqxUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCrxUO;AACL;AACD;AAED;ApCsxUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCtxUO;AACL;AACE;AACE;AACD;AACF;ApCwxUH;AoCvxUE;AACD;AAED;ApCwxUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AoCxxUO;AACL;AAAO;AAAwB;AAA/B;AACD;ApC6xUD;AACA;AACA;AACA;AACA;AACA;AACA;AqCn3UA;ArCq3UA;AqCr4UA;ArCu4UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCl4UA;AAEA;ArCm4UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AqCl4UO;AACL;AAAe;AAA4B;ArCs4U7C;AqCr4UE;AACE;AACD;ArCu4UH;AqCr4UE;ArCu4UF;AqCt4UE;AACE;AACA;AAGA;AACD;ArCs4UH;AqCr4UE;AACD;ArCu4UD;AACA;AACA;AACA;AACA;AACA;AACA;AsC17UA;AtC47UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC17UA;AtC47UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AsC17UO;AAA0D;AAAf;AAAe;AtC+7UjE;AsC97UE;AACE;AACD;AACC;AACD;AACF;AtCg8UD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCn/UA;AvCq/UA;AuCp/UA;AvCs/UA;AuCr/UA;AvCu/UA;AuCt/UA;AvCw/UA;AuCv/UA;AvCy/UA;AuCx/UA;AvC0/UA;AuCz/UA;AvC2/UA;AuC1/UA;AvC4/UA;AuC3/UA;AvC6/UA;AuCrhVA;AvCuhVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC3gVA;AvC6gVA;AACA;AuC3gVA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAV+B;AAajC;AvC4gVA;AACA;AACA;AACA;AuC3gVA;AAEA;AvC4gVA;AACA;AACA;AACA;AACA;AACA;AuC3gVA;AAEA;AvC4gVA;AuC3gVA;AAEA;AvC4gVA;AuC3gVA;AAEA;AvC4gVA;AuC3gVA;AAEA;AvC4gVA;AuC3gVA;AAEA;AvC4gVA;AuC3gVA;AAEA;AACE;AAA4B;AAC5B;AAA4B;AAC5B;AAA4B;AAG9B;AvC6gVA;AuC5gVO;AAEP;AvC6gVA;AACA;AACA;AACA;AACA;AACA;AACA;AuC9gVO;AACL;AACD;AAED;AvC+gVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC/gVO;AACL;AACE;AAAI;AAAmC;AACvC;AACD;AvCmhVH;AuCjhVE;AACD;AAED;AvCkhVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuClhVO;AACL;AACE;AACD;AvCohVH;AuClhVE;AAGA;AvCkhVF;AuCjhVE;AACE;AACD;AvCmhVH;AuCjhVE;AAAa;AAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AvCqhVJ;AuC9hVyC;AAavC;AvCohVF;AuCnhVE;AACE;AACD;AAGD;AvCmhVF;AACA;AuCnhVE;AAIE;AACA;AACD;AAGD;AvCghVF;AACA;AuChhVE;AvCkhVF;AuCjhVE;AACE;AACD;AACC;AACD;AACC;AACD;AvCmhVH;AuClhVE;AvCohVF;AuCjhVE;AvCmhVF;AuCjhVE;AACE;AACD;AvCmhVH;AuCjhVE;AACD;AAED;AvCkhVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuClhVO;AAKL;AACE;AACD;AvCghVH;AuC/gVE;AACA;AAEA;AAOA;AACA;AACD;AACD;AvC0gVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC1gVO;AACL;AACA;AACD;AAED;AvC2gVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC3gVO;AACL;AACD;AAED;AvC4gVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC5gVO;AACL;AACA;AACA;AACA;AvC8gVF;AuC7gVE;AACE;AACE;AACD;AACF;AvC+gVH;AuC9gVE;AACD;AAED;AvC+gVA;AACA;AACA;AACA;AACA;AACA;AACA;AuC/gVO;AACL;AvCihVF;AuChhVE;AACE;AvCkhVJ;AuCjhVI;AACE;AACD;AACC;AACE;AAAW;AAAuB;AAClC;AACD;AACF;AACC;AAAW;AAAuB;AAClC;AACD;AACF;AvCuhVH;AuCthVE;AACD;AAED;AvCuhVA;AACA;AACA;AACA;AACA;AACA;AuCvhVO;AACL;AACE;AACD;AvCyhVH;AuCxhVE;AAMD;AAED;AvCohVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCphVO;AAIL;AADA;AACA;AvCqhVF;AuCphVE;AvCshVF;AuC/gVE;AAAqB;AAAuB;AAC5C;AASA;AACD;AAED;AvC0gVA;AACA;AACA;AACA;AACA;AACA;AuC1gVO;AACL;AAKA;AACD;AAED;AvCugVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCvgVO;AACL;AACD;AAED;AvCwgVA;AACA;AACA;AACA;AACA;AACA;AACA;AuCxgVO;AACL;AvC0gVF;AuCzgVE;AACE;AACD;AvC2gVH;AuC1gVE;AACD;AAED;AvC2gVA;AACA;AACA;AACA;AACA;AACA;AACA;AuC3gVO;AACL;AvC6gVF;AuC5gVE;AACE;AACD;AvC8gVH;AuC7gVE;AACD;AAED;AvC8gVA;AACA;AACA;AACA;AACA;AACA;AuC9gVO;AACL;AACE;AACD;AvCghVH;AuC/gVE;AACD;AAED;AvCghVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuChhVO;AACL;AACE;AACD;AvCkhVH;AuCjhVE;AACE;AACD;AvCmhVH;AuClhVE;AACA;AACD;AAED;AvCmhVA;AACA;AACA;AACA;AACA;AACA;AuCnhVO;AACL;AACE;AACD;AvCqhVH;AuCphVE;AACD;AAED;AvCqhVA;AACA;AACA;AACA;AACA;AACA;AACA;AuCrhVO;AACL;AACE;AACD;AvCuhVH;AuCthVE;AACE;AACD;AvCwhVH;AuCvhVE;AACD;AAED;AvCwhVA;AACA;AACA;AACA;AACA;AACA;AuCxhVO;AACL;AACA;AACA;AACD;AAED;AvCyhVA;AACA;AACA;AACA;AACA;AACA;AuCzhVO;AACL;AvC2hVF;AuC1hVE;AACE;AACD;AvC4hVH;AuC3hVE;AACA;AACD;AAED;AvC4hVA;AACA;AACA;AACA;AACA;AACA;AACA;AuC5hVA;AACE;AACE;AACD;AvC8hVH;AuC7hVE;AvC+hVF;AuCxhVE;AACD;AAED;AvCyhVA;AACA;AACA;AACA;AACA;AACA;AACA;AuCzhVO;AACL;AACA;AACA;AACE;AACD;AvC2hVH;AuC1hVE;AACA;AACA;AACD;AAED;AvC2hVA;AACA;AACA;AACA;AACA;AACA;AACA;AuC3hVO;AACL;AACE;AACD;AvC6hVH;AACA;AuC3hVE;AACE;AACD;AAGD;AACA;AACA;AvC2hVF;AACA;AuC3hVE;AACA;AACA;AAKA;AACA;AvCyhVF;AuCphVE;AACA;AACA;AAMD;AAED;AvCghVA;AACA;AACA;AACA;AACA;AACA;AACA;AuChhVO;AACL;AACD;AAED;AvCihVA;AACA;AACA;AACA;AACA;AACA;AACA;AuCjhVO;AACL;AACE;AACD;AvCmhVH;AuClhVE;AACE;AACD;AvCohVH;AuCnhVE;AACD;AAED;AvCohVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuCphVO;AACL;AACE;AACD;AvCshVH;AuCrhVE;AACA;AvCuhVF;AuCphVE;AACE;AACD;AvCshVH;AACA;AuCphVE;AACE;AACD;AvCshVH;AACA;AuCphVE;AACE;AACD;AvCshVH;AACA;AuCphVE;AAKD;AAED;AvCihVA;AACA;AACA;AACA;AACA;AACA;AACA;AuCjhVO;AACL;AACA;AACA;AACD;AAED;AvCkhVA;AACA;AACA;AACA;AACA;AuClhVO;AACL;AACA;AACA;AAKD;AAED;AvC+gVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuC/gVO;AACL;AACD;AvCihVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCvqWA;AxCyqWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCvqWA;AxCyqWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCvqWO;AACL;AACE;AACD;AxCyqWH;AwCxqWE;AACE;AACE;AACD;AACF;AxC0qWH;AwCzqWE;AACD;AAED;AxC0qWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwC1qWO;AACL;AACA;AxC4qWF;AwC3qWE;AACE;AxC6qWJ;AwC5qWI;AACE;AACD;AACC;AACE;AACD;AxC8qWP;AwC7qWM;AACD;AACF;AxC+qWH;AwC9qWE;AACE;AACD;AxCgrWH;AwC/qWE;AACD;AAED;AxCgrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwChrWO;AACL;AACE;AACE;AACD;AACF;AxCkrWH;AwCjrWE;AACD;AAED;AxCkrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwClrWO;AACL;AxCorWF;AwCnrWE;AACE;AACD;AxCqrWH;AwCprWE;AACD;AAED;AxCqrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCrrWO;AACL;AACE;AACD;AACF;AAED;AxCsrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AwCtrWO;AACL;AACD;AxCwrWD;AACA;AACA;AACA;AACA;AACA;AACA;AyCtzWA;AzCwzWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCrzWA;AzCuzWA;AyCtzWA;AzCwzWA;AyCtzWA;AzCwzWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AyCtzWO;AACL;AACA;AACA;AACA;AACE;AAAgB;AADP;AACO;AzC2zWpB;AyC1zWM;AACA;AACA;AACD;AzC4zWL;AyC3zWI;AACD;AACF;AzC6zWD;AACA;AACA;AACA;AACA;AACA;AACA;A0C91WA;A1Cg2WA;A0Ch3WA;A1Ck3WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0C92WA;AACA;AAEA;A1C+2WA;AACA;AACA;AACA;AACA;AACA;A0Ch3WE;A1Ck3WF;AACA;A0Ch3WE;AACE;AACA;AAEA;A1Ci3WJ;A0Ch3WI;AAEA;A1Ci3WJ;AACA;AACA;AACA;A0Ch3WI;AAEA;A1Ci3WJ;A0Ch3WI;AACD;AAED;A1Ci3WF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A0Cn3WI;AACD;AAED;A1Co3WF;AACA;AACA;AACA;AACA;AACA;A0Cp3WI;A1Cs3WJ;A0Cr3WI;AACE;AACA;AACD;A1Cu3WL;A0Ct3WI;AACD;AAED;A1Cu3WF;AACA;AACA;AACA;AACA;AACA;A0Cv3WI;AACE;AACD;A1Cy3WL;A0Cx3WI;AAAoB;AAAS;AAAV;AACnB;AACD;AAED;A1C43WF;AACA;AACA;AACA;AACA;A0C53WI;AACE;AACD;A1C83WL;A0C53WI;AACA;AACA;AACA;A1C83WJ;A0C73WI;AAAyB;A1Cg4W7B;A0C93WM;AACE;AACA;AACD;AACF;A1Cg4WL;A0C93WI;AACE;AACA;AACD;AACF;A1Cg4WH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Cx+WA;A3C0+WA;A2C1/WA;A3C4/WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Cx/WA;AACA;AAEA;A3Cy/WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2Cx/WO;AACL;A3C0/WF;A2Cz/WE;AACE;AACD;A3C2/WH;A2C1/WE;AACD;AAED;A3C2/WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C3/WO;AACL;AACA;AACA;AAAO;AAA4B;AAAnC;AACD;AAED;A3C+/WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2C//WO;AACL;AACD;AAED;A3CggXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2ChgXO;AACL;AACE;AACD;AACC;AACD;AACF;AAED;A3CigXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A2CjgXO;AAA+C;AAAZ;AAAY;A3CsgXtD;A2CrgXE;AACA;AAEA;A3CsgXF;A2CrgXE;AACA;AAAY;AAAW;AAAW;AAAvB;A3C2gXb;A2CjhXsD;AAAA;AAAA;AAAA;AAAA;A3CuhXtD;A2C5gXI;AACE;AACD;A3C8gXL;A2C7gXI;A3C+gXJ;A2C9gXI;AACE;AACD;A3CghXL;A2C/gXI;AACE;AACA;AACD;A3CihXL;A2ChhXI;AACE;AAEA;A3CihXN;A2ChhXM;AACE;A3CkhXR;A2CjhXQ;AACE;AAAY;AAAa;AAAa;AAA3B;AACX;AACD;AACF;A3CuhXP;A2CthXM;AACD;AAlCiD;A3C2jXtD;A2CljXE;AAAyB;A3CqjX3B;A2CrjX2B;AA0BxB;A3C8hXH;A2C7hXE;AACD;AAED;A3C8hXA;AACA;AACA;AACA;AACA;AACA;A2C9hXO;AACL;AACE;AACE;AACD;A3CgiXL;A2C/hXI;AACD;AACF;A3CiiXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4CzrXA;A5C2rXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4CzrXA;A5C2rXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4CzrXE;A5C2rXF;AACA;A4CzrXE;AACE;AAEA;A5C0rXJ;AACA;AACA;A4CzrXI;AAAmB;AAAO;AACxB;AACA;AACD;AAED;A5C4rXJ;AACA;AACA;A4C3rXI;AAEA;A5C4rXJ;AACA;AACA;A4C3rXI;AACD;AAGH;A5C2rXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C7rXO;AACL;AACE;AACD;AACF;AAED;A5C8rXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C9rXO;AAAmC;AAAX;AAAW;A5CmsX1C;A4ClsXE;AACE;AACA;A5CosXJ;A4CnsXI;AACE;AACD;A5CqsXL;A4CpsXI;AACE;AACD;A5CssXL;A4CrsXI;AACA;A5CusXJ;A4CrsXI;AACE;AACE;AACD;A5CusXP;A4CtsXM;AACE;AACD;AACF;A5CwsXL;A4CvsXI;AACE;AACE;AACD;A5CysXP;A4CxsXM;AACE;AACD;AACF;A5C0sXL;A4CzsXI;AACE;AACD;AACF;AACF;AAED;A5C0sXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4C5sXE;A5C8sXF;AACA;A4C5sXE;AACE;AACA;A5C8sXJ;A4C7sXI;AACE;AACA;AACD;AAED;A5C8sXJ;A4C7sXI;AAEA;A5C8sXJ;A4C7sXI;AAEA;A5C8sXJ;A4C7sXI;A5C+sXJ;A4C7sXI;AACE;AACE;AACD;AACF;AACF;AAED;A5C8sXF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4CjtXe;A5CmtXf;A4CltXI;AACA;AAEI;AACE;AACD;AACF;AAEC;AACA;AACA;AACE;AACD;AACF;AAEH;AACD;AAED;A5CgtXF;AACA;AACA;A4ChtXI;AACD;A5CktXH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cn5XA;A7Cq5XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cn5XA;A7Cq5XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cn5XO;AACL;AACA;AAEA;A7Co5XF;AACA;AACA;A6Cn5XE;AACE;A7Cq5XJ;A6Cn5XI;AAEA;AACD;AAED;A7Cm5XF;AACA;AACA;AACA;A6Cn5XE;AACE;A7Cq5XJ;A6Cn5XI;AACE;AACD;AACF;A7Cq5XH;A6Cn5XE;AAAyB;AAAN;AAAM;A7Cw5X3B;A6Cv5XI;AACE;AACD;AACC;AACD;AACF;AACF;AAED;A7Cw5XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A6Cx5XO;AACL;AACA;AACA;AAEA;A7Cy5XF;AACA;AACA;A6Cx5XE;AACE;AACA;AACD;AAED;A7Cy5XF;AACA;AACA;AACA;A6Cz5XE;AACE;AACA;A7C25XJ;A6C15XI;AACE;AACD;AACC;AACD;AACF;A7C45XH;A6C15XE;AACE;A7C45XJ;A6C75X2B;AAAN;AAAM;A7Ci6X3B;A6C/5XI;A7Ci6XJ;A6Ch6XI;AACE;AACD;AACF;AACF;A7Ck6XD;AACA;AACA;AACA;AACA;AACA;AACA;A8CphYA;A9CshYA;A8CnhYA;A9CqhYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A8CnhYA;A9CqhYA;A8CnhYA;AACE;AACA;AACE;AACD;A9CqhYH;AACA;A8CphYE;AACE;AACD;AAED;AACA;A9CqhYF;AACA;A8CrhYE;AACE;AACD;AAED;A9CshYF;AACA;A8CthYE;AACD;AAED;A9CuhYA;AACA;AACA;AACA;AACA;AACA;A8CvhYO;AACL;AACD;A9CyhYD;AACA;AACA","file":"amp-inabox-host.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.stubExpandFrameForTesting = stubExpandFrameForTesting;\nexports.resetExpandFrameForTesting = resetExpandFrameForTesting;\nexports.stubCollapseFrameForTesting = stubCollapseFrameForTesting;\nexports.resetCollapseFrameForTesting = resetCollapseFrameForTesting;\nexports.collapseFrame = exports.expandFrame = void 0;\n\nvar _layoutRect = require(\"../../src/layout-rect\");\n\nvar _fullOverlayFrameHelper = require(\"../../src/full-overlay-frame-helper\");\n\nvar _style = require(\"../../src/style\");\n\nvar _util = require(\"./util\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar CENTER_TRANSITION_TIME_MS = 150;\nvar CENTER_TRANSITION_END_WAIT_TIME_MS = 50;\n/**\n * Places the child frame in full overlay mode.\n * @param {!Window} win Host window.\n * @param {!HTMLIFrameElement} iframe\n * @param {function(!LayoutRectDef, !LayoutRectDef)} onFinish\n * @private\n */\n\nvar expandFrameImpl = function expandFrameImpl(win, iframe, onFinish) {\n  (0, _util.restrictedVsync)(win, {\n    measure: function measure(state) {\n      state.viewportSize = {\n        width: win.\n        /*OK*/\n        innerWidth,\n        height: win.\n        /*OK*/\n        innerHeight\n      };\n      state.rect = (0, _layoutRect.layoutRectFromDomRect)(iframe.\n      /*OK*/\n      getBoundingClientRect());\n    },\n    mutate: function mutate(state) {\n      var _state$viewportSize = state.viewportSize,\n          width = _state$viewportSize.width,\n          height = _state$viewportSize.height;\n      var expandedRect = (0, _layoutRect.layoutRectLtwh)(0, 0, width, height);\n      (0, _fullOverlayFrameHelper.centerFrameUnderVsyncMutate)(iframe, state.rect, state.viewportSize, CENTER_TRANSITION_TIME_MS); // To prevent double click during transition;\n\n      (0, _style.setImportantStyles)(iframe, {\n        'pointer-events': 'none'\n      });\n      (0, _util.timer)(function () {\n        (0, _util.restrictedVsync)(win, {\n          mutate: function mutate() {\n            (0, _style.resetStyles)(iframe, ['pointer-events']);\n            (0, _fullOverlayFrameHelper.expandFrameUnderVsyncMutate)(iframe);\n            onFinish(state.rect, expandedRect);\n          }\n        });\n      }, CENTER_TRANSITION_TIME_MS + CENTER_TRANSITION_END_WAIT_TIME_MS);\n    }\n  }, {});\n};\n/**\n * Resets the frame from full overlay mode.\n * @param {!Window} win Host window.\n * @param {!HTMLIFrameElement} iframe\n * @param {function()} onFinish\n * @param {function(!LayoutRectDef)} onMeasure\n * @private\n */\n\n\nvar collapseFrameImpl = function collapseFrameImpl(win, iframe, onFinish, onMeasure) {\n  (0, _util.restrictedVsync)(win, {\n    mutate: function mutate() {\n      (0, _fullOverlayFrameHelper.collapseFrameUnderVsyncMutate)(iframe);\n      onFinish(); // remeasure so client knows about updated dimensions\n\n      (0, _util.restrictedVsync)(win, {\n        measure: function measure() {\n          onMeasure((0, _layoutRect.layoutRectFromDomRect)(iframe.\n          /*OK*/\n          getBoundingClientRect()));\n        }\n      });\n    }\n  });\n};\n/**\n * Places the child frame in full overlay mode.\n * @param {!Window} win Host window.\n * @param {!HTMLIFrameElement} iframe\n * @param {function(!LayoutRectDef, !LayoutRectDef)} onFinish\n */\n\n\nvar expandFrame = expandFrameImpl;\n/**\n * @param {!Function} implFn\n * @visibleForTesting\n */\n\nexports.expandFrame = expandFrame;\n\nfunction stubExpandFrameForTesting(implFn) {\n  exports.expandFrame = expandFrame = implFn;\n}\n/**\n * @visibleForTesting\n */\n\n\nfunction resetExpandFrameForTesting() {\n  exports.expandFrame = expandFrame = expandFrameImpl;\n}\n/**\n * Places the child frame in full overlay mode.\n * @param {!Window} win Host window.\n * @param {!HTMLIFrameElement} iframe\n * @param {function()} onFinish\n * @param {function(!LayoutRectDef)} onMeasure\n */\n\n\nvar collapseFrame = collapseFrameImpl;\n/**\n * @param {!Function} implFn\n * @visibleForTesting\n */\n\nexports.collapseFrame = collapseFrame;\n\nfunction stubCollapseFrameForTesting(implFn) {\n  exports.collapseFrame = collapseFrame = implFn;\n}\n/**\n * @visibleForTesting\n */\n\n\nfunction resetCollapseFrameForTesting() {\n  exports.collapseFrame = collapseFrame = collapseFrameImpl;\n}\n\n},{\"../../src/full-overlay-frame-helper\":21,\"../../src/layout-rect\":25,\"../../src/style\":35,\"./util\":6}],2:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getFrameOverlayManager = getFrameOverlayManager;\nexports.FrameOverlayManager = void 0;\n\nvar _frameOverlayHelper = require(\"./frame-overlay-helper\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const */\nvar AMP_INABOX_FRAME_OVERLAY_MANAGER = 'ampInaboxFrameOverlayManager';\n/**\n * Inabox host manager for full overlay frames.\n */\n\nvar FrameOverlayManager =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   */\n  function FrameOverlayManager(win) {\n    /** @private @const {!Window} */\n    this.win_ = win;\n    /** @private {boolean} */\n\n    this.isExpanded_ = false;\n    /** @private {boolean} */\n\n    this.viewportChangedSinceExpand_ = false; // TODO(alanorozco): type\n\n    /** @private {?} */\n\n    this.collapsedRect_ = null;\n    this.listenToViewportChanges_();\n  }\n  /** @private */\n\n\n  var _proto = FrameOverlayManager.prototype;\n\n  _proto.listenToViewportChanges_ = function listenToViewportChanges_() {\n    var _this = this;\n\n    this.win_.addEventListener('resize', function () {\n      return _this.onWindowResize();\n    });\n  }\n  /** @visibleForTesting */\n  ;\n\n  _proto.onWindowResize = function onWindowResize() {\n    if (this.isExpanded_) {\n      this.viewportChangedSinceExpand_ = true;\n    }\n  }\n  /**\n   * Expands an iframe to full overlay.\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Function} callback Gets executed when expanded with the new box\n   *  rect.\n   */\n  ;\n\n  _proto.expandFrame = function expandFrame(iframe, callback) {\n    var _this2 = this;\n\n    (0, _frameOverlayHelper.expandFrame)(this.win_, iframe, function (collapsedRect, expandedRect) {\n      _this2.isExpanded_ = true;\n      _this2.viewportChangedSinceExpand_ = false;\n      _this2.collapsedRect_ = collapsedRect;\n      callback(expandedRect);\n    });\n  }\n  /**\n   * Collapses an iframe back from full overlay.\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Function} callback Gets executed when collapsed with the new box\n   *  rect.\n   */\n  ;\n\n  _proto.collapseFrame = function collapseFrame(iframe, callback) {\n    var _this3 = this;\n\n    // There is a delay of one animation frame between collapsing and measuring\n    // the box rect. collapseFrame() takes a callback for each event.\n    //\n    // We know what the collapsed box was. If the viewport has not changed while\n    // expanded, we can immediately notify the consumer of the collapsed\n    // box rect since it should be the same. Otherwise, we wait for remeasure.\n    (0, _frameOverlayHelper.collapseFrame)(this.win_, iframe, function () {\n      _this3.isExpanded_ = false;\n\n      if (!_this3.viewportChangedSinceExpand_) {\n        callback(_this3.collapsedRect_);\n      }\n    }, function (collapsedRect) {\n      _this3.collapsedRect_ = collapsedRect;\n\n      if (_this3.viewportChangedSinceExpand_) {\n        callback(_this3.collapsedRect_);\n      }\n    });\n  };\n\n  return FrameOverlayManager;\n}();\n/**\n * Use an existing frame overlay manager within the window, if any.\n * @param {!Window} win\n * @return {!FrameOverlayManager}\n */\n\n\nexports.FrameOverlayManager = FrameOverlayManager;\n\nfunction getFrameOverlayManager(win) {\n  win[AMP_INABOX_FRAME_OVERLAY_MANAGER] = win[AMP_INABOX_FRAME_OVERLAY_MANAGER] || new FrameOverlayManager(win);\n  return win[AMP_INABOX_FRAME_OVERLAY_MANAGER];\n}\n\n},{\"./frame-overlay-helper\":1}],3:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.InaboxHost = void 0;\n\nvar _inaboxMessagingHost = require(\"./inabox-messaging-host\");\n\nvar _log = require(\"../../src/log\");\n\nvar _eventHelper = require(\"../../src/event-helper\");\n\nvar _error = require(\"../../src/error\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Inabox host script is installed on a non-AMP host page to provide APIs for\n * its embed AMP content (such as an ad created in AMP).\n */\n\n/** @const {string} */\nvar TAG = 'inabox-host';\n/** @const {string} */\n\nvar AMP_INABOX_INITIALIZED = 'ampInaboxInitialized';\n/** @const {string} */\n\nvar PENDING_MESSAGES = 'ampInaboxPendingMessages';\n/** @const {string} */\n\nvar INABOX_IFRAMES = 'ampInaboxIframes';\n/** @const {string} */\n\nvar INABOX_UNREGISTER_IFRAME = 'inaboxUnregisterIframe';\n/**\n * Class for initializing host script and consuming queued messages.\n * @visibleForTesting\n */\n\nvar InaboxHost =\n/**\n * @param {!Window} win\n */\nfunction InaboxHost(win) {\n  // Prevent double initialization\n  if (win[AMP_INABOX_INITIALIZED]) {\n    (0, _log.dev)().info(TAG, 'Skip a 2nd attempt of initializing AMP inabox host.');\n    return;\n  } // Assume we cannot recover from state initialization errors.\n\n\n  win[AMP_INABOX_INITIALIZED] = true;\n  (0, _log.initLogConstructor)();\n  (0, _log.setReportError)(_error.reportError);\n\n  if (win[INABOX_IFRAMES] && !Array.isArray(win[INABOX_IFRAMES])) {\n    (0, _log.dev)().info(TAG, 'Invalid %s. %s', INABOX_IFRAMES, win[INABOX_IFRAMES]);\n    win[INABOX_IFRAMES] = [];\n  }\n\n  var host = new _inaboxMessagingHost.InaboxMessagingHost(win, win[INABOX_IFRAMES]);\n  win.AMP = win.AMP || {};\n\n  if (win.AMP[INABOX_UNREGISTER_IFRAME]) {\n    // It's already defined; log a debug message and assume the existing\n    // implmentation is good.\n    (0, _log.dev)().info(TAG, \"win.AMP[\" + INABOX_UNREGISTER_IFRAME + \"] already defined}\");\n  } else {\n    win.AMP[INABOX_UNREGISTER_IFRAME] = host.unregisterIframe.bind(host);\n  }\n\n  var queuedMsgs = win[PENDING_MESSAGES];\n\n  var processMessageFn =\n  /** @type {function(Event)} */\n  function processMessageFn(evt) {\n    try {\n      host.processMessage(evt);\n    } catch (err) {\n      (0, _log.dev)().error(TAG, 'Error processing inabox message', evt, err);\n    }\n  };\n\n  if (queuedMsgs) {\n    if (Array.isArray(queuedMsgs)) {\n      queuedMsgs.forEach(function (message) {\n        // Pending messages are added by external scripts.\n        // Validate their data types to avoid client errors.\n        if (!validateMessage(message)) {\n          return;\n        }\n\n        processMessageFn(message);\n      });\n    } else {\n      (0, _log.dev)().info(TAG, 'Invalid %s %s', PENDING_MESSAGES, queuedMsgs);\n    }\n  } // Empty and ensure that future messages are no longer stored in the array.\n\n\n  win[PENDING_MESSAGES] = [];\n\n  win[PENDING_MESSAGES]['push'] = function () {};\n\n  win.addEventListener('message', processMessageFn.bind(host));\n};\n/**\n * Validates a message event and print errors if it does not contain expected\n * fields.\n *\n * @param {!Event} message\n * @return {boolean} if the message is valid or not\n */\n\n\nexports.InaboxHost = InaboxHost;\n\nfunction validateMessage(message) {\n  var valid = !!(message.source && message.source.postMessage);\n\n  if (!valid) {\n    (0, _log.user)().warn(TAG, 'Ignoring an inabox message. Likely the requester iframe has been removed. message.data=' + JSON.stringify((0, _eventHelper.getData)(message)));\n  }\n\n  return valid;\n}\n\nnew InaboxHost(self);\n\n},{\"../../src/error\":16,\"../../src/event-helper\":18,\"../../src/log\":26,\"./inabox-messaging-host\":4}],4:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.InaboxMessagingHost = void 0;\n\nvar _pFrameMessaging = require(\"../../src/3p-frame-messaging\");\n\nvar _iframeHelper = require(\"../../src/iframe-helper\");\n\nvar _log = require(\"../../src/log\");\n\nvar _object = require(\"../../src/utils/object\");\n\nvar _eventHelper = require(\"../../src/event-helper\");\n\nvar _frameOverlayManager = require(\"./frame-overlay-manager\");\n\nvar _positionObserver = require(\"./position-observer\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const */\nvar TAG = 'InaboxMessagingHost';\n/** @const */\n\nvar READ_ONLY_MESSAGES = [_pFrameMessaging.MessageType.SEND_POSITIONS];\n/** Simple helper for named callbacks. */\n\nvar NamedObservable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of NamedObservable.\n   */\n  function NamedObservable() {\n    /** @private {!Object<string, !Function>} */\n    this.map_ = {};\n  }\n  /**\n   * @param {string} key\n   * @param {!Function} callback\n   */\n\n\n  var _proto = NamedObservable.prototype;\n\n  _proto.listen = function listen(key, callback) {\n    if (key in this.map_) {\n      (0, _log.dev)().fine(TAG, \"Overriding message callback [\" + key + \"]\");\n    }\n\n    this.map_[key] = callback;\n  }\n  /**\n   * @param {string} key\n   * @param {*} thisArg\n   * @param {!Array} args\n   * @return {boolean} True when a callback was found and successfully executed.\n   */\n  ;\n\n  _proto.fire = function fire(key, thisArg, args) {\n    if (key in this.map_) {\n      return this.map_[key].apply(thisArg, args);\n    }\n\n    return false;\n  };\n\n  return NamedObservable;\n}();\n/** @typedef {{\n      iframe: !HTMLIFrameElement,\n      measurableFrame: !HTMLIFrameElement,\n      observeUnregisterFn: (!UnlistenDef|undefined),\n  }} */\n\n\nvar AdFrameDef;\n\nvar InaboxMessagingHost =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   * @param {!Array<!HTMLIFrameElement>} iframes\n   */\n  function InaboxMessagingHost(win, iframes) {\n    /** @private {!Array<!HTMLIFrameElement>} */\n    this.iframes_ = iframes;\n    /** @private {!Object<string,!AdFrameDef>} */\n\n    this.iframeMap_ = Object.create(null);\n    /** @private {!./position-observer.PositionObserver} */\n\n    this.positionObserver_ = (0, _positionObserver.getPositionObserver)(win);\n    /** @private {!NamedObservable} */\n\n    this.msgObservable_ = new NamedObservable();\n    /** @private {!./frame-overlay-manager.FrameOverlayManager} */\n\n    this.frameOverlayManager_ = (0, _frameOverlayManager.getFrameOverlayManager)(win);\n    this.msgObservable_.listen(_pFrameMessaging.MessageType.SEND_POSITIONS, this.handleSendPositions_);\n    this.msgObservable_.listen(_pFrameMessaging.MessageType.FULL_OVERLAY_FRAME, this.handleEnterFullOverlay_);\n    this.msgObservable_.listen(_pFrameMessaging.MessageType.CANCEL_FULL_OVERLAY_FRAME, this.handleCancelFullOverlay_);\n  }\n  /**\n   * Process a single post message.\n   *\n   * A valid message has to be formatted as a string starting with \"amp-\". The\n   * rest part should be a stringified JSON object of\n   * {type: string, sentinel: string}. The allowed types are listed in the\n   * REQUEST_TYPE enum.\n   *\n   * @param {!MessageEvent} message\n   * @return {boolean} true if message get successfully processed\n   */\n\n\n  var _proto2 = InaboxMessagingHost.prototype;\n\n  _proto2.processMessage = function processMessage(message) {\n    var request = (0, _pFrameMessaging.deserializeMessage)((0, _eventHelper.getData)(message));\n\n    if (!request || !request['sentinel']) {\n      (0, _log.dev)().fine(TAG, 'Ignored non-AMP message:', message);\n      return false;\n    }\n\n    var adFrame = this.getFrameElement_(message.source, request['sentinel']);\n\n    if (!adFrame) {\n      (0, _log.dev)().info(TAG, 'Ignored message from untrusted iframe:', message);\n      return false;\n    }\n\n    var allowedTypes = adFrame.iframe.dataset['ampAllowed'];\n    var allowedTypesList = allowedTypes ? allowedTypes.split(/\\s*,\\s*/) : READ_ONLY_MESSAGES;\n\n    if (allowedTypesList.indexOf(request['type']) === -1) {\n      (0, _log.dev)().info(TAG, 'Ignored non-whitelisted message type:', message);\n      return false;\n    }\n\n    if (!this.msgObservable_.fire(request['type'], this, [adFrame.measurableFrame, request, message.source, message.origin])) {\n      (0, _log.dev)().warn(TAG, 'Unprocessed AMP message:', message);\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Object} request\n   * @param {!Window} source\n   * @param {string} origin\n   * @return {boolean}\n   */\n  ;\n\n  _proto2.handleSendPositions_ = function handleSendPositions_(iframe, request, source, origin) {\n    var _this = this;\n\n    var viewportRect = this.positionObserver_.getViewportRect();\n    var targetRect = this.positionObserver_.getTargetRect(iframe);\n    this.sendPosition_(request, source, origin, (0, _object.dict)({\n      'viewportRect': viewportRect,\n      'targetRect': targetRect\n    }));\n    (0, _log.devAssert)(this.iframeMap_[request.sentinel]);\n    this.iframeMap_[request.sentinel].observeUnregisterFn = this.iframeMap_[request.sentinel].observeUnregisterFn || this.positionObserver_.observe(iframe, function (data) {\n      return _this.sendPosition_(request, source, origin,\n      /** @type {?JsonObject} */\n      data);\n    });\n    return true;\n  }\n  /**\n   *\n   * @param {!Object} request\n   * @param {!Window} source\n   * @param {string} origin\n   * @param {?JsonObject} data\n   */\n  ;\n\n  _proto2.sendPosition_ = function sendPosition_(request, source, origin, data) {\n    (0, _log.dev)().fine(TAG, 'Sent position data to [%s] %s', request.sentinel, data);\n    source.\n    /*OK*/\n    postMessage((0, _pFrameMessaging.serializeMessage)(_pFrameMessaging.MessageType.POSITION, request.sentinel, data), origin);\n  }\n  /**\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Object} request\n   * @param {!Window} source\n   * @param {string} origin\n   * @return {boolean}\n   * TODO(alanorozco):\n   * 1. Reject request if frame is out of focus\n   * 2. Disable zoom and scroll on parent doc\n   */\n  ;\n\n  _proto2.handleEnterFullOverlay_ = function handleEnterFullOverlay_(iframe, request, source, origin) {\n    this.frameOverlayManager_.expandFrame(iframe, function (boxRect) {\n      source.\n      /*OK*/\n      postMessage((0, _pFrameMessaging.serializeMessage)(_pFrameMessaging.MessageType.FULL_OVERLAY_FRAME_RESPONSE, request.sentinel, (0, _object.dict)({\n        'success': true,\n        'boxRect': boxRect\n      })), origin);\n    });\n    return true;\n  }\n  /**\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Object} request\n   * @param {!Window} source\n   * @param {string} origin\n   * @return {boolean}\n   */\n  ;\n\n  _proto2.handleCancelFullOverlay_ = function handleCancelFullOverlay_(iframe, request, source, origin) {\n    this.frameOverlayManager_.collapseFrame(iframe, function (boxRect) {\n      source.\n      /*OK*/\n      postMessage((0, _pFrameMessaging.serializeMessage)(_pFrameMessaging.MessageType.CANCEL_FULL_OVERLAY_FRAME_RESPONSE, request.sentinel, (0, _object.dict)({\n        'success': true,\n        'boxRect': boxRect\n      })), origin);\n    });\n    return true;\n  }\n  /** This method is doing two things.\n   *    1. It checks that the source of the message is valid.\n   *       Validity means that the message comes from a frame that\n   *       is either directly registered in this.iframes_, or is a\n   *       child of one of those frames.\n   *    2. It returns whichever iframe is the deepest frame in the source's\n   *       hierarchy that the outer host window can still measure, which is\n   *       the top most cross domained frame, or the creative frame.\n   * EXAMPLE:\n   *   If we have a frame hierarchy:\n   *     Host -> Friendly Frame -> X Domain Frame 1 -> Message Source Frame\n   *     and \"Friendly Frame\" is registered in this.iframes_, then\n   *     \"Message Source Frame\" is valid, because one of its parent frames\n   *     is registered in this.iframes_, and the result of the call to\n   *     getFrameElement_ would be the iframe \"X Domain Frame 1\" as it is\n   *     the deepest frame that the host doc can accurately measure.\n   * Note: The sentinel should be unique to the source window, and the result\n   * is cached using the sentinel as the key.\n   *\n   * @param {?Window} source\n   * @param {string} sentinel\n   * @return {?AdFrameDef}\n   * @private\n   */\n  ;\n\n  _proto2.getFrameElement_ = function getFrameElement_(source, sentinel) {\n    if (this.iframeMap_[sentinel]) {\n      return this.iframeMap_[sentinel];\n    }\n\n    var measurableFrame = this.getMeasureableFrame(source);\n\n    if (!measurableFrame) {\n      return null;\n    }\n\n    var measurableWin = measurableFrame.contentWindow;\n\n    for (var i = 0; i < this.iframes_.length; i++) {\n      var iframe = this.iframes_[i];\n\n      for (var j = 0, tempWin = measurableWin; j < 10; j++, tempWin = tempWin.parent) {\n        if (iframe.contentWindow == tempWin) {\n          this.iframeMap_[sentinel] = {\n            iframe: iframe,\n            measurableFrame: measurableFrame\n          };\n          return this.iframeMap_[sentinel];\n        }\n\n        if (tempWin == window.top) {\n          break;\n        }\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Returns whichever window in win's parent hierarchy is the deepest window\n   * that is measurable from the perspective of the current window.\n   * For when win is nested within a x-domain frame, walks up the window's\n   * parent hierarchy until the top-most x-domain frame in the hierarchy\n   * is found. Then, it returns the frame element for that window.\n   * For when win is friendly framed, returns the frame element for win.\n   * @param {?Window} win\n   * @return {?HTMLIFrameElement}\n   * @visibleForTesting\n   */\n  ;\n\n  _proto2.getMeasureableFrame = function getMeasureableFrame(win) {\n    if (!win) {\n      return null;\n    } // First, we try to find the top-most x-domain window in win's parent\n    // hierarchy. If win is not nested within x-domain framing, then\n    // this loop breaks immediately.\n\n\n    var topXDomainWin;\n\n    for (var j = 0, tempWin = win; j < 10 && tempWin != tempWin.top && !(0, _iframeHelper.canInspectWindow)(tempWin); j++, topXDomainWin = tempWin, tempWin = tempWin.parent) {} // If topXDomainWin exists, we know that the frame we want to measure\n    // is a x-domain frame. Unfortunately, you can not access properties\n    // on a x-domain window, so we can not do window.frameElement, and\n    // instead must instead get topXDomainWin's parent, and then iterate\n    // over that parent's child iframes until we find the frame element\n    // that corresponds to topXDomainWin.\n\n\n    if (!!topXDomainWin) {\n      var iframes = topXDomainWin.parent.document.querySelectorAll('iframe');\n\n      for (var k = 0, frame = iframes[k]; k < iframes.length; k++, frame = iframes[k]) {\n        if (frame.contentWindow == topXDomainWin) {\n          return (\n            /** @type {!HTMLIFrameElement} */\n            frame\n          );\n        }\n      }\n    } // If topXDomainWin does not exist, then win is friendly, and we can\n    // just return its frameElement directly.\n\n\n    return (\n      /** @type {!HTMLIFrameElement} */\n      win.frameElement\n    );\n  }\n  /**\n   * Removes an iframe from the set of iframes we watch, along with executing\n   * any necessary cleanup.  Available at win.AMP.inaboxUnregisterIframe().\n   *\n   * @param {!HTMLIFrameElement} iframe\n   */\n  ;\n\n  _proto2.unregisterIframe = function unregisterIframe(iframe) {\n    // Remove iframe from the list of iframes we're watching.\n    var iframeIndex = this.iframes_.indexOf(iframe);\n\n    if (iframeIndex != -1) {\n      this.iframes_.splice(iframeIndex, 1);\n    } // Also remove it and all of its descendents from our sentinel cache.\n    // TODO(jeffkaufman): save more info so we don't have to walk the dom here.\n\n\n    for (var sentinel in this.iframeMap_) {\n      if (this.iframeMap_[sentinel].iframe == iframe) {\n        if (this.iframeMap_[sentinel].observeUnregisterFn) {\n          this.iframeMap_[sentinel].observeUnregisterFn();\n        }\n\n        delete this.iframeMap_[sentinel];\n      }\n    }\n  };\n\n  return InaboxMessagingHost;\n}();\n\nexports.InaboxMessagingHost = InaboxMessagingHost;\n\n},{\"../../src/3p-frame-messaging\":7,\"../../src/event-helper\":18,\"../../src/iframe-helper\":22,\"../../src/log\":26,\"../../src/utils/object\":43,\"./frame-overlay-manager\":2,\"./position-observer\":5}],5:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getPositionObserver = getPositionObserver;\nexports.PositionObserver = void 0;\n\nvar _layoutRect = require(\"../../src/layout-rect\");\n\nvar _observable = require(\"../../src/observable\");\n\nvar _rateLimit = require(\"../../src/utils/rate-limit\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   viewportRect: !LayoutRectDef,\n *   targetRect: !LayoutRectDef,\n * }}\n */\nvar PositionEntryDef;\n/** @const */\n\nvar MIN_EVENT_INTERVAL_IN_MS = 100;\n/** @const */\n\nvar AMP_INABOX_POSITION_OBSERVER = 'ampInaboxPositionObserver';\n\nvar PositionObserver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Window} win\n   */\n  function PositionObserver(win) {\n    /** @private {!Window} */\n    this.win_ = win;\n    /** @private {?Observable} */\n\n    this.positionObservable_ = null;\n    /** @protected {!Element} */\n\n    this.scrollingElement_ = getScrollingElement(this.win_);\n    /** @private {?LayoutRectDef} */\n\n    this.viewportRect_ = null;\n  }\n  /**\n   * Start to observe the target element's position change and trigger callback.\n   * TODO: maybe take DOM mutation into consideration\n   * @param {!Element} element\n   * @param {function(!PositionEntryDef)} callback\n   * @return {!UnlistenDef}\n   */\n\n\n  var _proto = PositionObserver.prototype;\n\n  _proto.observe = function observe(element, callback) {\n    var _this = this;\n\n    if (!this.positionObservable_) {\n      this.positionObservable_ = new _observable.Observable();\n      var listener = (0, _rateLimit.throttle)(this.win_, function () {\n        _this.update_();\n\n        _this.positionObservable_.fire();\n      }, MIN_EVENT_INTERVAL_IN_MS);\n      this.update_();\n      this.win_.addEventListener('scroll', listener, true);\n      this.win_.addEventListener('resize', listener, true);\n    } // Send the 1st ping immediately\n\n\n    callback(this.getPositionEntry_(element));\n    return this.positionObservable_.add(function () {\n      callback(_this.getPositionEntry_(element));\n    });\n  }\n  /**\n   * Updates viewport rect.\n   */\n  ;\n\n  _proto.update_ = function update_() {\n    this.viewportRect_ = this.getViewportRect();\n  }\n  /**\n   * @param {!Element} element\n   * @return {!PositionEntryDef}\n   * @private\n   */\n  ;\n\n  _proto.getPositionEntry_ = function getPositionEntry_(element) {\n    return {\n      'viewportRect':\n      /** @type {!LayoutRectDef} */\n      this.viewportRect_,\n      // relative position to viewport\n      'targetRect': this.getTargetRect(element)\n    };\n  }\n  /**\n   * A  method to get viewport rect\n   * @return {LayoutRectDef}\n   */\n  ;\n\n  _proto.getViewportRect = function getViewportRect() {\n    var scrollingElement = this.scrollingElement_,\n        win = this.win_;\n    var scrollLeft = scrollingElement.\n    /*OK*/\n    scrollLeft || win.\n    /*OK*/\n    pageXOffset;\n    var scrollTop = scrollingElement.\n    /*OK*/\n    scrollTop || win.\n    /*OK*/\n    pageYOffset;\n    return (0, _layoutRect.layoutRectLtwh)(Math.round(scrollLeft), Math.round(scrollTop), win.\n    /*OK*/\n    innerWidth, win.\n    /*OK*/\n    innerHeight);\n  }\n  /**\n   * Get the element's layout rect relative to the viewport. Attempt to walk up\n   * the DOM and add the offset of all nested parent iframes since\n   * getBoundingClientRect() is only relative to the immediate window. Assumes\n   * that all parent frames are friendly and can be inspected (because the\n   * element itself can be inspected as well).\n   * @param {!Element} element\n   * @return {!LayoutRectDef}\n   */\n  ;\n\n  _proto.getTargetRect = function getTargetRect(element) {\n    var targetRect = (0, _layoutRect.layoutRectFromDomRect)(element.\n    /*OK*/\n    getBoundingClientRect());\n    var parentWin = element.ownerDocument.defaultView;\n\n    for (var j = 0, tempWin = parentWin; j < 10 && tempWin != this.win_ && tempWin != this.win_.top; j++, tempWin = tempWin.parent) {\n      var parentFrameRect = (0, _layoutRect.layoutRectFromDomRect)(tempWin.frameElement.\n      /*OK*/\n      getBoundingClientRect());\n      targetRect = (0, _layoutRect.moveLayoutRect)(targetRect, parentFrameRect.left, parentFrameRect.top);\n    }\n\n    return targetRect;\n  };\n\n  return PositionObserver;\n}();\n/**\n * @param {!Window} win\n * @return {!Element}\n */\n\n\nexports.PositionObserver = PositionObserver;\n\nfunction getScrollingElement(win) {\n  var doc = win.document;\n\n  if (doc.\n  /*OK*/\n  scrollingElement) {\n    return doc.\n    /*OK*/\n    scrollingElement;\n  }\n\n  if (doc.body && // Due to https://bugs.webkit.org/show_bug.cgi?id=106133, WebKit\n  // browsers have to use `body` and NOT `documentElement` for\n  // scrolling purposes. This has mostly being resolved via\n  // `scrollingElement` property, but this branch is still necessary\n  // for backward compatibility purposes.\n  isWebKit(win.navigator.userAgent)) {\n    return doc.body;\n  }\n\n  return doc.documentElement;\n}\n/**\n * Whether the current browser is based on the WebKit engine.\n * @param {string} ua\n * @return {boolean}\n */\n\n\nfunction isWebKit(ua) {\n  return /WebKit/i.test(ua) && !/Edge/i.test(ua);\n}\n/**\n * Use an existing position observer within the window, if any.\n * @param {!Window} win\n * @return {!PositionObserver}\n */\n\n\nfunction getPositionObserver(win) {\n  win[AMP_INABOX_POSITION_OBSERVER] = win[AMP_INABOX_POSITION_OBSERVER] || new PositionObserver(win);\n  return win[AMP_INABOX_POSITION_OBSERVER];\n}\n\n},{\"../../src/layout-rect\":25,\"../../src/observable\":29,\"../../src/utils/rate-limit\":45}],6:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.restrictedVsync = restrictedVsync;\nexports.timer = timer;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Executes a \"restricted\" read/write vsync cycle.\n * This function exists mainly since the vsync service is not available for the\n * inabox host script.\n * It also helps with maintainability. Since the passed tasks have to define\n * measure and mutate callbacks, it makes it harder for the calling code to be\n * changed in a way that screws up the read-write order.\n * Please note that this is NOT real vsync. Concurrent reads and writes ARE NOT\n * BATCHED. This means that using this can still cause layout thrashing if it's\n * being called more than once within the same frame. Use with caution.\n * @param {!Window} win\n * @param {{measure: (Function|undefined), mutate: (Function|undefined)}} task\n * @param {!Object=} opt_state\n * @visibleForTesting\n * TODO(alanorozco): Figure out a longer-term solution\n */\nfunction restrictedVsync(win, task, opt_state) {\n  win.requestAnimationFrame(function () {\n    if (task.measure) {\n      task.measure(opt_state);\n    }\n\n    if (task.mutate) {\n      task.mutate(opt_state);\n    }\n  });\n}\n/**\n * Executes a function after a certain time.\n * The timer service is not available for the inabox host script, hence this\n * function.\n * Not using setTimeout directly allows us to execute the callback directly on\n * tests.\n * @param {!Function} callback\n * @param {number} timeMs\n * @visibleForTesting\n */\n\n\nfunction timer(callback, timeMs) {\n  setTimeout(callback, timeMs);\n}\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.listen = listen;\nexports.serializeMessage = serializeMessage;\nexports.deserializeMessage = deserializeMessage;\nexports.isAmpMessage = isAmpMessage;\nexports.IframeTransportEvent = exports.MessageType = exports.CONSTANTS = void 0;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _json = require(\"./json\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const */\nvar AMP_MESSAGE_PREFIX = 'amp-';\nvar CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content'\n};\n/** @enum {string} */\n\nexports.CONSTANTS = CONSTANTS;\nvar MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe'\n};\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nexports.MessageType = MessageType;\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\n\n\nfunction serializeMessage(type, sentinel, data, rtvVersion) {\n  if (data === void 0) {\n    data = (0, _object.dict)();\n  }\n\n  if (rtvVersion === void 0) {\n    rtvVersion = null;\n  }\n\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  var message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\n\n\nfunction deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n\n  var startPos = message.indexOf('{');\n  (0, _log.devAssert)(startPos != -1, 'JSON missing in %s', message);\n\n  try {\n    return (0, _json.parseJson)(message.substr(startPos));\n  } catch (e) {\n    (0, _log.dev)().error('MESSAGING', 'Failed to parse message: ' + message, e);\n    return null;\n  }\n}\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\n\n\nfunction isAmpMessage(message) {\n  return typeof message == 'string' && message.indexOf(AMP_MESSAGE_PREFIX) == 0 && message.indexOf('{') != -1;\n}\n/** @typedef {{creativeId: string, message: string}} */\n\n\nvar IframeTransportEvent; // An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n\nexports.IframeTransportEvent = IframeTransportEvent;\n\n},{\"./event-helper-listen\":17,\"./json\":24,\"./log\":26,\"./utils/object\":43}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.AmpEvents = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nvar AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange',\n  // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed'\n};\nexports.AmpEvents = AmpEvents;\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.toggleAmpdocFieForTesting = toggleAmpdocFieForTesting;\nexports.isInAmpdocFieExperiment = isInAmpdocFieExperiment;\nexports.EXPERIMENT_INFO_MAP = void 0;\n\nvar _experiments = require(\"./experiments\");\n\nvar _EXPERIMENT_INFO_MAP;\n\n// TODO(#22733): Remove this file once \"ampdoc-fie\" is cleaned up.\nvar EXPERIMENT_ID = 'ampdoc-fie';\n/**\n * @const {{experiment: string, control: string, branch: string}}\n */\n\nvar EXPERIMENT = {\n  branch: EXPERIMENT_ID,\n  control: '21065001',\n  experiment: '21065002'\n};\n/**\n * @const {!Object<string, !./experiments.ExperimentInfo>}\n */\n\nvar EXPERIMENT_INFO_MAP = (_EXPERIMENT_INFO_MAP = {}, _EXPERIMENT_INFO_MAP[EXPERIMENT_ID] = {\n  isTrafficEligible: function isTrafficEligible() {\n    return true;\n  },\n  branches: [[EXPERIMENT.control], [EXPERIMENT.experiment]]\n}, _EXPERIMENT_INFO_MAP);\n/**\n * @param {!Window} win\n * @param {boolean} on\n * @visibleForTesting\n */\n\nexports.EXPERIMENT_INFO_MAP = EXPERIMENT_INFO_MAP;\n\nfunction toggleAmpdocFieForTesting(win, on) {\n  (0, _experiments.forceExperimentBranch)(win, EXPERIMENT_ID, on ? EXPERIMENT.experiment : null);\n}\n/**\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isInAmpdocFieExperiment(win) {\n  if (!(0, _experiments.isExperimentOn)(win, 'ampdoc-fie')) {\n    return false;\n  }\n\n  (0, _experiments.randomlySelectUnsetExperiments)(win, EXPERIMENT_INFO_MAP);\n  return (0, _experiments.getExperimentBranch)(win, EXPERIMENT_ID) === EXPERIMENT.experiment;\n}\n\n},{\"./experiments\":19}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.triggerAnalyticsEvent = triggerAnalyticsEvent;\n\nvar _services = require(\"./services\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nfunction triggerAnalyticsEvent(target, eventType, opt_vars) {\n  _services.Services.analyticsForDocOrNull(target).then(function (analytics) {\n    if (!analytics) {\n      return;\n    }\n\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n\n},{\"./services\":32}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.CommonSignals = void 0;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nvar CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload'\n};\nexports.CommonSignals = CommonSignals;\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.config = exports.urls = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nvar env = self.AMP_CONFIG || {};\nvar thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ? new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\nvar cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ? new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\n\nvar urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex: cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [/(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/, /(^|\\.)gmail\\.(com|dev)$/]\n};\nexports.urls = urls;\nvar config = {\n  urls: urls\n};\nexports.config = config;\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.assertIsName = assertIsName;\nexports.setScopeSelectorSupportedForTesting = setScopeSelectorSupportedForTesting;\nexports.isScopeSelectorSupported = isScopeSelectorSupported;\nexports.prependSelectorsWith = prependSelectorsWith;\nexports.escapeCssSelectorIdent = escapeCssSelectorIdent;\nexports.escapeCssSelectorNth = escapeCssSelectorNth;\n\nvar _cssEscape = require(\"../third_party/css-escape/css-escape\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nfunction assertIsName(name) {\n  (0, _log.devAssert)(/^[\\w-]+$/.test(name));\n}\n/**\n * @type {boolean|undefined}\n */\n\n\nvar scopeSelectorSupported;\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\n\nfunction setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return scopeSelectorSupported = testScopeSelector(el);\n}\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\n\n\nfunction testScopeSelector(el) {\n  try {\n    var doc = el.ownerDocument;\n    var testElement = doc.createElement('div');\n    var testChild = doc.createElement('div');\n    testElement.appendChild(testChild); // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n\n    return testElement.\n    /*OK*/\n    querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\n\n\nfunction prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, \"$&\" + distribute + \" \");\n}\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorIdent(ident) {\n  return (0, _cssEscape.cssEscape)(ident);\n}\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\n\n\nfunction escapeCssSelectorNth(ident) {\n  var escaped = String(ident); // Ensure it doesn't close the nth-child psuedo class.\n\n  (0, _log.devAssert)(escaped.indexOf(')') === -1);\n  return escaped;\n}\n\n},{\"../third_party/css-escape/css-escape\":46,\"./log\":26}],14:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForChild = waitForChild;\nexports.waitForChildPromise = waitForChildPromise;\nexports.waitForBodyOpen = waitForBodyOpen;\nexports.waitForBodyOpenPromise = waitForBodyOpenPromise;\nexports.removeElement = removeElement;\nexports.removeChildren = removeChildren;\nexports.copyChildren = copyChildren;\nexports.insertAfterOrAtStart = insertAfterOrAtStart;\nexports.addAttributesToElement = addAttributesToElement;\nexports.createElementWithAttributes = createElementWithAttributes;\nexports.isConnectedNode = isConnectedNode;\nexports.rootNodeFor = rootNodeFor;\nexports.isShadowRoot = isShadowRoot;\nexports.closest = closest;\nexports.closestNode = closestNode;\nexports.closestAncestorElementBySelector = closestAncestorElementBySelector;\nexports.ancestorElements = ancestorElements;\nexports.ancestorElementsByTag = ancestorElementsByTag;\nexports.childElement = childElement;\nexports.childElements = childElements;\nexports.lastChildElement = lastChildElement;\nexports.childNodes = childNodes;\nexports.childElementByAttr = childElementByAttr;\nexports.lastChildElementByAttr = lastChildElementByAttr;\nexports.childElementsByAttr = childElementsByAttr;\nexports.childElementByTag = childElementByTag;\nexports.childElementsByTag = childElementsByTag;\nexports.matches = matches;\nexports.elementByTag = elementByTag;\nexports.scopedQuerySelector = scopedQuerySelector;\nexports.scopedQuerySelectorAll = scopedQuerySelectorAll;\nexports.getDataParamsFromAttributes = getDataParamsFromAttributes;\nexports.hasNextNodeInDocumentOrder = hasNextNodeInDocumentOrder;\nexports.templateContentClone = templateContentClone;\nexports.iterateCursor = iterateCursor;\nexports.openWindowDialog = openWindowDialog;\nexports.isJsonScriptTag = isJsonScriptTag;\nexports.isJsonLdScriptTag = isJsonLdScriptTag;\nexports.isRTL = isRTL;\nexports.escapeHtml = escapeHtml;\nexports.tryFocus = tryFocus;\nexports.isIframed = isIframed;\nexports.isAmpElement = isAmpElement;\nexports.whenUpgradedToCustomElement = whenUpgradedToCustomElement;\nexports.fullscreenEnter = fullscreenEnter;\nexports.fullscreenExit = fullscreenExit;\nexports.isFullscreenElement = isFullscreenElement;\nexports.isEnabled = isEnabled;\nexports.domOrderComparator = domOrderComparator;\nexports.toggleAttribute = toggleAttribute;\nexports.getVerticalScrollbarWidth = getVerticalScrollbarWidth;\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = exports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _css = require(\"./css\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\nvar HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n/** @const {string} */\n\nvar UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n/** @const {string} */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_PROMISE = UPGRADE_TO_CUSTOMELEMENT_PROMISE;\nvar UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\n\nexports.UPGRADE_TO_CUSTOMELEMENT_RESOLVER = UPGRADE_TO_CUSTOMELEMENT_RESOLVER;\n\nfunction waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n\n\n  var win = (0, _types.toWin)(parent.ownerDocument.defaultView);\n\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    var observer = new win.MutationObserver(function () {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {\n      childList: true\n    });\n  } else {\n    /** @const {number} */\n    var interval = win.setInterval(function () {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    },\n    /* milliseconds */\n    5);\n  }\n}\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\n\n\nfunction waitForChildPromise(parent, checkFunc) {\n  return new Promise(function (resolve) {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\n\n\nfunction waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, function () {\n    return !!doc.body;\n  }, callback);\n}\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\n\n\nfunction waitForBodyOpenPromise(doc) {\n  return new Promise(function (resolve) {\n    return waitForBodyOpen(doc, resolve);\n  });\n}\n/**\n * Removes the element.\n * @param {!Element} element\n */\n\n\nfunction removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\n\n\nfunction removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\n\n\nfunction copyChildren(from, to) {\n  var frag = to.ownerDocument.createDocumentFragment();\n\n  for (var n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n\n  to.appendChild(frag);\n}\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\n\n\nfunction insertAfterOrAtStart(root, element, after) {\n  var before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction addAttributesToElement(element, attributes) {\n  for (var attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n\n  return element;\n}\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\n\n\nfunction createElementWithAttributes(doc, tagName, attributes) {\n  var element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\n\n\nfunction isConnectedNode(node) {\n  var connected = node.isConnected;\n\n  if (connected !== undefined) {\n    return connected;\n  } // \"An element is connected if its shadow-including root is a document.\"\n\n\n  var n = node;\n\n  do {\n    n = rootNodeFor(n);\n\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\n\n\nfunction rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n\n  var n; // Check isShadowRoot() is only needed for the polyfill case.\n\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n\n  return n;\n}\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  } // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n\n\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n\n  return value.nodeType ==\n  /* DOCUMENT_FRAGMENT */\n  11 && Object.prototype.toString.call(value) === '[object ShadowRoot]';\n}\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\n\n\nfunction closest(element, callback, opt_stopAt) {\n  for (var el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\n\n\nfunction closestNode(node, callback) {\n  for (var n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\n\n\nfunction closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, function (el) {\n    return matches(el, selector);\n  });\n}\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElements(child, predicate) {\n  var ancestors = [];\n\n  for (var ancestor = child.parentElement; ancestor; ancestor = ancestor.parentElement) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n\n  return ancestors;\n}\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\n\n\nfunction ancestorElementsByTag(child, tagName) {\n  (0, _css.assertIsName)(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, function (el) {\n    return el.tagName == tagName;\n  });\n}\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction childElement(parent, callback) {\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\n\n\nfunction childElements(parent, callback) {\n  var children = [];\n\n  for (var child = parent.firstElementChild; child; child = child.nextElementSibling) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n\n  return children;\n}\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\n\n\nfunction lastChildElement(parent, callback) {\n  for (var child = parent.lastElementChild; child; child = child.previousElementSibling) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\n\n\nfunction childNodes(parent, callback) {\n  var nodes = [];\n\n  for (var child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n\n  return nodes;\n}\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction childElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\n\n\nfunction lastChildElementByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return lastChildElement(parent, function (el) {\n    return el.hasAttribute(attr);\n  });\n}\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByAttr(parent, attr) {\n  (0, _css.assertIsName)(attr);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> [\" + attr + \"]\")\n  );\n}\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction childElementByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelector(parent, \"> \" + tagName)\n  );\n}\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\n\n\nfunction childElementsByTag(parent, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return (\n    /*OK*/\n    scopedQuerySelectorAll(parent, \"> \" + tagName)\n  );\n}\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\n\n\nfunction matches(el, selector) {\n  var matcher = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector;\n\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n\n  return false; // IE8 always returns false.\n}\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\n\n\nfunction elementByTag(element, tagName) {\n  (0, _css.assertIsName)(tagName);\n  return element.\n  /*OK*/\n  querySelector(tagName);\n}\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectionFallback(root, selector) {\n  var unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  var scopedSelector = (0, _css.prependSelectorsWith)(selector, \".\" + unique);\n  var elements = root.\n  /*OK*/\n  querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\n\n\nfunction scopedQuerySelector(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelector((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  var fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\n\n\nfunction scopedQuerySelectorAll(root, selector) {\n  if ((0, _css.isScopeSelectorSupported)(root)) {\n    return root.\n    /*OK*/\n    querySelectorAll((0, _css.prependSelectorsWith)(selector, ':scope'));\n  } // Only IE.\n\n\n  return scopedQuerySelectionFallback(root, selector);\n}\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\n\n\nfunction getDataParamsFromAttributes(element, opt_computeParamNameFunc, opt_paramPattern) {\n  var computeParamNameFunc = opt_computeParamNameFunc || function (key) {\n    return key;\n  };\n\n  var dataset = element.dataset;\n  var params = (0, _object.dict)();\n  var paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n\n  for (var key in dataset) {\n    var _matches = key.match(paramPattern);\n\n    if (_matches) {\n      var param = _matches[1][0].toLowerCase() + _matches[1].substr(1);\n\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n\n  return params;\n}\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\n\n\nfunction hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  var currentElement = element;\n\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while ((currentElement = currentElement.parentNode) && currentElement != opt_stopNode);\n\n  return false;\n}\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\n\n\nfunction templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    var content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\n\n\nfunction iterateCursor(iterable, cb) {\n  var length = iterable.length;\n\n  for (var i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\n\n\nfunction openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  var res;\n\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    (0, _log.dev)().error('DOM', 'Failed to open url on target: ', target, e);\n  } // Then try with `_top` target.\n\n\n  if (!res && target != '_top' && !(0, _string.includes)(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n\n  return res;\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.hasAttribute('type') && element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON';\n}\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isJsonLdScriptTag(element) {\n  return element.tagName == 'SCRIPT' && element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON';\n}\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\n\n\nfunction isRTL(doc) {\n  var dir = doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir') || 'ltr';\n  return dir == 'rtl';\n}\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\n\n\nfunction escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n/**\n * @param {string} c\n * @return {string}\n */\n\n\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\n\n\nfunction tryFocus(element) {\n  try {\n    element.\n    /*OK*/\n    focus();\n  } catch (e) {// IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction isIframed(win) {\n  return win.parent && win.parent != win;\n}\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isAmpElement(element) {\n  var tag = element.tagName; // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n\n  return (0, _string.startsWith)(tag, 'AMP-') && // Some \"amp-*\" elements are not really AMP elements. :smh:\n  !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY');\n}\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\n\n\nfunction whenUpgradedToCustomElement(element) {\n  (0, _log.devAssert)(isAmpElement(element), 'element is not AmpElement');\n\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  } // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n\n\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    var deferred = new _promise.Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenEnter(element) {\n  var requestFs = element.requestFullscreen || element.requestFullScreen || element.webkitRequestFullscreen || element.webkitEnterFullscreen || element.msRequestFullscreen || element.mozRequestFullScreen;\n\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\n\n\nfunction fullscreenExit(element) {\n  var elementBoundExit = element.cancelFullScreen || element.exitFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullscreen;\n\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return;\n  }\n\n  var docBoundExit = ownerDocument.cancelFullScreen || ownerDocument.exitFullscreencancelFullScreen || ownerDocument.webkitExitFullscreencancelFullScreen || ownerDocument.webkitCancelFullScreencancelFullScreen || ownerDocument.mozCancelFullScreencancelFullScreen || ownerDocument.msExitFullscreen;\n\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isFullscreenElement(element) {\n  var webkitDisplayingFullscreen = element.webkitDisplayingFullscreen;\n\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n\n  var ownerDocument = element.ownerDocument;\n\n  if (!ownerDocument) {\n    return false;\n  }\n\n  var fullscreenElement = ownerDocument.fullscreenElement || ownerDocument.webkitFullscreenElement || ownerDocument.mozFullScreenElement || ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\n\n\nfunction isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\n\n\nfunction domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  var pos = element1.compareDocumentPosition(element2);\n  var precedingOrContains = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS; // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n\n  if (pos & precedingOrContains) {\n    return 1;\n  } // if fe2 is following or contained by fe1, then fe1 is before fe2\n\n\n  return -1;\n}\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\n\n\nfunction toggleAttribute(element, name, forced) {\n  var hasAttribute = element.hasAttribute(name);\n  var enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\n\n\nfunction getVerticalScrollbarWidth(win) {\n  var documentElement = win.document.documentElement;\n  var windowWidth = win.\n  /*OK*/\n  innerWidth;\n  var documentWidth = documentElement.\n  /*OK*/\n  clientWidth;\n  return windowWidth - documentWidth;\n}\n\n},{\"./css\":13,\"./log\":26,\"./string\":33,\"./types\":36,\"./utils/object\":43,\"./utils/promise\":44}],15:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getElementService = getElementService;\nexports.getElementServiceIfAvailable = getElementServiceIfAvailable;\nexports.getElementServiceForDoc = getElementServiceForDoc;\nexports.getElementServiceIfAvailableForDoc = getElementServiceIfAvailableForDoc;\nexports.getElementServiceIfAvailableForDocInEmbedScope = getElementServiceIfAvailableForDocInEmbedScope;\nexports.extensionScriptsInNode = extensionScriptsInNode;\nexports.isExtensionScriptInNode = isExtensionScriptInNode;\n\nvar dom = _interopRequireWildcard(require(\"./dom\"));\n\nvar _service = require(\"./service\");\n\nvar _types = require(\"./types\");\n\nvar _log = require(\"./log\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nfunction getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailable(win, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNull)(win, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\n\n\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\n\n\nfunction getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(element, id, extension, opt_element).then(function (service) {\n    return assertService(service, id, extension);\n  });\n}\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDoc(element, id, extension, opt_element) {\n  var s = (0, _service.getServicePromiseOrNullForDoc)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      s\n    );\n  }\n\n  var ampdoc = (0, _service.getAmpdoc)(element);\n  return ampdoc.waitForBodyOpen().then(function () {\n    return waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNullForDoc)(element, id);\n    } else if (isElementScheduled(ampdoc.win, extension)) {\n      return (0, _service.getServicePromiseForDoc)(element, id);\n    }\n\n    return null;\n  });\n}\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\n\n\nfunction getElementServiceIfAvailableForDocInEmbedScope(element, id, extension) {\n  var s = (0, _service.getExistingServiceForDocInEmbedScope)(element, id);\n\n  if (s) {\n    return (\n      /** @type {!Promise<?Object>} */\n      Promise.resolve(s)\n    );\n  }\n\n  var win = (0, _types.toWin)(element.ownerDocument.defaultView);\n  var topWin = (0, _service.getTopWindow)(win); // In embeds, doc services are stored on the embed window.\n\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction assertService(service, id, extension) {\n  return (\n    /** @type {!Object} */\n    (0, _log.userAssert)(service, 'Service %s was requested to be provided through %s, ' + 'but %s is not loaded in the current page. To fix this ' + 'problem load the JavaScript file for %s in this page.', id, extension, extension, extension)\n  );\n}\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\n\n\nfunction extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n\n  var scripts = {}; // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n\n  var list = head.querySelectorAll('script[custom-element],script[custom-template]');\n\n  for (var i = 0; i < list.length; i++) {\n    var script = list[i];\n    var name = script.getAttribute('custom-element') || script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n\n  return Object.keys(scripts);\n}\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\n\n\nfunction isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(function () {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\n\n\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\n\n\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  var extensions = (0, _service.getService)(win, 'extensions');\n  return (\n    /** @type {!Promise<?Object>} */\n    extensions.waitForExtension(win, extension)\n  );\n}\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\n\n\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom.waitForBodyOpenPromise(win.document).then(function () {\n    return waitForExtensionIfPresent(win, extension, win.document.head);\n  }).then(function () {\n    // If this service is provided by an element, then we can't depend on\n    // the service (they may not use the element).\n    if (opt_element) {\n      return (0, _service.getServicePromiseOrNull)(win, id);\n    } else if (isElementScheduled(win, extension)) {\n      return (0, _service.getServicePromise)(win, id);\n    }\n\n    return null;\n  });\n}\n\n},{\"./dom\":14,\"./log\":26,\"./service\":31,\"./types\":36}],16:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.reportErrorForWin = reportErrorForWin;\nexports.reportError = reportError;\nexports.cancellation = cancellation;\nexports.isCancellation = isCancellation;\nexports.blockedByConsentError = blockedByConsentError;\nexports.isBlockedByConsent = isBlockedByConsent;\nexports.installErrorReporting = installErrorReporting;\nexports.reportErrorToServerOrViewer = reportErrorToServerOrViewer;\nexports.maybeReportErrorToViewer = maybeReportErrorToViewer;\nexports.errorReportingDataForViewer = errorReportingDataForViewer;\nexports.getErrorReportData = getErrorReportData;\nexports.detectNonAmpJs = detectNonAmpJs;\nexports.resetAccumulatedErrorMessagesForTesting = resetAccumulatedErrorMessagesForTesting;\nexports.detectJsEngineFromStack = detectJsEngineFromStack;\nexports.reportErrorToAnalytics = reportErrorToAnalytics;\n\nvar _ampEvents = require(\"./amp-events\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _experiments = require(\"./experiments\");\n\nvar _exponentialBackoff = require(\"./exponential-backoff\");\n\nvar _mode = require(\"./mode\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _url = require(\"./url\");\n\nvar _styleInstaller = require(\"./style-installer\");\n\nvar _string = require(\"./string\");\n\nvar _analytics = require(\"./analytics\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @const {string}\n */\nvar CANCELLED = 'CANCELLED';\n/**\n * @const {string}\n */\n\nvar BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n/**\n * @const {string}\n */\n\nvar ABORTED = 'AbortError';\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\n\nvar NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\n\nvar USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\n\nvar accumulatedErrorMessages = self.__AMP_ERRORS || []; // Use a true global, to avoid multi-module inclusion issues.\n\nself.__AMP_ERRORS = accumulatedErrorMessages;\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\n\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n\n  array.push(element);\n}\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\n\n\nvar _reportingBackoff = function reportingBackoff(work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  _reportingBackoff = (0, _exponentialBackoff.exponentialBackoff)(1.5);\n  return _reportingBackoff(work);\n};\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\n\n\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(\n    /** @type {!JsonObject} */\n    value);\n  } catch (e) {\n    return String(value);\n  }\n}\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\n\n\nvar detectedJsEngine;\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\n\nfunction reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n\n  if (error && !!win && (0, _log.isUserErrorMessage)(error.message) && !(0, _log.isUserErrorEmbed)(error.message)) {\n    reportErrorToAnalytics(\n    /** @type {!Error} */\n    error, win);\n  }\n}\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\n\n\nfunction reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    var isValidError;\n\n    if (error) {\n      if (error.message !== undefined) {\n        error = (0, _log.duplicateErrorIfNecessary)(\n        /** @type {!Error} */\n        error);\n        isValidError = true;\n      } else {\n        var origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    } // Report if error is not an expected type.\n\n\n    if (!isValidError && (0, _mode.getMode)().localDev && !(0, _mode.getMode)().test) {\n      setTimeout(function () {\n        var rethrow = new Error('_reported_ Error reported incorrectly: ' + error);\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return (\n        /** @type {!Error} */\n        error\n      );\n    }\n\n    error.reported = true; // Update element.\n\n    var element = opt_associatedElement || error.associatedElement;\n\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n\n      if ((0, _mode.getMode)().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    } // Report to console.\n\n\n    if (self.console) {\n      var output = console.error || console.log;\n\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!(0, _mode.getMode)().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(_ampEvents.AmpEvents.ERROR, error.message);\n    } // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n\n\n    onError['call'](undefined, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n\n  return (\n    /** @type {!Error} */\n    error\n  );\n}\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\n\n\nfunction cancellation() {\n  return new Error(CANCELLED);\n}\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\n\n\nfunction isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n\n  if (typeof errorOrMessage == 'string') {\n    return (0, _string.startsWith)(errorOrMessage, CANCELLED);\n  }\n\n  if (typeof errorOrMessage.message == 'string') {\n    return (0, _string.startsWith)(errorOrMessage.message, CANCELLED);\n  }\n\n  return false;\n}\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\n\n\nfunction blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\n\n\nfunction isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n\n  if (typeof errorOrMessage == 'string') {\n    return (0, _string.startsWith)(errorOrMessage, BLOCK_BY_CONSENT);\n  }\n\n  if (typeof errorOrMessage.message == 'string') {\n    return (0, _string.startsWith)(errorOrMessage.message, BLOCK_BY_CONSENT);\n  }\n\n  return false;\n}\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\n\n\nfunction installErrorReporting(win) {\n  win.onerror =\n  /** @type {!Function} */\n  onError;\n  win.addEventListener('unhandledrejection', function (event) {\n    if (event.reason && (event.reason.message === CANCELLED || event.reason.message === BLOCK_BY_CONSENT || event.reason.message === ABORTED)) {\n      event.preventDefault();\n      return;\n    }\n\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\n\n\nfunction onError(message, filename, line, col, error) {\n  var _this = this;\n\n  // Make an attempt to unhide the body.\n  if (this && this.document) {\n    (0, _styleInstaller.makeBodyVisibleRecovery)(this.document);\n  }\n\n  if ((0, _mode.getMode)().localDev || (0, _mode.getMode)().development || (0, _mode.getMode)().test) {\n    return;\n  }\n\n  var hasNonAmpJs = false;\n\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {// Ignore errors during error report generation.\n  }\n\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n\n  var data = getErrorReportData(message, filename, line, col, error, hasNonAmpJs);\n\n  if (data) {\n    _reportingBackoff(function () {\n      try {\n        return reportErrorToServerOrViewer(_this,\n        /** @type {!JsonObject} */\n        data).catch(function () {// catch async errors to avoid recursive errors.\n        });\n      } catch (e) {// catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\n\n\nfunction reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n  return maybeReportErrorToViewer(win, data).then(function (reportedErrorToViewer) {\n    if (!reportedErrorToViewer) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', _config.urls.errorReporting, true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\n\n\nfunction maybeReportErrorToViewer(win, data) {\n  var ampdocService = _services.Services.ampdocServiceFor(win);\n\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n\n  var ampdocSingle = ampdocService.getSingleDoc();\n  var htmlElement = ampdocSingle.getRootNode().documentElement;\n  var docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n\n  var viewer = _services.Services.viewerForDoc(ampdocSingle);\n\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n\n  return viewer.isTrustedViewer().then(function (viewerTrusted) {\n    if (!viewerTrusted) {\n      return false;\n    }\n\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\n\n\nfunction errorReportingDataForViewer(errorReportData) {\n  return (0, _object.dict)({\n    'm': errorReportData['m'],\n    // message\n    'a': errorReportData['a'],\n    // isUserError\n    's': errorReportData['s'],\n    // error stack\n    'el': errorReportData['el'],\n    // tagName\n    'ex': errorReportData['ex'],\n    // expected error?\n    'v': errorReportData['v'],\n    // runtime\n    'jse': errorReportData['jse'] // detectedJsEngine\n\n  });\n}\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\n\n\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\n\n\nfunction getErrorReportData(message, filename, line, col, error, hasNonAmpJs) {\n  message = buildErrorMessage_(message, error); // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n\n  var expected = !!(error && error.expected);\n\n  if (/_reported_/.test(message)) {\n    return;\n  }\n\n  if (message == CANCELLED) {\n    return;\n  }\n\n  var detachedWindow = !(self && self.window);\n  var throttleBase = Math.random(); // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n\n  if ((0, _eventHelper.isLoadErrorMessage)(message) || // See https://github.com/ampproject/amphtml/issues/7353\n  // for context.\n  message == 'Script error.' || // Window has become detached, really anything can happen\n  // at this point.\n  detachedWindow) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  var isUserError = (0, _log.isUserErrorMessage)(message); // Only report a subset of user errors.\n\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  } // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n\n\n  var data =\n  /** @type {!JsonObject} */\n  Object.create(null);\n  data['v'] = (0, _mode.getMode)().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(_log.USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0'; // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n  var runtime = '1p';\n\n  if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if ((0, _mode.getMode)().runtime) {\n    runtime = (0, _mode.getMode)().runtime;\n  }\n\n  if ((0, _mode.getMode)().singlePassType) {\n    data['spt'] = (0, _mode.getMode)().singlePassType;\n  }\n\n  data['rt'] = runtime; // Add our a4a id if we are inabox\n\n  if (runtime === 'inabox') {\n    data['adid'] = (0, _mode.getMode)().a4aId;\n  } // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n\n\n  data['ca'] = (0, _experiments.isCanary)(self) ? '1' : '0'; // Pass binary type.\n\n  data['bt'] = (0, _experiments.getBinaryType)(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  } // Is embedded?\n\n\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    var resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    var messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n\n  data['jse'] = detectedJsEngine;\n  var exps = [];\n  var experiments = (0, _experiments.experimentTogglesOrNull)(self);\n\n  for (var exp in experiments) {\n    var on = experiments[exp];\n    exps.push(exp + \"=\" + (on ? '1' : '0'));\n  }\n\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    var tagName = error.associatedElement ? error.associatedElement.tagName : 'u'; // Unknown\n\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    } // TODO(jridgewell, #18574); Make sure error is always an object.\n\n\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n  pushLimit(accumulatedErrorMessages, message, 25);\n  return data;\n}\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\n\n\nfunction detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n\n  var scripts = win.document.querySelectorAll('script[src]');\n\n  for (var i = 0; i < scripts.length; i++) {\n    if (!(0, _url.isProxyOrigin)(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Resets accumulated error messages for testing\n */\n\n\nfunction resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n\n  Fn.prototype.t = function () {\n    throw new Error('message');\n  };\n\n  var object = new Fn();\n\n  try {\n    object.t();\n  } catch (e) {\n    var stack = e.stack; // Safari only mentions the method name.\n\n    if ((0, _string.startsWith)(stack, 't@')) {\n      return 'Safari';\n    } // Firefox mentions \"prototype\".\n\n\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    } // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n\n\n    var last = stack.split('\\n').pop();\n\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    } // Finally, chrome includes the error message in the stack.\n\n\n    if ((0, _string.startsWith)(stack, 'Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\n\n\nfunction reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (_services.Services.ampdocServiceFor(win).isSingleDoc()) {\n    var vars = (0, _object.dict)({\n      'errorName': error.name,\n      'errorMessage': error.message\n    });\n    (0, _analytics.triggerAnalyticsEvent)(getRootElement_(win), 'user-error', vars);\n  }\n}\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\n\n\nfunction getRootElement_(win) {\n  var root = _services.Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n\n  return (0, _log.dev)().assertElement(root.documentElement || root.body || root);\n}\n\n},{\"./amp-events\":8,\"./analytics\":10,\"./config\":12,\"./event-helper\":18,\"./experiments\":19,\"./exponential-backoff\":20,\"./log\":26,\"./mode\":28,\"./services\":32,\"./string\":33,\"./style-installer\":34,\"./url\":39,\"./utils/object\":43}],17:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalListenImplementation = internalListenImplementation;\nexports.detectEvtListenerOptsSupport = detectEvtListenerOptsSupport;\nexports.resetEvtListenerOptsSupportForTesting = resetEvtListenerOptsSupportForTesting;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nvar optsSupported;\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\nfunction internalListenImplementation(element, eventType, listener, opt_evtListenerOpts) {\n  var localElement = element;\n  var localListener = listener;\n  /**\n   * @type {?Function}\n   */\n\n  var wrapped;\n\n  wrapped = function wrapped(event) {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n  };\n\n  var optsSupported = detectEvtListenerOptsSupport();\n  var capture = false;\n\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n\n  localElement.addEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n  return function () {\n    if (localElement) {\n      localElement.removeEventListener(eventType, wrapped, optsSupported ? opt_evtListenerOpts : capture);\n    } // Ensure these are GC'd\n\n\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\n\n\nfunction detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    var options = {\n      get capture() {\n        optsSupported = true;\n      }\n\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {// EventListenerOptions are not supported\n  }\n\n  return optsSupported;\n}\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\n\n\nfunction resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.createCustomEvent = createCustomEvent;\nexports.listen = listen;\nexports.getData = getData;\nexports.getDetail = getDetail;\nexports.listenOnce = listenOnce;\nexports.listenOncePromise = listenOncePromise;\nexports.isLoaded = isLoaded;\nexports.loadPromise = loadPromise;\nexports.isLoadErrorMessage = isLoadErrorMessage;\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = void 0;\n\nvar _eventHelperListen = require(\"./event-helper-listen\");\n\nvar _dom = require(\"./dom\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string}  */\nvar LOAD_FAILURE_PREFIX = 'Failed to load:';\n/** @const {string} */\n\nvar MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\n\nexports.MEDIA_LOAD_FAILURE_SRC_PROPERTY = MEDIA_LOAD_FAILURE_SRC_PROPERTY;\n\nfunction createCustomEvent(win, type, detail, opt_eventInit) {\n  var eventInit =\n  /** @type {!CustomEventInit} */\n  {\n    detail: detail\n  };\n  Object.assign(eventInit, opt_eventInit); // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    var e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(type, !!eventInit.bubbles, !!eventInit.cancelable, detail);\n    return e;\n  }\n}\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listen(element, eventType, listener, opt_evtListenerOpts) {\n  return (0, _eventHelperListen.internalListenImplementation)(element, eventType, listener, opt_evtListenerOpts);\n}\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getData(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.data\n  );\n}\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\n\n\nfunction getDetail(event) {\n  return (\n    /** @type {?JsonObject|string|undefined} */\n    event.detail\n  );\n}\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\n\n\nfunction listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  var localListener = listener;\n  var unlisten = (0, _eventHelperListen.internalListenImplementation)(element, eventType, function (event) {\n    try {\n      localListener(event);\n    } finally {\n      // Ensure listener is GC'd\n      localListener = null;\n      unlisten();\n    }\n  }, opt_evtListenerOpts);\n  return unlisten;\n}\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\n\n\nfunction listenOncePromise(element, eventType, opt_evtListenerOpts, opt_cancel) {\n  var unlisten;\n  var eventPromise = new Promise(function (resolve) {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n\n  return eventPromise;\n}\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isLoaded(eleOrWindow) {\n  return !!(eleOrWindow.complete || eleOrWindow.readyState == 'complete' || isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0 || // If the passed in thing is a Window, infer loaded state from\n  //\n  eleOrWindow.document && eleOrWindow.document.readyState == 'complete');\n}\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\n\n\nfunction loadPromise(eleOrWindow) {\n  var unlistenLoad;\n  var unlistenError;\n\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n\n  var isMediaElement = isHTMLMediaElement(eleOrWindow);\n\n  if (isMediaElement && eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc) {\n    return Promise.reject(eleOrWindow);\n  }\n\n  var loadingPromise = new Promise(function (resolve, reject) {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    } // Don't unlisten on error for Windows.\n\n\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n\n    var errorTarget = eleOrWindow; // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = (0, _dom.lastChildElement)(eleOrWindow, function (child) {\n        return child.tagName === 'SOURCE';\n      });\n\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n  return loadingPromise.then(function () {\n    if (unlistenError) {\n      unlistenError();\n    }\n\n    return eleOrWindow;\n  }, function () {\n    if (unlistenLoad) {\n      unlistenLoad();\n    }\n\n    failedToLoad(eleOrWindow);\n  });\n}\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\n\n\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] = eleOrWindow.currentSrc || true;\n  } // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n\n\n  var target = eleOrWindow;\n\n  if (target && target.src) {\n    target = target.src;\n  }\n\n  throw (0, _log.user)().createError(LOAD_FAILURE_PREFIX, target);\n}\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\n\n\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\n\n\nfunction isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n\n},{\"./dom\":14,\"./event-helper-listen\":17,\"./log\":26}],19:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isCanary = isCanary;\nexports.getBinaryType = getBinaryType;\nexports.isExperimentOn = isExperimentOn;\nexports.toggleExperiment = toggleExperiment;\nexports.experimentToggles = experimentToggles;\nexports.experimentTogglesOrNull = experimentTogglesOrNull;\nexports.getExperimentTogglesForTesting = getExperimentTogglesForTesting;\nexports.resetExperimentTogglesForTesting = resetExperimentTogglesForTesting;\nexports.randomlySelectUnsetExperiments = randomlySelectUnsetExperiments;\nexports.getExperimentBranch = getExperimentBranch;\nexports.forceExperimentBranch = forceExperimentBranch;\nexports.RANDOM_NUMBER_GENERATORS = exports.ExperimentInfo = void 0;\n\nvar _log = require(\"./log\");\n\nvar _mode = require(\"./mode\");\n\nvar _object = require(\"./utils/object\");\n\nvar _url = require(\"./url\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\n/** @const {string} */\nvar TAG = 'EXPERIMENTS';\n/** @const {string} */\n\nvar LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n/** @const {string} */\n\nvar TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\n\nvar ExperimentInfo;\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\n\nexports.ExperimentInfo = ExperimentInfo;\n\nfunction isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\n\n\nfunction getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type ? win.AMP_CONFIG.type : 'unknown';\n}\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\n\n\nfunction isExperimentOn(win, experimentId) {\n  var toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\n\n\nfunction toggleExperiment(win, experimentId, opt_on, opt_transientExperiment) {\n  var currentlyOn = isExperimentOn(win,\n  /*OK*/\n  experimentId);\n  var on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n\n  if (on != currentlyOn) {\n    var toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      var storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles); // Avoid affecting tests that spy/stub warn().\n\n      if (!(0, _mode.getMode)().test) {\n        (0, _log.user)().warn(TAG, '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental', experimentId, on ? 'enabled' : 'disabled', win.location.hostname);\n      }\n    }\n  }\n\n  return on;\n}\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  var toggles = win[TOGGLES_WINDOW_PROPERTY]; // Read the default config of this build.\n\n  if (win.AMP_CONFIG) {\n    for (var experimentId in win.AMP_CONFIG) {\n      var frequency = win.AMP_CONFIG[experimentId];\n\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  } // Read document level override from meta tag.\n\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) && win.AMP_CONFIG['allow-doc-opt-in'].length > 0) {\n    var allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    var meta = win.document.head.querySelector('meta[name=\"amp-experiments-opt-in\"]');\n\n    if (meta) {\n      var optedInExperiments = meta.getAttribute('content').split(',');\n\n      for (var i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (win.AMP_CONFIG && Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) && win.AMP_CONFIG['allow-url-opt-in'].length > 0) {\n    var _allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    var hash = win.location.originalHash || win.location.hash;\n    var params = (0, _url.parseQueryString)(hash);\n\n    for (var _i = 0; _i < _allowed.length; _i++) {\n      var param = params[\"e-\" + _allowed[_i]];\n\n      if (param == '1') {\n        toggles[_allowed[_i]] = true;\n      }\n\n      if (param == '0') {\n        toggles[_allowed[_i]] = false;\n      }\n    }\n  }\n\n  return toggles;\n}\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\n\n\nfunction experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\n\n\nfunction getExperimentToggles(win) {\n  var experimentsString = '';\n\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    (0, _log.dev)().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n\n  var tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n  var toggles = Object.create(null);\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n\n  return toggles;\n}\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\n\n\nfunction saveExperimentToggles(win, toggles) {\n  var experimentIds = [];\n\n  for (var experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    (0, _log.user)().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\n\n\nfunction getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\n\n\nfunction resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\n\n\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\n\n\nvar RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng\n};\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\n\nexports.RANDOM_NUMBER_GENERATORS = RANDOM_NUMBER_GENERATORS;\n\nfunction selectRandomItem(arr) {\n  var rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\n\n\nfunction randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  var selectedExperiments = {};\n\n  for (var experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!(0, _object.hasOwn)(experiments, experimentName)) {\n      continue;\n    }\n\n    if ((0, _object.hasOwn)(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiments[experimentName].isTrafficEligible || !experiments[experimentName].isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    } // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n\n\n    if (!win.__AMP_EXPERIMENT_BRANCHES[experimentName] && isExperimentOn(win,\n    /*OK*/\n    experimentName)) {\n      var branches = experiments[experimentName].branches;\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(branches);\n      selectedExperiments[experimentName] = win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n\n  return selectedExperiments;\n}\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\n\n\nfunction getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES ? win.__AMP_EXPERIMENT_BRANCHES[experimentName] : null;\n}\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\n\n\nfunction forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n\n},{\"./log\":26,\"./mode\":28,\"./url\":39,\"./utils/object\":43}],20:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.exponentialBackoff = exponentialBackoff;\nexports.exponentialBackoffClock = exponentialBackoffClock;\nexports.getJitter = getJitter;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nfunction exponentialBackoff(opt_base) {\n  var getTimeout = exponentialBackoffClock(opt_base);\n  return function (work) {\n    return setTimeout(work, getTimeout());\n  };\n}\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\n\n\nfunction exponentialBackoffClock(opt_base) {\n  var base = opt_base || 2;\n  var count = 0;\n  return function () {\n    var wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\n\n\nfunction getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  var jitter = wait * opt_perc * Math.random();\n\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n\n  return jitter;\n}\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.centerFrameUnderVsyncMutate = centerFrameUnderVsyncMutate;\nexports.expandFrameUnderVsyncMutate = expandFrameUnderVsyncMutate;\nexports.collapseFrameUnderVsyncMutate = collapseFrameUnderVsyncMutate;\n\nvar _style = require(\"./style\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Centers a frame with a translate transition.\n * This function does direct DOM manipulation, so it needs to run under vsync\n * mutate context.\n * @param {!HTMLIFrameElement} iframe\n * @param {!ClientRect} iframeRect\n * @param {{width: number, height: number}} viewportSize\n * @param {number} transitionTimeMs\n */\nfunction centerFrameUnderVsyncMutate(iframe, iframeRect, viewportSize, transitionTimeMs) {\n  // TODO(alanorozco): Place a sentinel sibling on inabox to account for\n  // gap necessary for position: fixed.\n  var translateX = (0, _style.px)(viewportSize.width / 2 - iframeRect.width / 2 - iframeRect.left);\n  var translateY = (0, _style.px)(viewportSize.height / 2 - iframeRect.height / 2 - iframeRect.top);\n  (0, _style.setStyles)(iframe, {\n    'position': 'fixed',\n    'top': (0, _style.px)(iframeRect.top),\n    'right': (0, _style.px)(viewportSize.width - (iframeRect.left + iframeRect.width)),\n    'left': (0, _style.px)(iframeRect.left),\n    'bottom': (0, _style.px)(viewportSize.height - (iframeRect.top + iframeRect.height)),\n    'height': (0, _style.px)(iframeRect.height),\n    'width': (0, _style.px)(iframeRect.width),\n    'transition': \"transform \" + transitionTimeMs + \"ms ease\",\n    'transform': (0, _style.translate)(translateX, translateY),\n    'margin': 0\n  });\n}\n/**\n * Expands frame to fill the entire viewport.\n * This function does direct DOM manipulation, so it needs to run under vsync\n * mutate context.\n * @param {!HTMLIFrameElement} iframe\n */\n\n\nfunction expandFrameUnderVsyncMutate(iframe) {\n  (0, _style.setStyles)(iframe, {\n    'position': 'fixed',\n    'z-index': 1000,\n    'left': 0,\n    'right': 0,\n    'top': 0,\n    'bottom': 0,\n    'width': '100vw',\n    'height': '100vh',\n    'transition': null,\n    'transform': null,\n    'margin': 0,\n    'border': 0\n  });\n}\n/**\n * Resets frame that was previously expanded to fill the entire viewport.\n * This function does direct DOM manipulation, so it needs to run under vsync\n * mutate context.\n * @param {!HTMLIFrameElement} iframe\n */\n\n\nfunction collapseFrameUnderVsyncMutate(iframe) {\n  (0, _style.resetStyles)(iframe, ['position', 'z-index', 'left', 'right', 'top', 'bottom', 'width', 'height', 'margin', 'border']);\n}\n\n},{\"./style\":35}],22:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.listenFor = listenFor;\nexports.listenForOncePromise = listenForOncePromise;\nexports.postMessage = postMessage;\nexports.postMessageToWindows = postMessageToWindows;\nexports.parseIfNeeded = parseIfNeeded;\nexports.looksLikeTrackingIframe = looksLikeTrackingIframe;\nexports.isAdLike = isAdLike;\nexports.disableScrollingOnIframe = disableScrollingOnIframe;\nexports.canInspectWindow = canInspectWindow;\nexports.getFriendlyIframeEmbedOptional = getFriendlyIframeEmbedOptional;\nexports.isInFie = isInFie;\nexports.makePausable = makePausable;\nexports.isPausable = isPausable;\nexports.setPaused = setPaused;\nexports.FIE_EMBED_PROP = exports.SubscriptionApi = void 0;\n\nvar _dom = require(\"./dom\");\n\nvar _pFrameMessaging = require(\"./3p-frame-messaging\");\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object\");\n\nvar _eventHelper = require(\"./event-helper\");\n\nvar _url = require(\"./url\");\n\nvar _array = require(\"./utils/array\");\n\nvar _style = require(\"./style\");\n\nvar _json = require(\"./json\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nvar UNLISTEN_SENTINEL = 'unlisten';\n/**\n * The iframe feature policy that forces the iframe to pause when it's not\n * display.\n * See https://github.com/dtapuska/iframe-freeze.\n */\n\nvar EXECUTION_WHILE_NOT_RENDERED = 'execution-while-not-rendered';\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\n\nvar WindowEventsDef;\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\n\nfunction getListenFors(parentWin, opt_create) {\n  var listeningFors = parentWin.listeningFors;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n\n  return listeningFors || null;\n}\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\n\n\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  var listeningFors = getListenFors(parentWin, opt_create);\n\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  var listenSentinel = listeningFors[sentinel];\n\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n\n  return listenSentinel || null;\n}\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\n\n\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  var sentinel = getSentinel_(iframe, opt_is3P);\n  var listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n  var windowEvents;\n\n  for (var i = 0; i < listenSentinel.length; i++) {\n    var we = listenSentinel[i];\n\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null)\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\n\n\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  var listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  } // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n\n\n  var windowEvents;\n\n  for (var i = 0; i < listenSentinel.length; i++) {\n    var we = listenSentinel[i];\n    var contentWindow = we.frame.contentWindow;\n\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (triggerWin == contentWindow || isDescendantWindow(contentWindow, triggerWin)) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\n\n\nfunction isDescendantWindow(ancestor, descendant) {\n  for (var win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\n\n\nfunction dropListenSentinel(listenSentinel) {\n  var noopData = (0, _object.dict)({\n    'sentinel': UNLISTEN_SENTINEL\n  });\n\n  for (var i = listenSentinel.length - 1; i >= 0; i--) {\n    var windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n      var events = windowEvents.events;\n\n      for (var name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach(function (event) {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\n\n\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n\n  var listenForListener = function listenForListener(event) {\n    if (!(0, _eventHelper.getData)(event)) {\n      return;\n    }\n\n    var data = parseIfNeeded((0, _eventHelper.getData)(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    var listenForEvents = getListenForEvents(parentWin, data['sentinel'], event.origin, event.source);\n\n    if (!listenForEvents) {\n      return;\n    }\n\n    var listeners = listenForEvents[data['type']];\n\n    if (!listeners) {\n      return;\n    } // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n\n\n    listeners = listeners.slice();\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\n\n\nfunction listenFor(iframe, typeOfMessage, callback, opt_is3P, opt_includingNestedWindows, opt_allowOpaqueOrigin) {\n  (0, _log.devAssert)(iframe.src, 'only iframes with src supported');\n  (0, _log.devAssert)(!iframe.parentNode, 'cannot register events on an attached ' + 'iframe. It will cause hair-pulling bugs like #2942');\n  (0, _log.devAssert)(callback);\n  var parentWin = iframe.ownerDocument.defaultView;\n  registerGlobalListenerIfNeeded(parentWin);\n  var listenForEvents = getOrCreateListenForEvents(parentWin, iframe, opt_is3P);\n  var iframeOrigin = (0, _url.parseUrlDeprecated)(iframe.src).origin;\n  var events = listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n  var unlisten;\n\n  var listener = function listener(data, source, origin, event) {\n    var sentinel = data['sentinel']; // Exclude messages that don't satisfy amp sentinel rules.\n\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      } // For `amp` sentinel origin must match unless opaque origin is allowed\n\n\n      var isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    } // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n\n\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n  return unlisten = function unlisten() {\n    if (listener) {\n      var index = events.indexOf(listener);\n\n      if (index > -1) {\n        events.splice(index, 1);\n      } // Make sure references to the unlisten function do not keep\n      // alive too much.\n\n\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  };\n}\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\n\n\nfunction listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  var unlistenList = [];\n\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n\n  return new Promise(function (resolve) {\n    for (var i = 0; i < typeOfMessages.length; i++) {\n      var message = typeOfMessages[i];\n      var unlisten = listenFor(iframe, message, function (data, source, origin, event) {\n        for (var _i = 0; _i < unlistenList.length; _i++) {\n          unlistenList[_i]();\n        }\n\n        resolve({\n          data: data,\n          source: source,\n          origin: origin,\n          event: event\n        });\n      }, opt_is3P);\n      unlistenList.push(unlisten);\n    }\n  });\n}\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\n\n\nfunction postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(iframe, [{\n    win: iframe.contentWindow,\n    origin: targetOrigin\n  }], type, object, opt_is3P);\n}\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\n\n\nfunction postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  var payload = object;\n\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n\n  for (var i = 0; i < targets.length; i++) {\n    var target = targets[i];\n    target.win.\n    /*OK*/\n    postMessage(payload, target.origin);\n  }\n}\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\n\n\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\n\n\nfunction parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data = (0, _json.tryParseJson)(data, function (e) {\n        (0, _log.dev)().warn('IFRAME-HELPER', 'Postmessage could not be parsed. ' + 'Is it in a valid JSON format?', e);\n      }) || null;\n    } else if ((0, _pFrameMessaging.isAmpMessage)(data)) {\n      data = (0, _pFrameMessaging.deserializeMessage)(data);\n    } else {\n      data = null;\n    }\n  }\n\n  return (\n    /** @type {?JsonObject} */\n    data\n  );\n}\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\n\n\nvar SubscriptionApi =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  function SubscriptionApi(iframe, type, is3p, requestCallback) {\n    var _this = this;\n\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n\n    this.clientWindows_ = [];\n    /** @private @const {!UnlistenDef} */\n\n    this.unlisten_ = listenFor(this.iframe_, type, function (data, source, origin) {\n      // This message might be from any window within the iframe, we need\n      // to keep track of which windows want to be sent updates.\n      if (!_this.clientWindows_.some(function (entry) {\n        return entry.win == source;\n      })) {\n        _this.clientWindows_.push({\n          win: source,\n          origin: origin\n        });\n      }\n\n      requestCallback(data, source, origin);\n    }, this.is3p_, // For 3P frames we also allow nested frames within them to subscribe..\n    this.is3p_\n    /* opt_includingNestedWindows */\n    );\n  }\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n\n\n  var _proto = SubscriptionApi.prototype;\n\n  _proto.send = function send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    (0, _array.remove)(this.clientWindows_, function (client) {\n      return !client.win.parent;\n    });\n    postMessageToWindows(this.iframe_, this.clientWindows_, type, data, this.is3p_);\n  }\n  /**\n   * Destroys iframe.\n   */\n  ;\n\n  _proto.destroy = function destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  };\n\n  return SubscriptionApi;\n}();\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nexports.SubscriptionApi = SubscriptionApi;\n\nfunction looksLikeTrackingIframe(element) {\n  var box = element.getLayoutBox(); // This heuristic is subject to change.\n\n  if (box.width > 10 || box.height > 10) {\n    return false;\n  } // Iframe is not tracking iframe if open with user interaction\n\n\n  return !(0, _dom.closestAncestorElementBySelector)(element, '.i-amphtml-overlay');\n} // Most common ad sizes\n// Array of [width, height] pairs.\n\n\nvar adSizes = [[300, 250], [320, 50], [300, 50], [320, 100]];\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\n\nfunction isAdLike(element) {\n  var box = element.getLayoutBox();\n  var height = box.height,\n      width = box.width;\n\n  for (var i = 0; i < adSizes.length; i++) {\n    var refWidth = adSizes[i][0];\n    var refHeight = adSizes[i][1];\n\n    if (refHeight > height) {\n      continue;\n    }\n\n    if (refWidth > width) {\n      continue;\n    } // Fuzzy matching to account for padding.\n\n\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * @param {!Element} iframe\n * @return {!Element}\n * @private\n */\n\n\nfunction disableScrollingOnIframe(iframe) {\n  (0, _dom.addAttributesToElement)(iframe, (0, _object.dict)({\n    'scrolling': 'no'\n  })); // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n\n  (0, _style.setStyle)(iframe, 'overflow', 'hidden');\n  return iframe;\n}\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n * @private\n */\n\n\nfunction canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n}\n/** @const {string} */\n\n\nvar FIE_EMBED_PROP = '__AMP_EMBED__';\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\n\nexports.FIE_EMBED_PROP = FIE_EMBED_PROP;\n\nfunction getFriendlyIframeEmbedOptional(iframe) {\n  return (\n    /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */\n    iframe[FIE_EMBED_PROP]\n  );\n}\n/**\n * @param {!Element} element\n * @return {boolean}\n */\n\n\nfunction isInFie(element) {\n  return element.classList.contains('i-amphtml-fie') || !!(0, _dom.closestAncestorElementBySelector)(element, '.i-amphtml-fie');\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n */\n\n\nfunction makePausable(iframe) {\n  var oldAllow = (iframe.getAttribute('allow') || '').trim();\n  iframe.setAttribute('allow', EXECUTION_WHILE_NOT_RENDERED + \" 'none';\" + oldAllow);\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n * @return {boolean}\n */\n\n\nfunction isPausable(iframe) {\n  return !!iframe.featurePolicy && iframe.featurePolicy.features().indexOf(EXECUTION_WHILE_NOT_RENDERED) != -1 && !iframe.featurePolicy.allowsFeature(EXECUTION_WHILE_NOT_RENDERED);\n}\n/**\n * @param {!HTMLIFrameElement} iframe\n * @param {boolean} paused\n */\n\n\nfunction setPaused(iframe, paused) {\n  (0, _style.toggle)(iframe, !paused);\n}\n\n},{\"./3p-frame-messaging\":7,\"./dom\":14,\"./event-helper\":18,\"./json\":24,\"./log\":26,\"./style\":35,\"./url\":39,\"./utils/array\":40,\"./utils/object\":43}],23:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.internalRuntimeVersion = internalRuntimeVersion;\n\n/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nfunction internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n\n},{}],24:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.recreateNonProtoObject = recreateNonProtoObject;\nexports.getValueForExpr = getValueForExpr;\nexports.parseJson = parseJson;\nexports.tryParseJson = tryParseJson;\nexports.getChildJsonConfig = getChildJsonConfig;\nexports.deepEquals = deepEquals;\nexports.jsonConfiguration = jsonConfiguration;\nexports.jsonLiteral = jsonLiteral;\nexports.includeJsonLiteral = includeJsonLiteral;\n\nvar _dom = require(\"./dom\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nvar JSONScalarDef;\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\n\nvar JSONObjectDef;\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\n\nvar JSONArrayDef;\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\n\nvar JSONValueDef;\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\n\nfunction recreateNonProtoObject(obj) {\n  var copy = Object.create(null);\n\n  for (var k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n\n    var v = obj[k];\n    copy[k] = (0, _types.isObject)(v) ? recreateNonProtoObject(v) : v;\n  }\n\n  return (\n    /** @type {!JsonObject} */\n    copy\n  );\n}\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\n\n\nfunction getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  } // Otherwise, navigate via properties.\n\n\n  var parts = expr.split('.');\n  var value = obj;\n\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i];\n\n    if (part && value && value[part] !== undefined && hasOwnProperty(value, part)) {\n      value = value[part];\n      continue;\n    }\n\n    value = undefined;\n    break;\n  }\n\n  return value;\n}\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction parseJson(json) {\n  return (\n    /** @type {?JsonObject} */\n    JSON.parse(\n    /** @type {string} */\n    json)\n  );\n}\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\n\n\nfunction tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n\n    return null;\n  }\n}\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\n\n\nfunction getChildJsonConfig(element) {\n  var scripts = (0, _dom.childElementsByTag)(element, 'script');\n  var n = scripts.length;\n\n  if (n !== 1) {\n    throw new Error(\"Found \" + scripts.length + \" <script> children. Expected 1.\");\n  }\n\n  var script = scripts[0];\n\n  if (!(0, _dom.isJsonScriptTag)(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\n\n\nfunction deepEquals(a, b, depth) {\n  if (depth === void 0) {\n    depth = 5;\n  }\n\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n\n\n  var queue = [{\n    a: a,\n    b: b,\n    depth: depth\n  }];\n\n  while (queue.length > 0) {\n    var _queue$shift = queue.shift(),\n        _a = _queue$shift.a,\n        _b = _queue$shift.b,\n        _depth = _queue$shift.depth; // Only check deep equality if depth > 0.\n\n\n    if (_depth > 0) {\n      if (typeof _a !== typeof _b) {\n        return false;\n      } else if (Array.isArray(_a) && Array.isArray(_b)) {\n        if (_a.length !== _b.length) {\n          return false;\n        }\n\n        for (var i = 0; i < _a.length; i++) {\n          queue.push({\n            a: _a[i],\n            b: _b[i],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      } else if (_a && _b && typeof _a === 'object' && typeof _b === 'object') {\n        var keysA = Object.keys(\n        /** @type {!Object} */\n        _a);\n        var keysB = Object.keys(\n        /** @type {!Object} */\n        _b);\n\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n\n        for (var _i = 0; _i < keysA.length; _i++) {\n          var k = keysA[_i];\n          queue.push({\n            a: _a[k],\n            b: _b[k],\n            depth: _depth - 1\n          });\n        }\n\n        continue;\n      }\n    } // If we get here, then depth == 0 or (a, b) are primitives.\n\n\n    if (_a !== _b) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n\n  return Object.prototype.hasOwnProperty.call(\n  /** @type {!Object} */\n  obj, key);\n}\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\n\n\nfunction jsonConfiguration(obj) {\n  return (\n    /** @type {!JsonObject} */\n    obj\n  );\n}\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\n\n\nfunction jsonLiteral(value) {\n  return (\n    /** @type {!InternalJsonLiteralTypeDef} */\n    value\n  );\n}\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\n\n\nfunction includeJsonLiteral(value) {\n  return value;\n}\n\n},{\"./dom\":14,\"./types\":36}],25:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.layoutRectLtwh = layoutRectLtwh;\nexports.layoutRectFromDomRect = layoutRectFromDomRect;\nexports.layoutRectsOverlap = layoutRectsOverlap;\nexports.rectIntersection = rectIntersection;\nexports.layoutRectsRelativePos = layoutRectsRelativePos;\nexports.layoutPositionRelativeToScrolledViewport = layoutPositionRelativeToScrolledViewport;\nexports.expandLayoutRect = expandLayoutRect;\nexports.moveLayoutRect = moveLayoutRect;\nexports.areMarginsChanged = areMarginsChanged;\nexports.layoutRectSizeEquals = layoutRectSizeEquals;\nexports.layoutRectEquals = layoutRectEquals;\nexports.cloneLayoutMarginsChangeDef = cloneLayoutMarginsChangeDef;\nexports.RelativePositions = exports.LayoutMarginsChangeDef = exports.LayoutMarginsDef = exports.LayoutRectDef = void 0;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nvar LayoutRectDef;\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\n\nexports.LayoutRectDef = LayoutRectDef;\nvar LayoutMarginsDef;\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\n\nexports.LayoutMarginsDef = LayoutMarginsDef;\nvar LayoutMarginsChangeDef;\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\n\nexports.LayoutMarginsChangeDef = LayoutMarginsChangeDef;\nvar RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\n\nexports.RelativePositions = RelativePositions;\n\nfunction layoutRectLtwh(left, top, width, height) {\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top\n  };\n}\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\n\n\nfunction layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(Number(rect.left), Number(rect.top), Number(rect.width), Number(rect.height));\n}\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {boolean}\n */\n\n\nfunction layoutRectsOverlap(r1, r2) {\n  return r1.top <= r2.bottom && r2.top <= r1.bottom && r1.left <= r2.right && r2.left <= r1.right;\n}\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\n\n\nfunction rectIntersection(var_args) {\n  var x0 = -Infinity;\n  var x1 = Infinity;\n  var y0 = -Infinity;\n  var y1 = Infinity;\n\n  for (var i = 0; i < arguments.length; i++) {\n    var current = arguments[i];\n\n    if (!current) {\n      continue;\n    }\n\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n\n  if (x1 == Infinity) {\n    return null;\n  }\n\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {RelativePositions}\n */\n\n\nfunction layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!./service/viewport/viewport-interface.ViewportInterface} viewport\n * @param {number} scrollPos\n * @return {RelativePositions}\n */\n\n\nfunction layoutPositionRelativeToScrolledViewport(layoutBox, viewport, scrollPos) {\n  var scrollLayoutBox = layoutRectFromDomRect(\n  /** @type {!ClientRect} */\n  {\n    top: scrollPos,\n    bottom: scrollPos + viewport.getHeight(),\n    left: 0,\n    right: viewport.getWidth()\n  });\n\n  if (layoutRectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\n\n\nfunction expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(rect.left - rect.width * dw, rect.top - rect.height * dh, rect.width * (1 + dw * 2), rect.height * (1 + dh * 2));\n}\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\n\n\nfunction moveLayoutRect(rect, dx, dy) {\n  if (dx == 0 && dy == 0 || rect.width == 0 && rect.height == 0) {\n    return rect;\n  }\n\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\n\n\nfunction areMarginsChanged(margins, change) {\n  return change.top !== undefined && change.top != margins.top || change.right !== undefined && change.right != margins.right || change.bottom !== undefined && change.bottom != margins.bottom || change.left !== undefined && change.left != margins.left;\n}\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\n\n\nfunction layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\n\n\nfunction layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n\n  return r1.left == r2.left && r1.top == r2.top && r1.width == r2.width && r1.height == r2.height;\n}\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\n\n\nfunction cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right\n  };\n}\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isUserErrorMessage = isUserErrorMessage;\nexports.isUserErrorEmbed = isUserErrorEmbed;\nexports.setReportError = setReportError;\nexports.overrideLogLevel = overrideLogLevel;\nexports.duplicateErrorIfNecessary = duplicateErrorIfNecessary;\nexports.createErrorVargs = createErrorVargs;\nexports.rethrowAsync = rethrowAsync;\nexports.initLogConstructor = initLogConstructor;\nexports.resetLogConstructorForTesting = resetLogConstructorForTesting;\nexports.user = user;\nexports.dev = dev;\nexports.isFromEmbed = isFromEmbed;\nexports.devAssert = devAssert;\nexports.userAssert = userAssert;\nexports.Log = exports.LogLevel = exports.USER_ERROR_EMBED_SENTINEL = exports.USER_ERROR_SENTINEL = void 0;\n\nvar _mode = require(\"./mode\");\n\nvar _modeObject = require(\"./mode-object\");\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _types = require(\"./types\");\n\nvar _function = require(\"./utils/function\");\n\nvar _config = require(\"./config\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar noop = function noop() {};\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\n\n\nvar USER_ERROR_SENTINEL = \"\\u200B\\u200B\\u200B\";\n/**\n * Four zero width space.\n *\n * @const {string}\n */\n\nexports.USER_ERROR_SENTINEL = USER_ERROR_SENTINEL;\nvar USER_ERROR_EMBED_SENTINEL = \"\\u200B\\u200B\\u200B\\u200B\";\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\n\nexports.USER_ERROR_EMBED_SENTINEL = USER_ERROR_EMBED_SENTINEL;\n\nfunction isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\n\n\nfunction isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\n\n\nvar LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4\n};\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\n\nexports.LogLevel = LogLevel;\n\nfunction setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\n\n\nvar levelOverride_ = undefined;\n/**\n * @param {!LogLevel} level\n */\n\nfunction overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\n\n\nvar messageUrlRtv = function messageUrlRtv() {\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n};\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\n\n\nvar externalMessageUrl = function externalMessageUrl(id, interpolatedParts) {\n  return interpolatedParts.reduce(function (prefix, arg) {\n    return prefix + \"&s[]=\" + messageArgToEncodedComponent(arg);\n  }, \"https://log.amp.dev/?v=\" + messageUrlRtv() + \"&id=\" + encodeURIComponent(id));\n};\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\n\n\nvar externalMessagesSimpleTableUrl = function externalMessagesSimpleTableUrl() {\n  return _config.urls.cdn + \"/rtv/\" + messageUrlRtv() + \"/log-messages.simple.json\";\n};\n/**\n * @param {*} arg\n * @return {string}\n */\n\n\nvar messageArgToEncodedComponent = function messageArgToEncodedComponent(arg) {\n  return encodeURIComponent(String(elementStringOrPassthru(arg)));\n};\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\n\n\nvar Log =\n/*#__PURE__*/\nfunction () {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  function Log(win, levelFunc, opt_suffix) {\n    var _this = this;\n\n    if (opt_suffix === void 0) {\n      opt_suffix = '';\n    }\n\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (0, _mode.getMode)().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n\n    this.levelFunc_ = levelFunc;\n    /** @private @const {!LogLevel} */\n\n    this.level_ = this.defaultLevel_();\n    /** @private @const {string} */\n\n    this.suffix_ = opt_suffix;\n    /** @private {?JsonObject} */\n\n    this.messages_ = null;\n    this.fetchExternalMessagesOnce_ = (0, _function.once)(function () {\n      win.fetch(externalMessagesSimpleTableUrl()).then(function (response) {\n        return response.json();\n      }, noop).then(function (opt_messages) {\n        if (opt_messages) {\n          _this.messages_ =\n          /** @type {!JsonObject} */\n          opt_messages;\n        }\n      });\n    });\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n\n\n  var _proto = Log.prototype;\n\n  _proto.getLevel_ = function getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  ;\n\n  _proto.defaultLevel_ = function defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    } // Logging has been explicitly disabled.\n\n\n    if ((0, _mode.getMode)().log == '0') {\n      return LogLevel.OFF;\n    } // Logging is enabled for tests directly.\n\n\n    if ((0, _mode.getMode)().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    } // LocalDev by default allows INFO level, unless overriden by `#log`.\n\n\n    if ((0, _mode.getMode)().localDev && !(0, _mode.getMode)().log) {\n      return LogLevel.INFO;\n    } // Delegate to the specific resolver.\n\n\n    return this.levelFunc_((0, _modeObject.getModeObject)());\n  }\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  ;\n\n  _proto.msg_ = function msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      var fn = this.win.console.log;\n\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n\n      var args = this.maybeExpandMessageArgs_(messages); // Prefix console message with \"[tag]\".\n\n      var prefix = \"[\" + tag + \"]\";\n\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n\n      fn.apply(this.win.console, args);\n    }\n  }\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  ;\n\n  _proto.isEnabled = function isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.fine = function fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.info = function info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.warn = function warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  ;\n\n  _proto.error_ = function error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      var error = createErrorVargs.apply(null, Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.error = function error(tag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.name = tag || error.name; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  ;\n\n  _proto.expectedError = function expectedError(unusedTag, var_args) {\n    var error = this.error_.apply(this, arguments);\n\n    if (error) {\n      error.expected = true; // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createError = function createError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  ;\n\n  _proto.createExpectedError = function createExpectedError(var_args) {\n    var error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assert = function assert(shouldBeTrueish, opt_message, var_args) {\n    var firstElement;\n\n    if ((0, _types.isArray)(opt_message)) {\n      return this.assert.apply(this, [shouldBeTrueish].concat(this.expandMessageArgs_(\n      /** @type {!Array} */\n      opt_message)));\n    }\n\n    if (!shouldBeTrueish) {\n      var message = opt_message || 'Assertion failed';\n      var splitMessage = message.split('%s');\n      var first = splitMessage.shift();\n      var formatted = first;\n      var messageArray = [];\n      var i = 2;\n      pushIfNonEmpty(messageArray, first);\n\n      while (splitMessage.length > 0) {\n        var nextConstant = splitMessage.shift();\n        var val = arguments[i++];\n\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n\n      var e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e); // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n\n      self.__AMP_REPORT_ERROR(e);\n\n      throw e;\n    }\n\n    return shouldBeTrueish;\n  }\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertElement = function assertElement(shouldBeElement, opt_message) {\n    var shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(shouldBeElement, shouldBeTrueish, 'Element expected', opt_message);\n    return (\n      /** @type {!Element} */\n      shouldBeElement\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertString = function assertString(shouldBeString, opt_message) {\n    this.assertType_(shouldBeString, typeof shouldBeString == 'string', 'String expected', opt_message);\n    return (\n      /** @type {string} */\n      shouldBeString\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertNumber = function assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(shouldBeNumber, typeof shouldBeNumber == 'number', 'Number expected', opt_message);\n    return (\n      /** @type {number} */\n      shouldBeNumber\n    );\n  }\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertArray = function assertArray(shouldBeArray, opt_message) {\n    this.assertType_(shouldBeArray, (0, _types.isArray)(shouldBeArray), 'Array expected', opt_message);\n    return (\n      /** @type {!Array} */\n      shouldBeArray\n    );\n  }\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertBoolean = function assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(shouldBeBoolean, !!shouldBeBoolean === shouldBeBoolean, 'Boolean expected', opt_message);\n    return (\n      /** @type {boolean} */\n      shouldBeBoolean\n    );\n  }\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  ;\n\n  _proto.assertEnumValue = function assertEnumValue(enumObj, s, opt_enumName) {\n    if ((0, _types.isEnumValue)(enumObj, s)) {\n      return s;\n    }\n\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  ;\n\n  _proto.prepareError_ = function prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.maybeExpandMessageArgs_ = function maybeExpandMessageArgs_(args) {\n    if ((0, _types.isArray)(args[0])) {\n      return this.expandMessageArgs_(\n      /** @type {!Array} */\n      args[0]);\n    }\n\n    return args;\n  }\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  ;\n\n  _proto.expandMessageArgs_ = function expandMessageArgs_(parts) {\n    // First value should exist.\n    var id = parts.shift(); // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n\n    if ((0, _mode.getMode)(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n\n    return [\"More info at \" + externalMessageUrl(id, parts)];\n  }\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  ;\n\n  _proto.assertType_ = function assertType_(subject, assertion, defaultMessage, opt_message) {\n    if ((0, _types.isArray)(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, (opt_message || defaultMessage) + \": %s\", subject);\n    }\n  };\n\n  return Log;\n}();\n/**\n * @param {string|!Element} val\n * @return {string}\n */\n\n\nexports.Log = Log;\n\nvar stringOrElementString = function stringOrElementString(val) {\n  return (\n    /** @type {string} */\n    elementStringOrPassthru(val)\n  );\n};\n/**\n * @param {*} val\n * @return {*}\n */\n\n\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n\n  return val;\n}\n/**\n * @param {!Array} array\n * @param {*} val\n */\n\n\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\n\n\nfunction duplicateErrorIfNecessary(error) {\n  var messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  var message = error.message,\n      stack = error.stack;\n  var e = new Error(message); // Copy all the extraneous things we attach.\n\n  for (var prop in error) {\n    e[prop] = error[prop];\n  } // Ensure these are copied.\n\n\n  e.stack = stack;\n  return e;\n}\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\n\n\nfunction createErrorVargs(var_args) {\n  var error = null;\n  var message = '';\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n\n  return error;\n}\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\n\n\nfunction rethrowAsync(var_args) {\n  var error = createErrorVargs.apply(null, arguments);\n  setTimeout(function () {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n\n    throw error;\n  });\n}\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\n\n\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null\n};\nvar logs = self.__AMP_LOG;\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\n\nvar logConstructor = null;\n/**\n * Initializes log contructor.\n */\n\nfunction initLogConstructor() {\n  logConstructor = Log; // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n\n  dev();\n  user();\n}\n/**\n * Resets log contructor for testing.\n */\n\n\nfunction resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\n\n\nfunction user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n\n    return logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL);\n  }\n}\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\n\n\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n\n    return LogLevel.WARN;\n  }, suffix);\n}\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\n\n\nfunction dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n\n  return logs.dev = new logConstructor(self, function (mode) {\n    var logNum = parseInt(mode.log, 10);\n\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n\n    return LogLevel.OFF;\n  });\n}\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\n\n\nfunction isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n\n  return opt_element.ownerDocument.defaultView != win;\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction devAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  if ((0, _mode.getMode)().minified) {\n    return shouldBeTrueish;\n  }\n\n  return dev().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\n\n\nfunction userAssert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9) {\n  return user().\n  /*Orig call*/\n  assert(shouldBeTrueish, opt_message, opt_1, opt_2, opt_3, opt_4, opt_5, opt_6, opt_7, opt_8, opt_9);\n}\n\n},{\"./config\":12,\"./internal-version\":23,\"./mode\":28,\"./mode-object\":27,\"./types\":36,\"./utils/function\":41}],27:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getModeObject = getModeObject;\n\nvar _mode = require(\"./mode\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nfunction getModeObject(opt_win) {\n  return {\n    localDev: (0, _mode.getMode)(opt_win).localDev,\n    development: (0, _mode.getMode)(opt_win).development,\n    filter: (0, _mode.getMode)(opt_win).filter,\n    minified: (0, _mode.getMode)(opt_win).minified,\n    lite: (0, _mode.getMode)(opt_win).lite,\n    test: (0, _mode.getMode)(opt_win).test,\n    log: (0, _mode.getMode)(opt_win).log,\n    version: (0, _mode.getMode)(opt_win).version,\n    rtvVersion: (0, _mode.getMode)(opt_win).rtvVersion,\n    singlePassType: (0, _mode.getMode)(opt_win).singlePassType\n  };\n}\n\n},{\"./mode\":28}],28:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getMode = getMode;\nexports.getRtvVersionForTesting = getRtvVersionForTesting;\nexports.resetRtvVersionForTesting = resetRtvVersionForTesting;\nexports.ModeDef = void 0;\n\nvar _internalVersion = require(\"./internal-version\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nvar ModeDef;\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\n\nexports.ModeDef = ModeDef;\nvar rtvVersion = '';\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\n\nfunction getMode(opt_win) {\n  var win = opt_win || self;\n\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n\n  return win.__AMP_MODE = getMode_(win);\n}\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\n\n\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  var AMP_CONFIG = self.AMP_CONFIG || {}; // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n\n  var IS_DEV = true;\n  var IS_MINIFIED = false;\n  var localDevEnabled = !!AMP_CONFIG.localDev;\n  var runningTests = !!AMP_CONFIG.test || IS_DEV && !!(win.__AMP_TEST || win.__karma__);\n  var isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  var hashQuery = (0, _urlParseQueryString.parseQueryString_)( // location.originalHash is set by the viewer when it removes the fragment\n  // from the URL.\n  win.location.originalHash || win.location.hash);\n  var singlePassType = AMP_CONFIG.spt;\n  var searchQuery = (0, _urlParseQueryString.parseQueryString_)(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  } // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(hashQuery['development']) >= 0 || win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: (0, _internalVersion.internalRuntimeVersion)(),\n    rtvVersion: rtvVersion,\n    singlePassType: singlePassType\n  };\n}\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\n\n\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return (0, _internalVersion.internalRuntimeVersion)();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  } // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n\n\n  return \"01\" + (0, _internalVersion.internalRuntimeVersion)();\n}\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\n\n\nfunction getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n/** @visibleForTesting */\n\n\nfunction resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n\n},{\"./internal-version\":23,\"./url-parse-query-string\":37}],29:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Observable = void 0;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of Observable.\n   */\n  function Observable() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n\n\n  var _proto = Observable.prototype;\n\n  _proto.add = function add(handler) {\n    var _this = this;\n\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n\n    this.handlers_.push(handler);\n    return function () {\n      _this.remove(handler);\n    };\n  }\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  ;\n\n  _proto.remove = function remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var index = this.handlers_.indexOf(handler);\n\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n  /**\n   * Removes all observers.\n   */\n  ;\n\n  _proto.removeAll = function removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n\n    this.handlers_.length = 0;\n  }\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  ;\n\n  _proto.fire = function fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n\n    var handlers = this.handlers_;\n\n    for (var i = 0; i < handlers.length; i++) {\n      var handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  ;\n\n  _proto.getHandlerCount = function getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n\n    return this.handlers_.length;\n  };\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\n},{}],30:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.waitForServices = waitForServices;\nexports.hasRenderDelayingServices = hasRenderDelayingServices;\nexports.isRenderDelayingService = isRenderDelayingService;\nexports.includedServices = includedServices;\nexports.RenderDelayingService = void 0;\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nvar SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]'\n};\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\n\nvar RenderDelayingService =\n/*#__PURE__*/\nfunction () {\n  function RenderDelayingService() {}\n\n  var _proto = RenderDelayingService.prototype;\n\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  _proto.whenReady = function whenReady() {};\n\n  return RenderDelayingService;\n}();\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\n\n\nexports.RenderDelayingService = RenderDelayingService;\nvar LOAD_TIMEOUT = 3000;\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\n\nfunction waitForServices(win) {\n  var promises = includedServices(win).map(function (serviceId) {\n    var serviceReadyPromise = (0, _service.getServicePromise)(win, serviceId).then(function (service) {\n      if (service && isRenderDelayingService(service)) {\n        return service.whenReady().then(function () {\n          return service;\n        });\n      }\n\n      return service;\n    });\n    return _services.Services.timerFor(win).timeoutPromise(LOAD_TIMEOUT, serviceReadyPromise, \"Render timeout waiting for service \" + serviceId + \" to be ready.\");\n  });\n  return Promise.all(promises);\n}\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\n\n\nfunction hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isRenderDelayingService(service) {\n  var maybeRenderDelayingService =\n  /** @type {!RenderDelayingService}*/\n  service;\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\n\n\nfunction includedServices(win) {\n  /** @const {!Document} */\n  var doc = win.document;\n  (0, _log.devAssert)(doc.body);\n  return Object.keys(SERVICES).filter(function (service) {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n\n},{\"./log\":26,\"./service\":31,\"./services\":32}],31:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getExistingServiceForDocInEmbedScope = getExistingServiceForDocInEmbedScope;\nexports.installServiceInEmbedScope = installServiceInEmbedScope;\nexports.registerServiceBuilder = registerServiceBuilder;\nexports.registerServiceBuilderForDoc = registerServiceBuilderForDoc;\nexports.rejectServicePromiseForDoc = rejectServicePromiseForDoc;\nexports.getService = getService;\nexports.getServicePromise = getServicePromise;\nexports.getExistingServiceOrNull = getExistingServiceOrNull;\nexports.getServicePromiseOrNull = getServicePromiseOrNull;\nexports.getServiceForDoc = getServiceForDoc;\nexports.getServicePromiseForDoc = getServicePromiseForDoc;\nexports.getServicePromiseOrNullForDoc = getServicePromiseOrNullForDoc;\nexports.setParentWindow = setParentWindow;\nexports.getParentWindow = getParentWindow;\nexports.getTopWindow = getTopWindow;\nexports.getParentWindowFrameElement = getParentWindowFrameElement;\nexports.getAmpdoc = getAmpdoc;\nexports.isDisposable = isDisposable;\nexports.assertDisposable = assertDisposable;\nexports.disposeServicesForDoc = disposeServicesForDoc;\nexports.disposeServicesForEmbed = disposeServicesForEmbed;\nexports.installServiceInEmbedIfEmbeddable = installServiceInEmbedIfEmbeddable;\nexports.adoptServiceForEmbedDoc = adoptServiceForEmbedDoc;\nexports.resetServiceForTesting = resetServiceForTesting;\nexports.EmbeddableService = exports.Disposable = void 0;\n\nvar _promise = require(\"./utils/promise\");\n\nvar _log = require(\"./log\");\n\nvar _ampdocFie = require(\"./ampdoc-fie\");\n\nvar _types = require(\"./types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nvar ServiceHolderDef;\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\n\nvar Disposable =\n/*#__PURE__*/\nfunction () {\n  function Disposable() {}\n\n  var _proto = Disposable.prototype;\n\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  _proto.dispose = function dispose() {};\n\n  return Disposable;\n}();\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\n\n\nexports.Disposable = Disposable;\n\nvar EmbeddableService =\n/*#__PURE__*/\nfunction () {\n  function EmbeddableService() {}\n\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  EmbeddableService.installInEmbedWindow = function installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {};\n\n  return EmbeddableService;\n}();\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nexports.EmbeddableService = EmbeddableService;\n\nfunction getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  var document = element.ownerDocument;\n  var win = (0, _types.toWin)(document.defaultView);\n  var topWin = getTopWindow(win); // First, try to resolve via local embed window (if applicable).\n\n  var isEmbed = win != topWin;\n  var ampdocFieExperimentOn = (0, _ampdocFie.isInAmpdocFieExperiment)(topWin);\n\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    } // Fallback from FIE to parent is intentionally unsupported for safety.\n\n\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\n\n\nfunction installServiceInEmbedScope(embedWin, id, service) {\n  var topWin = getTopWindow(embedWin);\n  (0, _log.devAssert)(embedWin != topWin, 'Service override can only be installed in embed window: %s', id);\n  (0, _log.devAssert)(!isServiceRegistered(embedWin, id), 'Service override has already been installed: %s', id);\n  var ampdocFieExperimentOn = (0, _ampdocFie.isInAmpdocFieExperiment)(topWin);\n\n  if (ampdocFieExperimentOn) {\n    var ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n      return service;\n    },\n    /* override */\n    true);\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, function () {\n      return service;\n    });\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\n\n\nfunction registerServiceBuilderForDoc(nodeOrDoc, id, constructor, opt_instantiate) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\n\n\nfunction getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\n\n\nfunction getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\n\n\nfunction getServiceForDoc(elementOrAmpDoc, id) {\n  var ampdoc = getAmpdoc(elementOrAmpDoc);\n  var holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\n\n\nfunction getServiceForDocOrNullInternal(element, id) {\n  var ampdoc = getAmpdoc(element);\n  var holder = getAmpdocServiceHolder(ampdoc);\n\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\n\n\nfunction setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\n\n\nfunction getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\n\n\nfunction getParentWindowFrameElement(node, opt_topWin) {\n  var childWin = (node.ownerDocument || node).defaultView;\n  var topWin = opt_topWin || getTopWindow(childWin);\n\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return (\n        /** @type {?HTMLIFrameElement} */\n        childWin.frameElement\n      );\n    } catch (e) {// Ignore the error.\n    }\n  }\n\n  return null;\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\n\n\nfunction getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    var win = (0, _types.toWin)(\n    /** @type {!Document} */\n    (nodeOrDoc.ownerDocument || nodeOrDoc).defaultView);\n    return getAmpdocService(win).getAmpDoc(\n    /** @type {!Node} */\n    nodeOrDoc);\n  }\n\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDoc} */\n    nodeOrDoc\n  );\n}\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\n\n\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  var ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\n\n\nfunction getAmpdocService(win) {\n  return (\n    /** @type {!./service/ampdoc-impl.AmpDocService} */\n    getService(win, 'ampdoc')\n  );\n}\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\n\n\nfunction getServiceInternal(holder, id) {\n  (0, _log.devAssert)(isServiceRegistered(holder, id), \"Expected service \" + id + \" to be registered\");\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s.obj) {\n    (0, _log.devAssert)(s.ctor, \"Service \" + id + \" registered without ctor nor impl.\");\n    (0, _log.devAssert)(s.context, \"Service \" + id + \" registered without context.\");\n    s.obj = new s.ctor(s.context);\n    (0, _log.devAssert)(s.obj, \"Service \" + id + \" constructed to null.\");\n    s.ctor = null;\n    s.context = null; // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n\n  return s.obj;\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\n\n\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context; // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\n\n\nfunction getServicePromiseInternal(holder, id) {\n  var cached = getServicePromiseOrNullInternal(holder, id);\n\n  if (cached) {\n    return cached;\n  } // Service is not registered.\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n\n\n  var services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return (\n    /** @type {!Promise<!Object>} */\n    services[id].promise\n  );\n}\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\n\n\nfunction rejectServicePromiseInternal(holder, id, error) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\n\n\nfunction getServicePromiseOrNullInternal(holder, id) {\n  var services = getServices(holder);\n  var s = services[id];\n\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return s.promise = Promise.resolve(\n      /** @type {!Object} */\n      s.obj);\n    }\n  }\n\n  return null;\n}\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\n\n\nfunction getServices(holder) {\n  var services = holder.__AMP_SERVICES;\n\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n\n  return services;\n}\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\n\n\nfunction isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\n\n\nfunction assertDisposable(service) {\n  (0, _log.devAssert)(isDisposable(service), 'required to implement Disposable');\n  return (\n    /** @type {!Disposable} */\n    service\n  );\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\n\n\nfunction disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\n\n\nfunction disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n/**\n * @param {!Object} holder Object holding the service instances.\n */\n\n\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  var services = getServices(holder);\n\n  var _loop = function _loop(id) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      return \"continue\";\n    }\n\n    var serviceHolder = services[id];\n\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(function (instance) {\n        return disposeServiceInternal(id, instance);\n      });\n    }\n  };\n\n  for (var id in services) {\n    var _ret = _loop(id);\n\n    if (_ret === \"continue\") continue;\n  }\n}\n/**\n * @param {string} id\n * @param {!Object} service\n */\n\n\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    (0, _log.dev)().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\n\n\nfunction installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  var isEmbeddableService = typeof serviceClass.installInEmbedWindow === 'function';\n\n  if (!isEmbeddableService) {\n    return false;\n  }\n\n  var frameElement = (0, _log.dev)().assertElement(embedWin.frameElement, 'frameElement not found for embed');\n  var ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\n\n\nfunction adoptServiceForEmbedDoc(ampdoc, id) {\n  var service = getServiceInternal(getAmpdocServiceHolder((0, _log.devAssert)(ampdoc.getParent())), id);\n  registerServiceInternal(getAmpdocServiceHolder(ampdoc), ampdoc, id, function () {\n    return service;\n  });\n}\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\n\n\nfunction resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\n\n\nfunction isServiceRegistered(holder, id) {\n  var service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id]; // All registered services must have an implementation or a constructor.\n\n  return !!(service && (service.ctor || service.obj));\n}\n/** @return {!ServiceHolderDef} */\n\n\nfunction emptyServiceHolderWithPromise() {\n  var deferred = new _promise.Deferred();\n  var promise = deferred.promise,\n      resolve = deferred.resolve,\n      reject = deferred.reject;\n  promise.catch(function () {}); // avoid uncaught exception when service gets rejected\n\n  return {\n    obj: null,\n    promise: promise,\n    resolve: resolve,\n    reject: reject,\n    context: null,\n    ctor: null\n  };\n}\n\n},{\"./ampdoc-fie\":9,\"./log\":26,\"./types\":36,\"./utils/promise\":44}],32:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.Services = exports.SubscriptionService = void 0;\n\nvar _service = require(\"./service\");\n\nvar _elementService = require(\"./element-service\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nvar SubscriptionService;\nexports.SubscriptionService = SubscriptionService;\n\nvar Services =\n/*#__PURE__*/\nfunction () {\n  function Services() {}\n\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  Services.accessServiceForDoc = function accessServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  ;\n\n  Services.accessServiceForDocOrNull = function accessServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'access', 'amp-access')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDoc = function subscriptionsServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!SubscriptionService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  ;\n\n  Services.subscriptionsServiceForDocOrNull = function subscriptionsServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?SubscriptionService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'subscriptions', 'amp-subscriptions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  ;\n\n  Services.actionServiceForDoc = function actionServiceForDoc(element) {\n    return (\n      /** @type {!./service/action-impl.ActionService} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'action')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  ;\n\n  Services.standardActionsForDoc = function standardActionsForDoc(element) {\n    return (\n      /** @type {!./service/standard-actions-impl.StandardActions} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'standard-actions')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  ;\n\n  Services.activityForDoc = function activityForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'activity', 'amp-analytics')\n    );\n  }\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  ;\n\n  Services.ampdocServiceFor = function ampdocServiceFor(window) {\n    return (\n      /** @type {!./service/ampdoc-impl.AmpDocService} */\n      (0, _service.getService)(window, 'ampdoc')\n    );\n  }\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  ;\n\n  Services.ampdoc = function ampdoc(nodeOrAmpDoc) {\n    return (0, _service.getAmpdoc)(nodeOrAmpDoc);\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDoc = function analyticsForDoc(element, loadAnalytics) {\n    if (loadAnalytics === void 0) {\n      loadAnalytics = false;\n    }\n\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      var ampdoc = (0, _service.getAmpdoc)(element);\n      Services.extensionsFor(ampdoc.win).\n      /*OK*/\n      installExtensionForDoc(ampdoc, 'amp-analytics');\n    }\n\n    return (\n      /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  ;\n\n  Services.analyticsForDocOrNull = function analyticsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-analytics-instrumentation', 'amp-analytics')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  ;\n\n  Services.batchedXhrFor = function batchedXhrFor(window) {\n    return (\n      /** @type {!./service/batched-xhr-impl.BatchedXhr} */\n      (0, _service.getService)(window, 'batched-xhr')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  ;\n\n  Services.bindForDocOrNull = function bindForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */\n      (0, _elementService.getElementServiceIfAvailableForDocInEmbedScope)(element, 'bind', 'amp-bind')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  ;\n\n  Services.cidForDoc = function cidForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/cid-impl.CidDef>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'cid')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  ;\n\n  Services.navigationForDoc = function navigationForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/navigation.Navigation} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'navigation')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  ;\n\n  Services.loaderServiceForDoc = function loaderServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'loader', 'amp-loader')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  ;\n\n  Services.standaloneServiceForDoc = function standaloneServiceForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'standalone', 'amp-standalone')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  ;\n\n  Services.cryptoFor = function cryptoFor(window) {\n    return (\n      /** @type {!./service/crypto-impl.Crypto} */\n      (0, _service.getService)(window, 'crypto')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  ;\n\n  Services.documentInfoForDoc = function documentInfoForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/document-info-impl.DocInfo} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'documentInfo').get()\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  ;\n\n  Services.extensionsFor = function extensionsFor(window) {\n    return (\n      /** @type {!./service/extensions-impl.Extensions} */\n      (0, _service.getService)(window, 'extensions')\n    );\n  }\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  ;\n\n  Services.formSubmitForDoc = function formSubmitForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'form-submit-service')\n    );\n  }\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  ;\n\n  Services.hiddenObserverForDoc = function hiddenObserverForDoc(element) {\n    return (\n      /** @type {!./service/hidden-observer-impl.HiddenObserver} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'hidden-observer')\n    );\n  }\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  ;\n\n  Services.historyForDoc = function historyForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/history-impl.History} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'history')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  ;\n\n  Services.inputFor = function inputFor(win) {\n    return (0, _service.getService)(win, 'input');\n  }\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  ;\n\n  Services.inputmaskServiceForDocOrNull = function inputmaskServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'inputmask', 'amp-inputmask')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  ;\n\n  Services.ownersForDoc = function ownersForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/owners-interface.OwnersInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'owners')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceFor = function performanceFor(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getService)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  ;\n\n  Services.performanceForOrNull = function performanceForOrNull(window) {\n    return (\n      /** @type {!./service/performance-impl.Performance}*/\n      (0, _service.getExistingServiceOrNull)(window, 'performance')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  ;\n\n  Services.platformFor = function platformFor(window) {\n    return (\n      /** @type {!./service/platform-impl.Platform} */\n      (0, _service.getService)(window, 'platform')\n    );\n  }\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  ;\n\n  Services.positionObserverForDoc = function positionObserverForDoc(element) {\n    return (\n      /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */\n      (0, _service.getServiceForDoc)(element, 'position-observer')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  ;\n\n  Services.resourcesForDoc = function resourcesForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/resources-interface.ResourcesInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  ;\n\n  Services.resourcesPromiseForDoc = function resourcesPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'resources')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  ;\n\n  Services.shareTrackingForOrNull = function shareTrackingForOrNull(win) {\n    return (\n      /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'share-tracking', 'amp-share-tracking', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  ;\n\n  Services.storyVariableServiceForOrNull = function storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-variable', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  ;\n\n  Services.storyVariableService = function storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-variable')\n    );\n  }\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  ;\n\n  Services.storyStoreServiceForOrNull = function storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-store', 'amp-story')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreService = function storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-store')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  ;\n\n  Services.storyMediaQueryService = function storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-media-query')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestService = function storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-request')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  ;\n\n  Services.mediaPerformanceMetricsService = function mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'media-performance-metrics')\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNull = function localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationService = function localizationService(win) {\n    return (0, _service.getService)(win, 'localization');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  ;\n\n  Services.storyAnalyticsServiceForOrNull = function storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'story-analytics', 'amp-story', true)\n    );\n  }\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  ;\n\n  Services.storyAnalyticsService = function storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (0, _service.getExistingServiceOrNull)(win, 'story-analytics')\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  ;\n\n  Services.storyStoreServiceV01 = function storyStoreServiceV01(win) {\n    return (0, _service.getService)(win, 'story-store');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  ;\n\n  Services.storyRequestServiceV01 = function storyRequestServiceV01(win) {\n    return (0, _service.getService)(win, 'story-request-v01');\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  ;\n\n  Services.localizationServiceForOrNullV01 = function localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'localization-v01', 'amp-story', true)\n    );\n  }\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  ;\n\n  Services.localizationServiceV01 = function localizationServiceV01(win) {\n    return (0, _service.getService)(win, 'localization-v01');\n  }\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  ;\n\n  Services.viewerIntegrationVariableServiceForOrNull = function viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (0, _elementService.getElementServiceIfAvailable)(win, 'viewer-integration-variable', 'amp-viewer-integration', true)\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  ;\n\n  Services.webAnimationServiceFor = function webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'web-animation', 'amp-animation')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  ;\n\n  Services.storageForDoc = function storageForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/storage-impl.Storage>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'storage')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  ;\n\n  Services.templatesFor = function templatesFor(window) {\n    return (\n      /** @type {!./service/template-impl.Templates} */\n      (0, _service.getService)(window, 'templates')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  ;\n\n  Services.timerFor = function timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return (\n      /** @type {!./service/timer-impl.Timer} */\n      (0, _service.getService)(window, 'timer')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  ;\n\n  Services.urlReplacementsForDoc = function urlReplacementsForDoc(element) {\n    return (\n      /** @type {!./service/url-replacements-impl.UrlReplacements} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url-replace')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  ;\n\n  Services.userNotificationManagerForDoc = function userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (0, _elementService.getElementServiceForDoc)(element, 'userNotificationManager', 'amp-user-notification')\n    );\n  }\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  ;\n\n  Services.consentPolicyServiceForDocOrNull = function consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'consentPolicyManager', 'amp-consent')\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  ;\n\n  Services.geoForDocOrNull = function geoForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'geo', 'amp-geo', true)\n    );\n  }\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  ;\n\n  Services.userLocationForDocOrNull = function userLocationForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'user-location', 'amp-user-location', true)\n    );\n  }\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  ;\n\n  Services.urlForDoc = function urlForDoc(element) {\n    return (\n      /** @type {!./service/url-impl.Url} */\n      (0, _service.getExistingServiceForDocInEmbedScope)(element, 'url')\n    );\n  }\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  ;\n\n  Services.variantsForDocOrNull = function variantsForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'variant', 'amp-experiment', true)\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  ;\n\n  Services.videoManagerForDoc = function videoManagerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/video-manager-impl.VideoManager} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'video-manager')\n    );\n  }\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  ;\n\n  Services.viewerAssistanceForDocOrNull = function viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (0, _elementService.getElementServiceIfAvailableForDoc)(element, 'amp-viewer-assistance', 'amp-viewer-assistance')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  ;\n\n  Services.viewerForDoc = function viewerForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewer-interface.ViewerInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  ;\n\n  Services.viewerPromiseForDoc = function viewerPromiseForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */\n      (0, _service.getServicePromiseForDoc)(elementOrAmpDoc, 'viewer')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  ;\n\n  Services.vsyncFor = function vsyncFor(window) {\n    return (\n      /** @type {!./service/vsync-impl.Vsync} */\n      (0, _service.getService)(window, 'vsync')\n    );\n  }\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  ;\n\n  Services.viewportForDoc = function viewportForDoc(elementOrAmpDoc) {\n    return (\n      /** @type {!./service/viewport/viewport-interface.ViewportInterface} */\n      (0, _service.getServiceForDoc)(elementOrAmpDoc, 'viewport')\n    );\n  }\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  ;\n\n  Services.xhrFor = function xhrFor(window) {\n    return (\n      /** @type {!./service/xhr-impl.Xhr} */\n      (0, _service.getService)(window, 'xhr')\n    );\n  };\n\n  return Services;\n}();\n\nexports.Services = Services;\n\n},{\"./element-service\":15,\"./service\":31}],33:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.dashToCamelCase = dashToCamelCase;\nexports.camelCaseToDash = camelCaseToDash;\nexports.dashToUnderline = dashToUnderline;\nexports.endsWith = endsWith;\nexports.startsWith = startsWith;\nexports.includes = includes;\nexports.expandTemplate = expandTemplate;\nexports.stringHash32 = stringHash32;\nexports.trimEnd = trimEnd;\nexports.trimStart = trimStart;\nexports.padStart = padStart;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n/**\n * @param {string} match\n * @return {string}\n */\n\n\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\n\n\nfunction dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\n\n\nfunction camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\n\n\nfunction dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\n\n\nfunction endsWith(string, suffix) {\n  var index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\n\n\nfunction startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\n\n\nfunction includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + substring.length > string.length) {\n    return false;\n  }\n\n  return string.indexOf(substring, start) !== -1;\n}\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\n\n\nfunction expandTemplate(template, getter, opt_maxIterations) {\n  var maxIterations = opt_maxIterations || 1;\n\n  var _loop = function _loop(i) {\n    var matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, function (_a, b) {\n      matches++;\n      return getter(b);\n    });\n\n    if (!matches) {\n      return \"break\";\n    }\n  };\n\n  for (var i = 0; i < maxIterations; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"break\") break;\n  }\n\n  return template;\n}\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\n\n\nfunction stringHash32(str) {\n  var length = str.length;\n  var hash = 5381;\n\n  for (var i = 0; i < length; i++) {\n    hash = hash * 33 ^ str.charCodeAt(i);\n  } // Convert from 32-bit signed to unsigned.\n\n\n  return String(hash >>> 0);\n}\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\n\n\nfunction trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\n\n\nfunction trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\n\n\nfunction padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n\n  targetLength = targetLength - s.length;\n  var padding = padString;\n\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n\n  return padding.slice(0, targetLength) + s;\n}\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.installStylesForDoc = installStylesForDoc;\nexports.installStylesLegacy = installStylesLegacy;\nexports.installCssTransformer = installCssTransformer;\nexports.setBodyMadeVisibleForTesting = setBodyMadeVisibleForTesting;\nexports.makeBodyVisible = makeBodyVisible;\nexports.makeBodyVisibleRecovery = makeBodyVisibleRecovery;\nexports.bodyAlwaysVisible = bodyAlwaysVisible;\n\nvar _commonSignals = require(\"./common-signals\");\n\nvar _services = require(\"./services\");\n\nvar _log = require(\"./log\");\n\nvar _service = require(\"./service\");\n\nvar _dom = require(\"./dom\");\n\nvar _object = require(\"./utils/object\");\n\nvar _style = require(\"./style\");\n\nvar _renderDelayingServices = require(\"./render-delaying-services\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TRANSFORMER_PROP = '__AMP_CSS_TR';\nvar STYLE_MAP_PROP = '__AMP_CSS_SM';\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\nfunction installStylesForDoc(ampdoc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var cssRoot = ampdoc.getHeadNode();\n  var style = insertStyleElement(cssRoot, maybeTransform(cssRoot, cssText), opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    var rootNode = ampdoc.getRootNode(); // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\n\n\nfunction installStylesLegacy(doc, cssText, cb, opt_isRuntimeCss, opt_ext) {\n  var style = insertStyleElement((0, _log.dev)().assertElement(doc.head), cssText, opt_isRuntimeCss || false, opt_ext || null);\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    } // Poll until styles are available.\n\n\n    var interval = setInterval(function () {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n\n  return style;\n}\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\n\n\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  var styleMap = cssRoot[STYLE_MAP_PROP];\n\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = (0, _object.map)();\n  }\n\n  var isExtCss = !isRuntimeCss && ext && ext != 'amp-custom' && ext != 'amp-keyframes';\n  var key = isRuntimeCss ? 'amp-runtime' : isExtCss ? \"amp-extension=\" + ext : null; // Check if it has already been created or discovered.\n\n  if (key) {\n    var existing = getExistingStyleElement(cssRoot, styleMap, key);\n\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n\n      return existing;\n    }\n  } // Create the new style element and append to cssRoot.\n\n\n  var doc = cssRoot.ownerDocument || cssRoot;\n  var style = doc.createElement('style');\n  style.\n  /*OK*/\n  textContent = cssText;\n  var afterElement = null; // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = (0, _log.dev)().assertElement(getExistingStyleElement(cssRoot, styleMap, 'amp-runtime'));\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n\n    afterElement = cssRoot.lastChild;\n  }\n\n  (0, _dom.insertAfterOrAtStart)(cssRoot, style, afterElement);\n\n  if (key) {\n    styleMap[key] = style;\n  }\n\n  return style;\n}\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\n\n\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  } // Check if the style has already been added by the server layout.\n\n\n  var existing = cssRoot.\n  /*OK*/\n  querySelector(\"style[\" + key + \"]\");\n\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  } // Nothing found.\n\n\n  return null;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\n\n\nfunction installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\n\n\nfunction maybeTransform(cssRoot, cssText) {\n  var transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n/** @private {boolean} */\n\n\nvar bodyMadeVisible = false;\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\n\nfunction setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisible(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n  var win =\n  /** @type {!Window} */\n  doc.defaultView;\n  (0, _dom.waitForBodyOpenPromise)(doc).then(function () {\n    return (0, _renderDelayingServices.waitForServices)(win);\n  }).catch(function (reason) {\n    (0, _log.rethrowAsync)(reason);\n    return [];\n  }).then(function (services) {\n    bodyMadeVisible = true;\n    setBodyVisibleStyles(doc);\n    var ampdoc = (0, _service.getAmpdoc)(doc);\n    ampdoc.signals().signal(_commonSignals.CommonSignals.RENDER_START);\n\n    if (services.length > 0) {\n      var resources = _services.Services.resourcesForDoc(doc.documentElement);\n\n      resources.\n      /*OK*/\n      schedulePass(1,\n      /* relayoutAll */\n      true);\n    }\n\n    try {\n      var perf = _services.Services.performanceFor(win);\n\n      perf.tick('mbv');\n      perf.flush();\n    } catch (e) {}\n  });\n}\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\n\n\nfunction makeBodyVisibleRecovery(doc) {\n  (0, _log.devAssert)(doc.defaultView, 'Passed in document must have a defaultView');\n\n  if (bodyMadeVisible) {\n    return;\n  }\n\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\n\n\nfunction setBodyVisibleStyles(doc) {\n  (0, _style.setStyles)((0, _log.dev)().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none'\n  });\n}\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\n\n\nfunction bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\n\n\nfunction styleLoaded(doc, style) {\n  var sheets = doc.styleSheets;\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n},{\"./common-signals\":11,\"./dom\":14,\"./log\":26,\"./render-delaying-services\":30,\"./service\":31,\"./services\":32,\"./style\":35,\"./utils/object\":43}],35:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.camelCaseToTitleCase = camelCaseToTitleCase;\nexports.getVendorJsPropertyName = getVendorJsPropertyName;\nexports.setImportantStyles = setImportantStyles;\nexports.setStyle = setStyle;\nexports.getStyle = getStyle;\nexports.setStyles = setStyles;\nexports.assertNotDisplay = assertNotDisplay;\nexports.assertDoesNotContainDisplay = assertDoesNotContainDisplay;\nexports.setInitialDisplay = setInitialDisplay;\nexports.toggle = toggle;\nexports.px = px;\nexports.deg = deg;\nexports.translateX = translateX;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.removeAlphaFromColor = removeAlphaFromColor;\nexports.computedStyle = computedStyle;\nexports.resetStyles = resetStyles;\nexports.propagateObjectFitStyles = propagateObjectFitStyles;\n\nvar _log = require(\"./log\");\n\nvar _object = require(\"./utils/object.js\");\n\nvar _string = require(\"./string\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\n\n/** @type {Object<string, string>} */\nvar propertyNameCache;\n/** @const {!Array<string>} */\n\nvar vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\n\nfunction camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\n\n\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (var i = 0; i < vendorPrefixes.length; i++) {\n    var propertyName = vendorPrefixes[i] + titleCase;\n\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n\n  return '';\n}\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\n\n\nfunction getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if ((0, _string.startsWith)(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n\n  if (!propertyNameCache) {\n    propertyNameCache = (0, _object.map)();\n  }\n\n  var propertyName = propertyNameCache[camelCase];\n\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n\n    if (style[camelCase] === undefined) {\n      var titleCase = camelCaseToTitleCase(camelCase);\n      var prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n\n  return propertyName;\n}\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setImportantStyles(element, styles) {\n  var style = element.style;\n\n  for (var k in styles) {\n    style.setProperty(getVendorJsPropertyName(style, k), styles[k].toString(), 'important');\n  }\n}\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\n\n\nfunction setStyle(element, property, value, opt_units, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (propertyName) {\n    element.style[propertyName] =\n    /** @type {string} */\n    opt_units ? value + opt_units : value;\n  }\n}\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\n\n\nfunction getStyle(element, property, opt_bypassCache) {\n  var propertyName = getVendorJsPropertyName(element.style, property, opt_bypassCache);\n\n  if (!propertyName) {\n    return undefined;\n  }\n\n  return element.style[propertyName];\n}\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\n\n\nfunction setStyles(element, styles) {\n  for (var k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\n\n\nfunction assertNotDisplay(style) {\n  if (style === 'display') {\n    (0, _log.dev)().error('STYLE', '`display` style detected. You must use toggle instead.');\n  }\n\n  return style;\n}\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\n\n\nfunction assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    (0, _log.dev)().error('STYLE', '`display` style detected in styles. You must use toggle instead.');\n  }\n\n  return styles;\n}\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\n\n\nfunction setInitialDisplay(el, value) {\n  var style = el.style;\n  (0, _log.devAssert)(value !== '' && value !== 'none', 'Initial display value must not be \"none\". Use toggle instead.');\n  (0, _log.devAssert)(!style['display'], 'setInitialDisplay MUST NOT be used for ' + 'resetting the display style. If you are looking for display:none ' + 'toggling, use toggle instead.');\n  style['display'] = value;\n}\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\n\n\nfunction toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction px(value) {\n  return value + \"px\";\n}\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\n\n\nfunction deg(value) {\n  return value + \"deg\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction translateX(value) {\n  if (typeof value == 'string') {\n    return \"translateX(\" + value + \")\";\n  }\n\n  return \"translateX(\" + px(value) + \")\";\n}\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\n\n\nfunction translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n\n  if (opt_y === undefined) {\n    return \"translate(\" + x + \")\";\n  }\n\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n\n  return \"translate(\" + x + \", \" + opt_y + \")\";\n}\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction scale(value) {\n  return \"scale(\" + value + \")\";\n}\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\n\n\nfunction rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n\n  return \"rotate(\" + value + \")\";\n}\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\n\n\nfunction removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(/\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\n\n\nfunction computedStyle(win, el) {\n  var style =\n  /** @type {?CSSStyleDeclaration} */\n  win.getComputedStyle(el);\n  return (\n    /** @type {!Object<string, string>} */\n    style || (0, _object.map)()\n  );\n}\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\n\n\nfunction resetStyles(element, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\n\n\nfunction propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n},{\"./log\":26,\"./string\":33,\"./utils/object.js\":43}],36:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.isArray = isArray;\nexports.toArray = toArray;\nexports.isObject = isObject;\nexports.isFiniteNumber = isFiniteNumber;\nexports.isEnumValue = isEnumValue;\nexports.toWin = toWin;\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar toString_ = Object.prototype.toString;\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\n\nfunction toString(value) {\n  return toString_.call(value);\n}\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return toString(value) === '[object Object]';\n}\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\n\n\nfunction isEnumValue(enumObj, s) {\n  for (var k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\n\n\nfunction toWin(winOrNull) {\n  return (\n    /** @type {!Window} */\n    winOrNull\n  );\n}\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.parseQueryString_ = parseQueryString_;\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\nfunction parseQueryString_(queryString) {\n  var params =\n  /** @type {!JsonObject} */\n  Object.create(null);\n\n  if (!queryString) {\n    return params;\n  }\n\n  var match;\n\n  while (match = regex.exec(queryString)) {\n    var name = (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[1], match[1]);\n    var value = match[2] ? (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(match[2].replace(/\\+/g, ' '), match[2]) : '';\n    params[name] = value;\n  }\n\n  return params;\n}\n\n},{\"./url-try-decode-uri-component\":38}],38:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryDecodeUriComponent_ = tryDecodeUriComponent_;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nfunction tryDecodeUriComponent_(component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.getWinOrigin = getWinOrigin;\nexports.parseUrlDeprecated = parseUrlDeprecated;\nexports.parseUrlWithA = parseUrlWithA;\nexports.appendEncodedParamStringToUrl = appendEncodedParamStringToUrl;\nexports.addParamToUrl = addParamToUrl;\nexports.addParamsToUrl = addParamsToUrl;\nexports.addMissingParamsToUrl = addMissingParamsToUrl;\nexports.serializeQueryString = serializeQueryString;\nexports.isSecureUrlDeprecated = isSecureUrlDeprecated;\nexports.assertHttpsUrl = assertHttpsUrl;\nexports.assertAbsoluteHttpOrHttpsUrl = assertAbsoluteHttpOrHttpsUrl;\nexports.parseQueryString = parseQueryString;\nexports.removeFragment = removeFragment;\nexports.getFragment = getFragment;\nexports.isProxyOrigin = isProxyOrigin;\nexports.getProxyServingType = getProxyServingType;\nexports.isLocalhostOrigin = isLocalhostOrigin;\nexports.isProtocolValid = isProtocolValid;\nexports.removeAmpJsParamsFromUrl = removeAmpJsParamsFromUrl;\nexports.removeSearch = removeSearch;\nexports.removeParamsFromSearch = removeParamsFromSearch;\nexports.getSourceUrl = getSourceUrl;\nexports.getSourceOrigin = getSourceOrigin;\nexports.resolveRelativeUrl = resolveRelativeUrl;\nexports.resolveRelativeUrlFallback_ = resolveRelativeUrlFallback_;\nexports.getCorsUrl = getCorsUrl;\nexports.checkCorsUrl = checkCorsUrl;\nexports.tryDecodeUriComponent = tryDecodeUriComponent;\nexports.SOURCE_ORIGIN_PARAM = void 0;\n\nvar _lruCache = require(\"./utils/lru-cache\");\n\nvar _object = require(\"./utils/object\");\n\nvar _string = require(\"./string\");\n\nvar _mode = require(\"./mode\");\n\nvar _types = require(\"./types\");\n\nvar _urlParseQueryString = require(\"./url-parse-query-string\");\n\nvar _urlTryDecodeUriComponent = require(\"./url-try-decode-uri-component\");\n\nvar _config = require(\"./config\");\n\nvar _log = require(\"./log\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @type {!JsonObject}\n */\nvar SERVING_TYPE_PREFIX = (0, _object.dict)({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true\n});\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\n\nvar a;\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\n\nvar cache;\n/** @private @const Matches amp_js_* parameters in query string. */\n\nvar AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n/** @private @const Matches amp_gsa parameters in query string. */\n\nvar AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n/** @private @const Matches amp_r parameters in query string. */\n\nvar AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n/** @private @const Matches amp_kit parameters in query string. */\n\nvar AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n/** @private @const Matches usqp parameters from goog experiment in query string. */\n\nvar GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\nvar INVALID_PROTOCOLS = [\n/*eslint no-script-url: 0*/\n'javascript:',\n/*eslint no-script-url: 0*/\n'data:',\n/*eslint no-script-url: 0*/\n'vbscript:'];\n/** @const {string} */\n\nvar SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\n\nexports.SOURCE_ORIGIN_PARAM = SOURCE_ORIGIN_PARAM;\n\nfunction getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\n\n\nfunction parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a =\n    /** @type {!HTMLAnchorElement} */\n    self.document.createElement('a');\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new _lruCache.LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\n\n\nfunction parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url; // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  var info =\n  /** @type {!Location} */\n  {\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null // Set below.\n\n  }; // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  } // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n\n\n  if (info.protocol == 'http:' && info.port == 80 || info.protocol == 'https:' && info.port == 443) {\n    info.port = '';\n    info.host = info.hostname;\n  } // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n\n\n  var origin;\n\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n\n  info.origin = origin; // Freeze during testing to avoid accidental mutation.\n\n  var frozen = (0, _mode.getMode)().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction appendEncodedParamStringToUrl(url, paramString, opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n\n  var mainAndFragment = url.split('#', 2);\n  var mainAndQuery = mainAndFragment[0].split('?', 2);\n  var newUrl = mainAndQuery[0] + (mainAndQuery[1] ? opt_addToFront ? \"?\" + paramString + \"&\" + mainAndQuery[1] : \"?\" + mainAndQuery[1] + \"&\" + paramString : \"?\" + paramString);\n  newUrl += mainAndFragment[1] ? \"#\" + mainAndFragment[1] : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\n\n\nfunction addParamToUrl(url, key, value, opt_addToFront) {\n  var field = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction addMissingParamsToUrl(url, params) {\n  var location = parseUrlDeprecated(url);\n  var existingParams = parseQueryString(location.search);\n  var paramsToAdd = (0, _object.dict)({});\n  var keys = Object.keys(params);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (!(0, _object.hasOwn)(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n\n  return addParamsToUrl(url, paramsToAdd);\n}\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\n\n\nfunction serializeQueryString(params) {\n  var s = [];\n\n  for (var k in params) {\n    var v = params[k];\n\n    if (v == null) {\n      continue;\n    } else if ((0, _types.isArray)(v)) {\n      for (var i = 0; i < v.length; i++) {\n        var sv =\n        /** @type {string} */\n        v[i];\n        s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(sv));\n      }\n    } else {\n      var _sv =\n      /** @type {string} */\n      v;\n      s.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(_sv));\n    }\n  }\n\n  return s.join('&');\n}\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return url.protocol == 'https:' || url.hostname == 'localhost' || url.hostname == '127.0.0.1' || (0, _string.endsWith)(url.hostname, '.localhost');\n}\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\n\n\nfunction assertHttpsUrl(urlString, elementContext, sourceName) {\n  if (sourceName === void 0) {\n    sourceName = 'source';\n  }\n\n  (0, _log.userAssert)(urlString != null, '%s %s must be available', elementContext, sourceName); // (erwinm, #4560): type cast necessary until #4560 is fixed.\n\n  var theUrlString =\n  /** @type {string} */\n  urlString;\n  (0, _log.userAssert)(isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString), '%s %s must start with ' + '\"https://\" or \"//\" or be relative and served from ' + 'either https or from localhost. Invalid value: %s', elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\n\n\nfunction assertAbsoluteHttpOrHttpsUrl(urlString) {\n  (0, _log.userAssert)(/^https?\\:/i.test(urlString), 'URL must start with \"http://\" or \"https://\". Invalid value: %s', urlString);\n  return parseUrlDeprecated(urlString).href;\n}\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\n\n\nfunction parseQueryString(queryString) {\n  return (0, _urlParseQueryString.parseQueryString_)(queryString);\n}\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return url;\n  }\n\n  return url.substring(0, index);\n}\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getFragment(url) {\n  var index = url.indexOf('#');\n\n  if (index == -1) {\n    return '';\n  }\n\n  return url.substring(index);\n}\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.cdnProxyRegex.test(url.origin);\n}\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\n\n\nfunction getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n\n  var path = url.pathname.split('/', 2);\n  return path[1];\n}\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\n\n\nfunction isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return _config.urls.localhostRegex.test(url.origin);\n}\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\n\n\nfunction isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromUrl(url) {\n  var parsed = parseUrlDeprecated(url);\n  var search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\n\n\nfunction removeSearch(url) {\n  var index = url.indexOf('?');\n\n  if (index == -1) {\n    return url;\n  }\n\n  var fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\n\n\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var search = urlSearch.replace(AMP_JS_PARAMS_REGEX, '').replace(AMP_GSA_PARAMS_REGEX, '').replace(AMP_R_PARAMS_REGEX, '').replace(AMP_KIT_PARAMS_REGEX, '').replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '').replace(/^[?&]/, ''); // Removes first ? or &.\n\n  return search ? '?' + search : '';\n}\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\n\n\nfunction removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n\n  var paramRegex = new RegExp(\"[?&]\" + paramName + \"=[^&]*\", 'g');\n  var search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\n\n\nfunction getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  } // Not a proxy URL - return the URL itself.\n\n\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  } // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n\n\n  var path = url.pathname.split('/');\n  var prefix = path[1];\n  (0, _log.userAssert)(SERVING_TYPE_PREFIX[prefix], 'Unknown path prefix in url %s', url.href);\n  var domainOrHttpsSignal = path[2];\n  var origin = domainOrHttpsSignal == 's' ? 'https://' + decodeURIComponent(path[3]) : 'http://' + decodeURIComponent(domainOrHttpsSignal); // Sanity test that what we found looks like a domain.\n\n  (0, _log.userAssert)(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParamsFromSearch(url.search) + (url.hash || '');\n}\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\n\n\nfunction getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\n\n\nfunction resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\n\n\nfunction resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  var relativeUrl = parseUrlDeprecated(relativeUrlString); // Absolute URL.\n\n  if ((0, _string.startsWith)(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  } // Protocol-relative URL.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  } // Absolute path.\n\n\n  if ((0, _string.startsWith)(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  } // Relative path.\n\n\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/') + relativeUrlString;\n}\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\n\n\nfunction getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  var sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\n\n\nfunction checkCorsUrl(url) {\n  var parsedUrl = parseUrlDeprecated(url);\n  var query = parseQueryString(parsedUrl.search);\n  (0, _log.userAssert)(!(SOURCE_ORIGIN_PARAM in query), 'Source origin is not allowed in %s', url);\n}\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\n\n\nfunction tryDecodeUriComponent(component, opt_fallback) {\n  return (0, _urlTryDecodeUriComponent.tryDecodeUriComponent_)(component, opt_fallback);\n}\n\n},{\"./config\":12,\"./log\":26,\"./mode\":28,\"./string\":33,\"./types\":36,\"./url-parse-query-string\":37,\"./url-try-decode-uri-component\":38,\"./utils/lru-cache\":42,\"./utils/object\":43}],40:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.areEqualOrdered = areEqualOrdered;\nexports.remove = remove;\nexports.findIndex = findIndex;\nexports.fromIterator = fromIterator;\nexports.pushIfNotExist = pushIfNotExist;\nexports.lastItem = lastItem;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nfunction areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\n\n\nfunction remove(array, shouldRemove) {\n  var removed = [];\n  var index = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n\n      index++;\n    }\n  }\n\n  if (index < array.length) {\n    array.length = index;\n  }\n\n  return removed;\n}\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\n\n\nfunction findIndex(array, predicate) {\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\n\n\nfunction fromIterator(iterator) {\n  var array = [];\n\n  for (var e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n\n  return array;\n}\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\n\n\nfunction pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\n\n\nfunction lastItem(array) {\n  return array[array.length - 1];\n}\n\n},{}],41:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.once = once;\n\n/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(rsimha, #15334): Enable this rule.\n\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nfunction once(fn) {\n  var evaluated = false;\n  var retValue = null;\n  var callback = fn;\n  return function () {\n    if (!evaluated) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n\n    return retValue;\n  };\n}\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.LruCache = void 0;\n\nvar _log = require(\"../log\");\n\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar TAG = 'lru-cache';\n/**\n * @template T\n */\n\nvar LruCache =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {number} capacity\n   */\n  function LruCache(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n    /** @private {number} */\n\n    this.size_ = 0;\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n\n    this.access_ = 0;\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n\n    this.cache_ = Object.create(null);\n  }\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n\n\n  var _proto = LruCache.prototype;\n\n  _proto.has = function has(key) {\n    return !!this.cache_[key];\n  }\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  ;\n\n  _proto.get = function get(key) {\n    var cacheable = this.cache_[key];\n\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n\n    return undefined;\n  }\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  ;\n\n  _proto.put = function put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n\n    this.cache_[key] = {\n      payload: payload,\n      access: this.access_\n    };\n    this.evict_();\n  }\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  ;\n\n  _proto.evict_ = function evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    (0, _log.dev)().warn(TAG, 'Trimming LRU cache');\n    var cache = this.cache_;\n    var oldest = this.access_ + 1;\n    var oldestKey;\n\n    for (var key in cache) {\n      var access = cache[key].access;\n\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  };\n\n  return LruCache;\n}();\n\nexports.LruCache = LruCache;\n\n},{\"../log\":26}],43:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.map = map;\nexports.dict = dict;\nexports.hasOwn = hasOwn;\nexports.ownProperty = ownProperty;\nexports.deepMerge = deepMerge;\nexports.omit = omit;\n\nvar _types = require(\"../types\");\n\n/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nvar hasOwn_ = Object.prototype.hasOwnProperty;\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\n\nfunction map(opt_initial) {\n  var obj = Object.create(null);\n\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n\n  return obj;\n}\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\n\n\nfunction dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return (\n    /** @type {!JsonObject} */\n    opt_initial || {}\n  );\n}\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\n\n\nfunction hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\n\n\nfunction ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\n\n\nfunction deepMerge(target, source, depth) {\n  if (depth === void 0) {\n    depth = 10;\n  }\n\n  // Keep track of seen objects to detect recursive references.\n  var seen = [];\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n\n  var queue = [];\n  queue.push({\n    t: target,\n    s: source,\n    d: 0\n  }); // BFS to ensure objects don't have recursive references at shallower depths.\n\n  var _loop = function _loop() {\n    var _queue$shift = queue.shift(),\n        t = _queue$shift.t,\n        s = _queue$shift.s,\n        d = _queue$shift.d;\n\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n\n    seen.push(s);\n\n    if (t === s) {\n      return \"continue\";\n    }\n\n    if (d > depth) {\n      Object.assign(t, s);\n      return \"continue\";\n    }\n\n    Object.keys(s).forEach(function (key) {\n      var newValue = s[key]; // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n\n      if (hasOwn(t, key)) {\n        var oldValue = t[key];\n\n        if ((0, _types.isObject)(newValue) && (0, _types.isObject)(oldValue)) {\n          queue.push({\n            t: oldValue,\n            s: newValue,\n            d: d + 1\n          });\n          return;\n        }\n      }\n\n      t[key] = newValue;\n    });\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return target;\n}\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\n\n\nfunction omit(o, props) {\n  return Object.keys(o).reduce(function (acc, key) {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n\n    return acc;\n  }, {});\n}\n\n},{\"../types\":36}],44:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.tryResolve = tryResolve;\nexports.some = some;\nexports.LastAddedResolver = exports.Deferred = void 0;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nvar Deferred =\n/**\n * Creates an instance of Deferred.\n */\nfunction Deferred() {\n  var resolve, reject;\n  /**\n   * @const {!Promise<T>}\n   */\n\n  this.promise = new\n  /*OK*/\n  Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  /**\n   * @const {function(T=)}\n   */\n\n  this.resolve = resolve;\n  /**\n   * @const {function(*=)}\n   */\n\n  this.reject = reject;\n};\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\n\n\nexports.Deferred = Deferred;\n\nfunction tryResolve(fn) {\n  return new Promise(function (resolve) {\n    resolve(fn());\n  });\n}\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\n\n\nfunction some(promises, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  return new Promise(function (resolve, reject) {\n    count = Math.max(count, 0);\n    var extra = promises.length - count;\n\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n\n    if (promises.length == 0) {\n      resolve([]);\n    }\n\n    var values = [];\n    var reasons = [];\n\n    var onFulfilled = function onFulfilled(value) {\n      if (values.length < count) {\n        values.push(value);\n      }\n\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n\n    var onRejected = function onRejected(reason) {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n\n    for (var i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\n\n\nvar LastAddedResolver =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  function LastAddedResolver(opt_promises) {\n    var resolve_, reject_;\n    /** @private @const {!Promise} */\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n    /** @private */\n\n    this.resolve_ = resolve_;\n    /** @private */\n\n    this.reject_ = reject_;\n    /** @private */\n\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (var i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n\n\n  var _proto = LastAddedResolver.prototype;\n\n  _proto.add = function add(promise) {\n    var _this = this;\n\n    var countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(function (result) {\n      if (_this.count_ === countAtAdd) {\n        _this.resolve_(result);\n      }\n    }, function (error) {\n      // Don't follow behavior of Promise.all and Promise.race error so that\n      // this will only reject when most recently added promise fails.\n      if (_this.count_ === countAtAdd) {\n        _this.reject_(error);\n      }\n    });\n    return this.promise_;\n  }\n  /** @override */\n  ;\n\n  _proto.then = function then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  };\n\n  return LastAddedResolver;\n}();\n\nexports.LastAddedResolver = LastAddedResolver;\n\n},{}],45:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.throttle = throttle;\nexports.debounce = debounce;\n\n/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nfunction throttle(win, callback, minInterval) {\n  var locker = 0;\n  var nextCallArgs = null;\n  /**\n   * @param {!Object} args\n   */\n\n  function fire(args) {\n    nextCallArgs = null; // Lock the fire for minInterval milliseconds\n\n    locker = win.setTimeout(waiter, minInterval);\n    callback.apply(null, args);\n  }\n  /**\n   * Waiter function\n   */\n\n\n  function waiter() {\n    locker = 0; // If during the period there're invocations queued up, fire once.\n\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\n\n\nfunction debounce(win, callback, minInterval) {\n  var locker = 0;\n  var timestamp = 0;\n  var nextCallArgs = null;\n  /**\n   * @param {?Array} args\n   */\n\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n  /**\n   * Wait function for debounce\n   */\n\n\n  function waiter() {\n    locker = 0;\n    var remaining = minInterval - (win.Date.now() - timestamp);\n\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function () {\n    timestamp = win.Date.now();\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    nextCallArgs = args;\n\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n\n},{}],46:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\nexports.cssEscape = cssEscape;\n\n/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  } // Nil is the null terminator (group 1) capture\n\n\n  if (nil) {\n    return \"\\uFFFD\";\n  } // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n\n\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' ';\n  } // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n\n\n  return '\\\\' + match;\n}\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\n\n\nfunction cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n\n},{}]},{},[3])\n\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  LayoutRectDef,\n  layoutRectFromDomRect,\n  layoutRectLtwh,\n} from '../../src/layout-rect';\nimport {\n  centerFrameUnderVsyncMutate,\n  collapseFrameUnderVsyncMutate,\n  expandFrameUnderVsyncMutate,\n} from '../../src/full-overlay-frame-helper';\nimport {resetStyles, setImportantStyles} from '../../src/style';\nimport {restrictedVsync, timer} from './util';\n\nconst CENTER_TRANSITION_TIME_MS = 150;\nconst CENTER_TRANSITION_END_WAIT_TIME_MS = 50;\n\n/**\n * Places the child frame in full overlay mode.\n * @param {!Window} win Host window.\n * @param {!HTMLIFrameElement} iframe\n * @param {function(!LayoutRectDef, !LayoutRectDef)} onFinish\n * @private\n */\nconst expandFrameImpl = function(win, iframe, onFinish) {\n  restrictedVsync(\n    win,\n    {\n      measure(state) {\n        state.viewportSize = {\n          width: win./*OK*/ innerWidth,\n          height: win./*OK*/ innerHeight,\n        };\n        state.rect = layoutRectFromDomRect(\n          iframe./*OK*/ getBoundingClientRect()\n        );\n      },\n      mutate(state) {\n        const {width, height} = state.viewportSize;\n        const expandedRect = layoutRectLtwh(0, 0, width, height);\n\n        centerFrameUnderVsyncMutate(\n          iframe,\n          state.rect,\n          state.viewportSize,\n          CENTER_TRANSITION_TIME_MS\n        );\n\n        // To prevent double click during transition;\n        setImportantStyles(iframe, {'pointer-events': 'none'});\n\n        timer(() => {\n          restrictedVsync(win, {\n            mutate() {\n              resetStyles(iframe, ['pointer-events']);\n              expandFrameUnderVsyncMutate(iframe);\n              onFinish(state.rect, expandedRect);\n            },\n          });\n        }, CENTER_TRANSITION_TIME_MS + CENTER_TRANSITION_END_WAIT_TIME_MS);\n      },\n    },\n    {}\n  );\n};\n\n/**\n * Resets the frame from full overlay mode.\n * @param {!Window} win Host window.\n * @param {!HTMLIFrameElement} iframe\n * @param {function()} onFinish\n * @param {function(!LayoutRectDef)} onMeasure\n * @private\n */\nconst collapseFrameImpl = function(win, iframe, onFinish, onMeasure) {\n  restrictedVsync(win, {\n    mutate() {\n      collapseFrameUnderVsyncMutate(iframe);\n\n      onFinish();\n\n      // remeasure so client knows about updated dimensions\n      restrictedVsync(win, {\n        measure() {\n          onMeasure(\n            layoutRectFromDomRect(iframe./*OK*/ getBoundingClientRect())\n          );\n        },\n      });\n    },\n  });\n};\n\n/**\n * Places the child frame in full overlay mode.\n * @param {!Window} win Host window.\n * @param {!HTMLIFrameElement} iframe\n * @param {function(!LayoutRectDef, !LayoutRectDef)} onFinish\n */\nexport let expandFrame = expandFrameImpl;\n\n/**\n * @param {!Function} implFn\n * @visibleForTesting\n */\nexport function stubExpandFrameForTesting(implFn) {\n  expandFrame = implFn;\n}\n\n/**\n * @visibleForTesting\n */\nexport function resetExpandFrameForTesting() {\n  expandFrame = expandFrameImpl;\n}\n\n/**\n * Places the child frame in full overlay mode.\n * @param {!Window} win Host window.\n * @param {!HTMLIFrameElement} iframe\n * @param {function()} onFinish\n * @param {function(!LayoutRectDef)} onMeasure\n */\nexport let collapseFrame = collapseFrameImpl;\n\n/**\n * @param {!Function} implFn\n * @visibleForTesting\n */\nexport function stubCollapseFrameForTesting(implFn) {\n  collapseFrame = implFn;\n}\n\n/**\n * @visibleForTesting\n */\nexport function resetCollapseFrameForTesting() {\n  collapseFrame = collapseFrameImpl;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {collapseFrame, expandFrame} from './frame-overlay-helper';\n\n/** @const */\nconst AMP_INABOX_FRAME_OVERLAY_MANAGER = 'ampInaboxFrameOverlayManager';\n\n/**\n * Inabox host manager for full overlay frames.\n */\nexport class FrameOverlayManager {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private @const {!Window} */\n    this.win_ = win;\n\n    /** @private {boolean} */\n    this.isExpanded_ = false;\n\n    /** @private {boolean} */\n    this.viewportChangedSinceExpand_ = false;\n\n    // TODO(alanorozco): type\n    /** @private {?} */\n    this.collapsedRect_ = null;\n\n    this.listenToViewportChanges_();\n  }\n\n  /** @private */\n  listenToViewportChanges_() {\n    this.win_.addEventListener('resize', () => this.onWindowResize());\n  }\n\n  /** @visibleForTesting */\n  onWindowResize() {\n    if (this.isExpanded_) {\n      this.viewportChangedSinceExpand_ = true;\n    }\n  }\n\n  /**\n   * Expands an iframe to full overlay.\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Function} callback Gets executed when expanded with the new box\n   *  rect.\n   */\n  expandFrame(iframe, callback) {\n    expandFrame(this.win_, iframe, (collapsedRect, expandedRect) => {\n      this.isExpanded_ = true;\n      this.viewportChangedSinceExpand_ = false;\n      this.collapsedRect_ = collapsedRect;\n      callback(expandedRect);\n    });\n  }\n\n  /**\n   * Collapses an iframe back from full overlay.\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Function} callback Gets executed when collapsed with the new box\n   *  rect.\n   */\n  collapseFrame(iframe, callback) {\n    // There is a delay of one animation frame between collapsing and measuring\n    // the box rect. collapseFrame() takes a callback for each event.\n    //\n    // We know what the collapsed box was. If the viewport has not changed while\n    // expanded, we can immediately notify the consumer of the collapsed\n    // box rect since it should be the same. Otherwise, we wait for remeasure.\n    collapseFrame(\n      this.win_,\n      iframe,\n      () => {\n        this.isExpanded_ = false;\n\n        if (!this.viewportChangedSinceExpand_) {\n          callback(this.collapsedRect_);\n        }\n      },\n      collapsedRect => {\n        this.collapsedRect_ = collapsedRect;\n\n        if (this.viewportChangedSinceExpand_) {\n          callback(this.collapsedRect_);\n        }\n      }\n    );\n  }\n}\n\n/**\n * Use an existing frame overlay manager within the window, if any.\n * @param {!Window} win\n * @return {!FrameOverlayManager}\n */\nexport function getFrameOverlayManager(win) {\n  win[AMP_INABOX_FRAME_OVERLAY_MANAGER] =\n    win[AMP_INABOX_FRAME_OVERLAY_MANAGER] || new FrameOverlayManager(win);\n  return win[AMP_INABOX_FRAME_OVERLAY_MANAGER];\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Inabox host script is installed on a non-AMP host page to provide APIs for\n * its embed AMP content (such as an ad created in AMP).\n */\n\nimport {InaboxMessagingHost} from './inabox-messaging-host';\nimport {dev, initLogConstructor, setReportError, user} from '../../src/log';\nimport {getData} from '../../src/event-helper';\nimport {reportError} from '../../src/error';\n\n/** @const {string} */\nconst TAG = 'inabox-host';\n/** @const {string} */\nconst AMP_INABOX_INITIALIZED = 'ampInaboxInitialized';\n/** @const {string} */\nconst PENDING_MESSAGES = 'ampInaboxPendingMessages';\n/** @const {string} */\nconst INABOX_IFRAMES = 'ampInaboxIframes';\n/** @const {string} */\nconst INABOX_UNREGISTER_IFRAME = 'inaboxUnregisterIframe';\n\n/**\n * Class for initializing host script and consuming queued messages.\n * @visibleForTesting\n */\nexport class InaboxHost {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    // Prevent double initialization\n    if (win[AMP_INABOX_INITIALIZED]) {\n      dev().info(TAG, 'Skip a 2nd attempt of initializing AMP inabox host.');\n      return;\n    }\n\n    // Assume we cannot recover from state initialization errors.\n    win[AMP_INABOX_INITIALIZED] = true;\n    initLogConstructor();\n    setReportError(reportError);\n\n    if (win[INABOX_IFRAMES] && !Array.isArray(win[INABOX_IFRAMES])) {\n      dev().info(TAG, 'Invalid %s. %s', INABOX_IFRAMES, win[INABOX_IFRAMES]);\n      win[INABOX_IFRAMES] = [];\n    }\n    const host = new InaboxMessagingHost(win, win[INABOX_IFRAMES]);\n    win.AMP = win.AMP || {};\n    if (win.AMP[INABOX_UNREGISTER_IFRAME]) {\n      // It's already defined; log a debug message and assume the existing\n      // implmentation is good.\n      dev().info(TAG, `win.AMP[${INABOX_UNREGISTER_IFRAME}] already defined}`);\n    } else {\n      win.AMP[INABOX_UNREGISTER_IFRAME] = host.unregisterIframe.bind(host);\n    }\n    const queuedMsgs = win[PENDING_MESSAGES];\n    const processMessageFn = /** @type {function(Event)} */ (evt => {\n      try {\n        host.processMessage(evt);\n      } catch (err) {\n        dev().error(TAG, 'Error processing inabox message', evt, err);\n      }\n    });\n    if (queuedMsgs) {\n      if (Array.isArray(queuedMsgs)) {\n        queuedMsgs.forEach(message => {\n          // Pending messages are added by external scripts.\n          // Validate their data types to avoid client errors.\n          if (!validateMessage(message)) {\n            return;\n          }\n          processMessageFn(message);\n        });\n      } else {\n        dev().info(TAG, 'Invalid %s %s', PENDING_MESSAGES, queuedMsgs);\n      }\n    }\n    // Empty and ensure that future messages are no longer stored in the array.\n    win[PENDING_MESSAGES] = [];\n    win[PENDING_MESSAGES]['push'] = () => {};\n    win.addEventListener('message', processMessageFn.bind(host));\n  }\n}\n\n/**\n * Validates a message event and print errors if it does not contain expected\n * fields.\n *\n * @param {!Event} message\n * @return {boolean} if the message is valid or not\n */\nfunction validateMessage(message) {\n  const valid = !!(message.source && message.source.postMessage);\n  if (!valid) {\n    user().warn(\n      TAG,\n      'Ignoring an inabox message. Likely the requester iframe has been removed. message.data=' +\n        JSON.stringify(getData(message))\n    );\n  }\n  return valid;\n}\n\nnew InaboxHost(self);\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessageType,\n  deserializeMessage,\n  serializeMessage,\n} from '../../src/3p-frame-messaging';\nimport {canInspectWindow} from '../../src/iframe-helper';\nimport {dev, devAssert} from '../../src/log';\nimport {dict} from '../../src/utils/object';\nimport {getData} from '../../src/event-helper';\nimport {getFrameOverlayManager} from './frame-overlay-manager';\nimport {getPositionObserver} from './position-observer';\n\n/** @const */\nconst TAG = 'InaboxMessagingHost';\n\n/** @const */\nconst READ_ONLY_MESSAGES = [MessageType.SEND_POSITIONS];\n\n/** Simple helper for named callbacks. */\nclass NamedObservable {\n  /**\n   * Creates an instance of NamedObservable.\n   */\n  constructor() {\n    /** @private {!Object<string, !Function>} */\n    this.map_ = {};\n  }\n\n  /**\n   * @param {string} key\n   * @param {!Function} callback\n   */\n  listen(key, callback) {\n    if (key in this.map_) {\n      dev().fine(TAG, `Overriding message callback [${key}]`);\n    }\n    this.map_[key] = callback;\n  }\n\n  /**\n   * @param {string} key\n   * @param {*} thisArg\n   * @param {!Array} args\n   * @return {boolean} True when a callback was found and successfully executed.\n   */\n  fire(key, thisArg, args) {\n    if (key in this.map_) {\n      return this.map_[key].apply(thisArg, args);\n    }\n    return false;\n  }\n}\n\n/** @typedef {{\n      iframe: !HTMLIFrameElement,\n      measurableFrame: !HTMLIFrameElement,\n      observeUnregisterFn: (!UnlistenDef|undefined),\n  }} */\nlet AdFrameDef;\n\nexport class InaboxMessagingHost {\n  /**\n   * @param {!Window} win\n   * @param {!Array<!HTMLIFrameElement>} iframes\n   */\n  constructor(win, iframes) {\n    /** @private {!Array<!HTMLIFrameElement>} */\n    this.iframes_ = iframes;\n\n    /** @private {!Object<string,!AdFrameDef>} */\n    this.iframeMap_ = Object.create(null);\n\n    /** @private {!./position-observer.PositionObserver} */\n    this.positionObserver_ = getPositionObserver(win);\n\n    /** @private {!NamedObservable} */\n    this.msgObservable_ = new NamedObservable();\n\n    /** @private {!./frame-overlay-manager.FrameOverlayManager} */\n    this.frameOverlayManager_ = getFrameOverlayManager(win);\n\n    this.msgObservable_.listen(\n      MessageType.SEND_POSITIONS,\n      this.handleSendPositions_\n    );\n\n    this.msgObservable_.listen(\n      MessageType.FULL_OVERLAY_FRAME,\n      this.handleEnterFullOverlay_\n    );\n\n    this.msgObservable_.listen(\n      MessageType.CANCEL_FULL_OVERLAY_FRAME,\n      this.handleCancelFullOverlay_\n    );\n  }\n\n  /**\n   * Process a single post message.\n   *\n   * A valid message has to be formatted as a string starting with \"amp-\". The\n   * rest part should be a stringified JSON object of\n   * {type: string, sentinel: string}. The allowed types are listed in the\n   * REQUEST_TYPE enum.\n   *\n   * @param {!MessageEvent} message\n   * @return {boolean} true if message get successfully processed\n   */\n  processMessage(message) {\n    const request = deserializeMessage(getData(message));\n    if (!request || !request['sentinel']) {\n      dev().fine(TAG, 'Ignored non-AMP message:', message);\n      return false;\n    }\n\n    const adFrame = this.getFrameElement_(message.source, request['sentinel']);\n    if (!adFrame) {\n      dev().info(TAG, 'Ignored message from untrusted iframe:', message);\n      return false;\n    }\n\n    const allowedTypes = adFrame.iframe.dataset['ampAllowed'];\n    const allowedTypesList = allowedTypes\n      ? allowedTypes.split(/\\s*,\\s*/)\n      : READ_ONLY_MESSAGES;\n    if (allowedTypesList.indexOf(request['type']) === -1) {\n      dev().info(TAG, 'Ignored non-whitelisted message type:', message);\n      return false;\n    }\n\n    if (\n      !this.msgObservable_.fire(request['type'], this, [\n        adFrame.measurableFrame,\n        request,\n        message.source,\n        message.origin,\n      ])\n    ) {\n      dev().warn(TAG, 'Unprocessed AMP message:', message);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Object} request\n   * @param {!Window} source\n   * @param {string} origin\n   * @return {boolean}\n   */\n  handleSendPositions_(iframe, request, source, origin) {\n    const viewportRect = this.positionObserver_.getViewportRect();\n    const targetRect = this.positionObserver_.getTargetRect(iframe);\n    this.sendPosition_(\n      request,\n      source,\n      origin,\n      dict({\n        'viewportRect': viewportRect,\n        'targetRect': targetRect,\n      })\n    );\n\n    devAssert(this.iframeMap_[request.sentinel]);\n    this.iframeMap_[request.sentinel].observeUnregisterFn =\n      this.iframeMap_[request.sentinel].observeUnregisterFn ||\n      this.positionObserver_.observe(iframe, data =>\n        this.sendPosition_(\n          request,\n          source,\n          origin,\n          /** @type {?JsonObject} */ (data)\n        )\n      );\n    return true;\n  }\n\n  /**\n   *\n   * @param {!Object} request\n   * @param {!Window} source\n   * @param {string} origin\n   * @param {?JsonObject} data\n   */\n  sendPosition_(request, source, origin, data) {\n    dev().fine(TAG, 'Sent position data to [%s] %s', request.sentinel, data);\n    source./*OK*/ postMessage(\n      serializeMessage(MessageType.POSITION, request.sentinel, data),\n      origin\n    );\n  }\n\n  /**\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Object} request\n   * @param {!Window} source\n   * @param {string} origin\n   * @return {boolean}\n   * TODO(alanorozco):\n   * 1. Reject request if frame is out of focus\n   * 2. Disable zoom and scroll on parent doc\n   */\n  handleEnterFullOverlay_(iframe, request, source, origin) {\n    this.frameOverlayManager_.expandFrame(iframe, boxRect => {\n      source./*OK*/ postMessage(\n        serializeMessage(\n          MessageType.FULL_OVERLAY_FRAME_RESPONSE,\n          request.sentinel,\n          dict({\n            'success': true,\n            'boxRect': boxRect,\n          })\n        ),\n        origin\n      );\n    });\n\n    return true;\n  }\n\n  /**\n   * @param {!HTMLIFrameElement} iframe\n   * @param {!Object} request\n   * @param {!Window} source\n   * @param {string} origin\n   * @return {boolean}\n   */\n  handleCancelFullOverlay_(iframe, request, source, origin) {\n    this.frameOverlayManager_.collapseFrame(iframe, boxRect => {\n      source./*OK*/ postMessage(\n        serializeMessage(\n          MessageType.CANCEL_FULL_OVERLAY_FRAME_RESPONSE,\n          request.sentinel,\n          dict({\n            'success': true,\n            'boxRect': boxRect,\n          })\n        ),\n        origin\n      );\n    });\n\n    return true;\n  }\n\n  /** This method is doing two things.\n   *    1. It checks that the source of the message is valid.\n   *       Validity means that the message comes from a frame that\n   *       is either directly registered in this.iframes_, or is a\n   *       child of one of those frames.\n   *    2. It returns whichever iframe is the deepest frame in the source's\n   *       hierarchy that the outer host window can still measure, which is\n   *       the top most cross domained frame, or the creative frame.\n   * EXAMPLE:\n   *   If we have a frame hierarchy:\n   *     Host -> Friendly Frame -> X Domain Frame 1 -> Message Source Frame\n   *     and \"Friendly Frame\" is registered in this.iframes_, then\n   *     \"Message Source Frame\" is valid, because one of its parent frames\n   *     is registered in this.iframes_, and the result of the call to\n   *     getFrameElement_ would be the iframe \"X Domain Frame 1\" as it is\n   *     the deepest frame that the host doc can accurately measure.\n   * Note: The sentinel should be unique to the source window, and the result\n   * is cached using the sentinel as the key.\n   *\n   * @param {?Window} source\n   * @param {string} sentinel\n   * @return {?AdFrameDef}\n   * @private\n   */\n  getFrameElement_(source, sentinel) {\n    if (this.iframeMap_[sentinel]) {\n      return this.iframeMap_[sentinel];\n    }\n    const measurableFrame = this.getMeasureableFrame(source);\n    if (!measurableFrame) {\n      return null;\n    }\n    const measurableWin = measurableFrame.contentWindow;\n    for (let i = 0; i < this.iframes_.length; i++) {\n      const iframe = this.iframes_[i];\n      for (\n        let j = 0, tempWin = measurableWin;\n        j < 10;\n        j++, tempWin = tempWin.parent\n      ) {\n        if (iframe.contentWindow == tempWin) {\n          this.iframeMap_[sentinel] = {iframe, measurableFrame};\n          return this.iframeMap_[sentinel];\n        }\n        if (tempWin == window.top) {\n          break;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns whichever window in win's parent hierarchy is the deepest window\n   * that is measurable from the perspective of the current window.\n   * For when win is nested within a x-domain frame, walks up the window's\n   * parent hierarchy until the top-most x-domain frame in the hierarchy\n   * is found. Then, it returns the frame element for that window.\n   * For when win is friendly framed, returns the frame element for win.\n   * @param {?Window} win\n   * @return {?HTMLIFrameElement}\n   * @visibleForTesting\n   */\n  getMeasureableFrame(win) {\n    if (!win) {\n      return null;\n    }\n    // First, we try to find the top-most x-domain window in win's parent\n    // hierarchy. If win is not nested within x-domain framing, then\n    // this loop breaks immediately.\n    let topXDomainWin;\n    for (\n      let j = 0, tempWin = win;\n      j < 10 && tempWin != tempWin.top && !canInspectWindow(tempWin);\n      j++, topXDomainWin = tempWin, tempWin = tempWin.parent\n    ) {}\n    // If topXDomainWin exists, we know that the frame we want to measure\n    // is a x-domain frame. Unfortunately, you can not access properties\n    // on a x-domain window, so we can not do window.frameElement, and\n    // instead must instead get topXDomainWin's parent, and then iterate\n    // over that parent's child iframes until we find the frame element\n    // that corresponds to topXDomainWin.\n    if (!!topXDomainWin) {\n      const iframes = topXDomainWin.parent.document.querySelectorAll('iframe');\n      for (\n        let k = 0, frame = iframes[k];\n        k < iframes.length;\n        k++, frame = iframes[k]\n      ) {\n        if (frame.contentWindow == topXDomainWin) {\n          return /** @type {!HTMLIFrameElement} */ (frame);\n        }\n      }\n    }\n    // If topXDomainWin does not exist, then win is friendly, and we can\n    // just return its frameElement directly.\n    return /** @type {!HTMLIFrameElement} */ (win.frameElement);\n  }\n\n  /**\n   * Removes an iframe from the set of iframes we watch, along with executing\n   * any necessary cleanup.  Available at win.AMP.inaboxUnregisterIframe().\n   *\n   * @param {!HTMLIFrameElement} iframe\n   */\n  unregisterIframe(iframe) {\n    // Remove iframe from the list of iframes we're watching.\n    const iframeIndex = this.iframes_.indexOf(iframe);\n    if (iframeIndex != -1) {\n      this.iframes_.splice(iframeIndex, 1);\n    }\n    // Also remove it and all of its descendents from our sentinel cache.\n    // TODO(jeffkaufman): save more info so we don't have to walk the dom here.\n    for (const sentinel in this.iframeMap_) {\n      if (this.iframeMap_[sentinel].iframe == iframe) {\n        if (this.iframeMap_[sentinel].observeUnregisterFn) {\n          this.iframeMap_[sentinel].observeUnregisterFn();\n        }\n        delete this.iframeMap_[sentinel];\n      }\n    }\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  LayoutRectDef,\n  layoutRectFromDomRect,\n  layoutRectLtwh,\n  moveLayoutRect,\n} from '../../src/layout-rect';\nimport {Observable} from '../../src/observable';\nimport {throttle} from '../../src/utils/rate-limit';\n\n/**\n * @typedef {{\n *   viewportRect: !LayoutRectDef,\n *   targetRect: !LayoutRectDef,\n * }}\n */\nlet PositionEntryDef;\n\n/** @const */\nconst MIN_EVENT_INTERVAL_IN_MS = 100;\n\n/** @const */\nconst AMP_INABOX_POSITION_OBSERVER = 'ampInaboxPositionObserver';\n\nexport class PositionObserver {\n  /**\n   * @param {!Window} win\n   */\n  constructor(win) {\n    /** @private {!Window} */\n    this.win_ = win;\n    /** @private {?Observable} */\n    this.positionObservable_ = null;\n    /** @protected {!Element} */\n    this.scrollingElement_ = getScrollingElement(this.win_);\n    /** @private {?LayoutRectDef} */\n    this.viewportRect_ = null;\n  }\n\n  /**\n   * Start to observe the target element's position change and trigger callback.\n   * TODO: maybe take DOM mutation into consideration\n   * @param {!Element} element\n   * @param {function(!PositionEntryDef)} callback\n   * @return {!UnlistenDef}\n   */\n  observe(element, callback) {\n    if (!this.positionObservable_) {\n      this.positionObservable_ = new Observable();\n      const listener = throttle(\n        this.win_,\n        () => {\n          this.update_();\n          this.positionObservable_.fire();\n        },\n        MIN_EVENT_INTERVAL_IN_MS\n      );\n      this.update_();\n      this.win_.addEventListener('scroll', listener, true);\n      this.win_.addEventListener('resize', listener, true);\n    }\n    // Send the 1st ping immediately\n    callback(this.getPositionEntry_(element));\n    return this.positionObservable_.add(() => {\n      callback(this.getPositionEntry_(element));\n    });\n  }\n\n  /**\n   * Updates viewport rect.\n   */\n  update_() {\n    this.viewportRect_ = this.getViewportRect();\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {!PositionEntryDef}\n   * @private\n   */\n  getPositionEntry_(element) {\n    return {\n      'viewportRect': /** @type {!LayoutRectDef} */ (this.viewportRect_),\n      // relative position to viewport\n      'targetRect': this.getTargetRect(element),\n    };\n  }\n\n  /**\n   * A  method to get viewport rect\n   * @return {LayoutRectDef}\n   */\n  getViewportRect() {\n    const {scrollingElement_: scrollingElement, win_: win} = this;\n\n    const scrollLeft =\n      scrollingElement./*OK*/ scrollLeft || win./*OK*/ pageXOffset;\n    const scrollTop =\n      scrollingElement./*OK*/ scrollTop || win./*OK*/ pageYOffset;\n    return layoutRectLtwh(\n      Math.round(scrollLeft),\n      Math.round(scrollTop),\n      win./*OK*/ innerWidth,\n      win./*OK*/ innerHeight\n    );\n  }\n\n  /**\n   * Get the element's layout rect relative to the viewport. Attempt to walk up\n   * the DOM and add the offset of all nested parent iframes since\n   * getBoundingClientRect() is only relative to the immediate window. Assumes\n   * that all parent frames are friendly and can be inspected (because the\n   * element itself can be inspected as well).\n   * @param {!Element} element\n   * @return {!LayoutRectDef}\n   */\n  getTargetRect(element) {\n    let targetRect = layoutRectFromDomRect(\n      element./*OK*/ getBoundingClientRect()\n    );\n    const parentWin = element.ownerDocument.defaultView;\n    for (\n      let j = 0, tempWin = parentWin;\n      j < 10 && tempWin != this.win_ && tempWin != this.win_.top;\n      j++, tempWin = tempWin.parent\n    ) {\n      const parentFrameRect = layoutRectFromDomRect(\n        tempWin.frameElement./*OK*/ getBoundingClientRect()\n      );\n      targetRect = moveLayoutRect(\n        targetRect,\n        parentFrameRect.left,\n        parentFrameRect.top\n      );\n    }\n    return targetRect;\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n */\nfunction getScrollingElement(win) {\n  const doc = win.document;\n  if (doc./*OK*/ scrollingElement) {\n    return doc./*OK*/ scrollingElement;\n  }\n  if (\n    doc.body &&\n    // Due to https://bugs.webkit.org/show_bug.cgi?id=106133, WebKit\n    // browsers have to use `body` and NOT `documentElement` for\n    // scrolling purposes. This has mostly being resolved via\n    // `scrollingElement` property, but this branch is still necessary\n    // for backward compatibility purposes.\n    isWebKit(win.navigator.userAgent)\n  ) {\n    return doc.body;\n  }\n  return doc.documentElement;\n}\n\n/**\n * Whether the current browser is based on the WebKit engine.\n * @param {string} ua\n * @return {boolean}\n */\nfunction isWebKit(ua) {\n  return /WebKit/i.test(ua) && !/Edge/i.test(ua);\n}\n\n/**\n * Use an existing position observer within the window, if any.\n * @param {!Window} win\n * @return {!PositionObserver}\n */\nexport function getPositionObserver(win) {\n  win[AMP_INABOX_POSITION_OBSERVER] =\n    win[AMP_INABOX_POSITION_OBSERVER] || new PositionObserver(win);\n  return win[AMP_INABOX_POSITION_OBSERVER];\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Executes a \"restricted\" read/write vsync cycle.\n * This function exists mainly since the vsync service is not available for the\n * inabox host script.\n * It also helps with maintainability. Since the passed tasks have to define\n * measure and mutate callbacks, it makes it harder for the calling code to be\n * changed in a way that screws up the read-write order.\n * Please note that this is NOT real vsync. Concurrent reads and writes ARE NOT\n * BATCHED. This means that using this can still cause layout thrashing if it's\n * being called more than once within the same frame. Use with caution.\n * @param {!Window} win\n * @param {{measure: (Function|undefined), mutate: (Function|undefined)}} task\n * @param {!Object=} opt_state\n * @visibleForTesting\n * TODO(alanorozco): Figure out a longer-term solution\n */\nexport function restrictedVsync(win, task, opt_state) {\n  win.requestAnimationFrame(() => {\n    if (task.measure) {\n      task.measure(opt_state);\n    }\n    if (task.mutate) {\n      task.mutate(opt_state);\n    }\n  });\n}\n\n/**\n * Executes a function after a certain time.\n * The timer service is not available for the inabox host script, hence this\n * function.\n * Not using setTimeout directly allows us to execute the callback directly on\n * tests.\n * @param {!Function} callback\n * @param {number} timeMs\n * @visibleForTesting\n */\nexport function timer(callback, timeMs) {\n  setTimeout(callback, timeMs);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {internalListenImplementation} from './event-helper-listen';\nimport {parseJson} from './json';\n\n/** @const */\nconst AMP_MESSAGE_PREFIX = 'amp-';\nexport const CONSTANTS = {\n  responseTypeSuffix: '-result',\n  messageIdFieldName: 'messageId',\n  payloadFieldName: 'payload',\n  contentFieldName: 'content',\n};\n\n/** @enum {string} */\nexport const MessageType = {\n  // For amp-ad\n  SEND_EMBED_STATE: 'send-embed-state',\n  EMBED_STATE: 'embed-state',\n  SEND_EMBED_CONTEXT: 'send-embed-context',\n  EMBED_CONTEXT: 'embed-context',\n  SEND_INTERSECTIONS: 'send-intersections',\n  INTERSECTION: 'intersection',\n  EMBED_SIZE: 'embed-size',\n  EMBED_SIZE_CHANGED: 'embed-size-changed',\n  EMBED_SIZE_DENIED: 'embed-size-denied',\n  NO_CONTENT: 'no-content',\n  GET_HTML: 'get-html',\n  GET_CONSENT_STATE: 'get-consent-state',\n\n  // For the frame to be placed in full overlay mode for lightboxes\n  FULL_OVERLAY_FRAME: 'full-overlay-frame',\n  FULL_OVERLAY_FRAME_RESPONSE: 'full-overlay-frame-response',\n  CANCEL_FULL_OVERLAY_FRAME: 'cancel-full-overlay-frame',\n  CANCEL_FULL_OVERLAY_FRAME_RESPONSE: 'cancel-full-overlay-frame-response',\n\n  // For amp-inabox\n  SEND_POSITIONS: 'send-positions',\n  POSITION: 'position',\n\n  // For amp-analytics' iframe-transport\n  SEND_IFRAME_TRANSPORT_EVENTS: 'send-iframe-transport-events',\n  IFRAME_TRANSPORT_EVENTS: 'iframe-transport-events',\n  IFRAME_TRANSPORT_RESPONSE: 'iframe-transport-response',\n\n  // For user-error-in-iframe\n  USER_ERROR_IN_IFRAME: 'user-error-in-iframe',\n};\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Serialize an AMP post message. Output looks like:\n * 'amp-011481323099490{\"type\":\"position\",\"sentinel\":\"12345\",\"foo\":\"bar\"}'\n * @param {string} type\n * @param {string} sentinel\n * @param {JsonObject=} data\n * @param {?string=} rtvVersion\n * @return {string}\n */\nexport function serializeMessage(\n  type,\n  sentinel,\n  data = dict(),\n  rtvVersion = null\n) {\n  // TODO: consider wrap the data in a \"data\" field. { type, sentinal, data }\n  const message = data;\n  message['type'] = type;\n  message['sentinel'] = sentinel;\n  return AMP_MESSAGE_PREFIX + (rtvVersion || '') + JSON.stringify(message);\n}\n\n/**\n * Deserialize an AMP post message.\n * Returns null if it's not valid AMP message format.\n *\n * @param {*} message\n * @return {?JsonObject|undefined}\n */\nexport function deserializeMessage(message) {\n  if (!isAmpMessage(message)) {\n    return null;\n  }\n  const startPos = message.indexOf('{');\n  devAssert(startPos != -1, 'JSON missing in %s', message);\n  try {\n    return parseJson(message.substr(startPos));\n  } catch (e) {\n    dev().error('MESSAGING', 'Failed to parse message: ' + message, e);\n    return null;\n  }\n}\n\n/**\n *  Returns true if message looks like it is an AMP postMessage\n *  @param {*} message\n *  @return {boolean}\n */\nexport function isAmpMessage(message) {\n  return (\n    typeof message == 'string' &&\n    message.indexOf(AMP_MESSAGE_PREFIX) == 0 &&\n    message.indexOf('{') != -1\n  );\n}\n\n/** @typedef {{creativeId: string, message: string}} */\nexport let IframeTransportEvent;\n// An event, and the transport ID of the amp-analytics tags that\n// generated it. For instance if the creative with transport\n// ID 2 sends \"hi\", then an IframeTransportEvent would look like:\n// { creativeId: \"2\", message: \"hi\" }\n// If the creative with transport ID 2 sent that, and also sent \"hello\",\n// and the creative with transport ID 3 sends \"goodbye\" then an *array* of 3\n// AmpAnalyticsIframeTransportEvent would be sent to the 3p frame like so:\n// [\n//   { creativeId: \"2\", message: \"hi\" }, // An AmpAnalyticsIframeTransportEvent\n//   { creativeId: \"2\", message: \"hello\" }, // Another\n//   { creativeId: \"3\", message: \"goodbye\" } // And another\n// ]\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load:start',\n  LOAD_END: 'amp:load:end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  forceExperimentBranch,\n  getExperimentBranch,\n  isExperimentOn,\n  randomlySelectUnsetExperiments,\n} from './experiments';\n\n// TODO(#22733): Remove this file once \"ampdoc-fie\" is cleaned up.\n\nconst EXPERIMENT_ID = 'ampdoc-fie';\n\n/**\n * @const {{experiment: string, control: string, branch: string}}\n */\nconst EXPERIMENT = {\n  branch: EXPERIMENT_ID,\n  control: '21065001',\n  experiment: '21065002',\n};\n\n/**\n * @const {!Object<string, !./experiments.ExperimentInfo>}\n */\nexport const EXPERIMENT_INFO_MAP = {\n  [EXPERIMENT_ID]: {\n    isTrafficEligible: () => true,\n    branches: [[EXPERIMENT.control], [EXPERIMENT.experiment]],\n  },\n};\n\n/**\n * @param {!Window} win\n * @param {boolean} on\n * @visibleForTesting\n */\nexport function toggleAmpdocFieForTesting(win, on) {\n  forceExperimentBranch(win, EXPERIMENT_ID, on ? EXPERIMENT.experiment : null);\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isInAmpdocFieExperiment(win) {\n  if (!isExperimentOn(win, 'ampdoc-fie')) {\n    return false;\n  }\n  randomlySelectUnsetExperiments(win, EXPERIMENT_INFO_MAP);\n  return getExperimentBranch(win, EXPERIMENT_ID) === EXPERIMENT.experiment;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\n\n/**\n * Helper method to trigger analytics event if amp-analytics is available.\n * TODO: Do not expose this function\n * @param {!Element} target\n * @param {string} eventType\n * @param {!JsonObject=} opt_vars A map of vars and their values.\n */\nexport function triggerAnalyticsEvent(target, eventType, opt_vars) {\n  Services.analyticsForDocOrNull(target).then(analytics => {\n    if (!analytics) {\n      return;\n    }\n    analytics.triggerEventForTarget(target, eventType, opt_vars);\n  });\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Commonly used signals across different elements and documents.\n * @enum {string}\n */\nexport const CommonSignals = {\n  /**\n   * The element has been upgraded from ElementStub to its real implementation.\n   */\n  UPGRADED: 'upgraded',\n\n  /**\n   * The element has been built.\n   */\n  BUILT: 'built',\n\n  /**\n   * The element has started loading.\n   * LOAD_START triggers at the start of the layoutCallback.\n   */\n  LOAD_START: 'load-start',\n\n  /**\n   * Rendering has been confirmed to have been started.\n   * It is a signal to indicate meaningful display (e.g. text could be displayed\n   * CSS is correctly installed/applied).\n   *\n   * Elements can optionally implement RENDER_START signal. (e.g. ad, shadowdoc)\n   * if it want to define its own meaningful display time and toggle visibility.\n   *\n   * Simpler elements's RENDER_START can be equal to the start of the\n   * buildCallback\n   */\n  RENDER_START: 'render-start',\n\n  /**\n   * The element has been loaded.\n   * LOAD_END triggers at the end of the layoutCallback.\n   *\n   */\n  LOAD_END: 'load-end',\n\n  /**\n   * The initial contents of an element/document/embed have been loaded.\n   * INI_LOAD is an optional signal, implemented by ads, story, and elements\n   * that consist of other resources.\n   * It instructs that all critical resources has been loaded, and can be used\n   * for more accurate visibility measurement.\n   * When an element doesn't consist multiple child resources, LOAD_END signal\n   * can be used to indicate resource load completion.\n   * Note: Based on the implementation, INI_LOAD can trigger before or after\n   * LOAD_END.\n   */\n  INI_LOAD: 'ini-load',\n\n  /**\n   * The element has been unlaid out.\n   */\n  UNLOAD: 'unload',\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex =\n  typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex:\n    cdnProxyRegex || /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] || 'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n};\n\nexport const config = {\n  urls,\n};\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes, startsWith} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise(resolve => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise(resolve => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node} after\n */\nexport function insertAfterOrAtStart(root, element, after) {\n  const before = after ? after.nextSibling : root.firstChild;\n  root.insertBefore(element, before);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  // TODO(#22733): remove in preference to dom's `rootNodeFor`.\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, el => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, el => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, el => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || (key => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    startsWith(tag, 'AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreencancelFullScreen ||\n    ownerDocument.webkitExitFullscreencancelFullScreen ||\n    ownerDocument.webkitCancelFullScreencancelFullScreen ||\n    ownerDocument.mozCancelFullScreencancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getService,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n  getTopWindow,\n} from './service';\nimport {toWin} from './types';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(win, id, extension, opt_element).then(\n    service => assertService(service, id, extension)\n  );\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then(service => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getExistingServiceForDocInEmbedScope(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  const win = toWin(element.ownerDocument.defaultView);\n  const topWin = getTopWindow(win);\n  // In embeds, doc services are stored on the embed window.\n  if (win !== topWin) {\n    return getElementServicePromiseOrNull(win, id, extension);\n  } else {\n    // Only fallback to element's ampdoc (top-level) if not embedded.\n    return getElementServiceIfAvailableForDoc(element, id, extension);\n  }\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from './amp-events';\nimport {Services} from './services';\nimport {\n  USER_ERROR_SENTINEL,\n  dev,\n  duplicateErrorIfNecessary,\n  isUserErrorEmbed,\n  isUserErrorMessage,\n} from './log';\nimport {dict} from './utils/object';\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from './experiments';\nimport {exponentialBackoff} from './exponential-backoff';\nimport {getMode} from './mode';\nimport {isLoadErrorMessage} from './event-helper';\nimport {isProxyOrigin} from './url';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {startsWith} from './string';\nimport {triggerAnalyticsEvent} from './analytics';\nimport {urls} from './config';\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function(work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\nlet detectedJsEngine;\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbed(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function() {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (self.console) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!getMode().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      error\n    );\n  } catch (errorReportingError) {\n    setTimeout(function() {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return startsWith(errorOrMessage, CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return startsWith(errorOrMessage.message, CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return startsWith(errorOrMessage, BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return startsWith(errorOrMessage.message, BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', event => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body.\n  if (this && this.document) {\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          this,\n          /** @type {!JsonObject} */ (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n  return maybeReportErrorToViewer(win, data).then(reportedErrorToViewer => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', urls.errorReporting, true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then(viewerTrusted => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'jse': errorReportData['jse'], // detectedJsEngine\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  if (getMode().singlePassType) {\n    data['spt'] = getMode().singlePassType;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n  data['jse'] = detectedJsEngine;\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    const tagName = error.associatedElement\n      ? error.associatedElement.tagName\n      : 'u'; // Unknown\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\nexport function detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n  Fn.prototype.t = function() {\n    throw new Error('message');\n  };\n  const object = new Fn();\n  try {\n    object.t();\n  } catch (e) {\n    const {stack} = e;\n\n    // Safari only mentions the method name.\n    if (startsWith(stack, 't@')) {\n      return 'Safari';\n    }\n\n    // Firefox mentions \"prototype\".\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    }\n\n    // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n    const last = stack.split('\\n').pop();\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    }\n\n    // Finally, chrome includes the error message in the stack.\n    if (startsWith(stack, 'Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(getRootElement_(win), 'user-error', vars);\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win)\n    .getSingleDoc()\n    .getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether addEventListener supports options or only takes capture as a boolean\n * @type {boolean|undefined}\n * @visibleForTesting\n */\nlet optsSupported;\n\n/**\n * Listens for the specified event on the element.\n *\n * Do not use this directly. This method is implemented as a shared\n * dependency. Use `listen()` in either `event-helper` or `3p-frame-messaging`,\n * depending on your use case.\n *\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function internalListenImplementation(\n  element,\n  eventType,\n  listener,\n  opt_evtListenerOpts\n) {\n  let localElement = element;\n  let localListener = listener;\n  /**\n   * @type {?Function}\n   */\n  let wrapped;\n\n  wrapped = event => {\n    try {\n      return localListener(event);\n    } catch (e) {\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n  };\n  const optsSupported = detectEvtListenerOptsSupport();\n  let capture = false;\n  if (opt_evtListenerOpts) {\n    capture = opt_evtListenerOpts.capture;\n  }\n  localElement.addEventListener(\n    eventType,\n    wrapped,\n    optsSupported ? opt_evtListenerOpts : capture\n  );\n  return () => {\n    if (localElement) {\n      localElement.removeEventListener(\n        eventType,\n        wrapped,\n        optsSupported ? opt_evtListenerOpts : capture\n      );\n    }\n    // Ensure these are GC'd\n    localListener = null;\n    localElement = null;\n    wrapped = null;\n  };\n}\n\n/**\n * Tests whether the browser supports options as an argument of addEventListener\n * or not.\n *\n * @return {boolean}\n */\nexport function detectEvtListenerOptsSupport() {\n  // Only run the test once\n  if (optsSupported !== undefined) {\n    return optsSupported;\n  }\n\n  optsSupported = false;\n  try {\n    // Test whether browser supports EventListenerOptions or not\n    const options = {\n      get capture() {\n        optsSupported = true;\n      },\n    };\n    self.addEventListener('test-options', null, options);\n    self.removeEventListener('test-options', null, options);\n  } catch (err) {\n    // EventListenerOptions are not supported\n  }\n  return optsSupported;\n}\n\n/**\n * Resets the test for whether addEventListener supports options or not.\n */\nexport function resetEvtListenerOptsSupportForTesting() {\n  optsSupported = undefined;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    event => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise(resolve => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        child => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return arr[Math.floor(rn * arr.length)] || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Object<string, !ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (const experimentName in experiments) {\n    // Skip experimentName if it is not a key of experiments object or if it\n    // has already been populated by some other property.\n    if (!hasOwn(experiments, experimentName)) {\n      continue;\n    }\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (\n      !experiments[experimentName].isTrafficEligible ||\n      !experiments[experimentName].isTrafficEligible(win)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      const {branches} = experiments[experimentName];\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(function()): number} Function that when invoked will\n *     call the passed in function. On every invocation the next\n *     invocation of the passed in function will be exponentially\n *     later. Returned function returns timeout id.\n */\nexport function exponentialBackoff(opt_base) {\n  const getTimeout = exponentialBackoffClock(opt_base);\n  return work => {\n    return setTimeout(work, getTimeout());\n  };\n}\n\n/**\n * @param {number=} opt_base Exponential base. Defaults to 2.\n * @return {function(): number} Function that when invoked will return\n *    a number that exponentially grows per invocation.\n */\nexport function exponentialBackoffClock(opt_base) {\n  const base = opt_base || 2;\n  let count = 0;\n  return () => {\n    let wait = Math.pow(base, count++);\n    wait += getJitter(wait);\n    return wait * 1000;\n  };\n}\n\n/**\n * Add jitter to avoid the thundering herd. This can e.g. happen when\n * we poll a backend and it fails for everyone at the same time.\n * We add up to 30% (default) longer or shorter than the given time.\n *\n * @param {number} wait the amount if base milliseconds\n * @param {number=} opt_perc the min/max percentage to add or sutract\n * @return {number}\n */\nexport function getJitter(wait, opt_perc) {\n  opt_perc = opt_perc || 0.3;\n  let jitter = wait * opt_perc * Math.random();\n  if (Math.random() > 0.5) {\n    jitter *= -1;\n  }\n  return jitter;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {px, resetStyles, setStyles, translate} from './style';\n\n/**\n * Centers a frame with a translate transition.\n * This function does direct DOM manipulation, so it needs to run under vsync\n * mutate context.\n * @param {!HTMLIFrameElement} iframe\n * @param {!ClientRect} iframeRect\n * @param {{width: number, height: number}} viewportSize\n * @param {number} transitionTimeMs\n */\nexport function centerFrameUnderVsyncMutate(\n  iframe,\n  iframeRect,\n  viewportSize,\n  transitionTimeMs\n) {\n  // TODO(alanorozco): Place a sentinel sibling on inabox to account for\n  // gap necessary for position: fixed.\n\n  const translateX = px(\n    viewportSize.width / 2 - iframeRect.width / 2 - iframeRect.left\n  );\n\n  const translateY = px(\n    viewportSize.height / 2 - iframeRect.height / 2 - iframeRect.top\n  );\n\n  setStyles(iframe, {\n    'position': 'fixed',\n    'top': px(iframeRect.top),\n    'right': px(viewportSize.width - (iframeRect.left + iframeRect.width)),\n    'left': px(iframeRect.left),\n    'bottom': px(viewportSize.height - (iframeRect.top + iframeRect.height)),\n    'height': px(iframeRect.height),\n    'width': px(iframeRect.width),\n    'transition': `transform ${transitionTimeMs}ms ease`,\n    'transform': translate(translateX, translateY),\n    'margin': 0,\n  });\n}\n\n/**\n * Expands frame to fill the entire viewport.\n * This function does direct DOM manipulation, so it needs to run under vsync\n * mutate context.\n * @param {!HTMLIFrameElement} iframe\n */\nexport function expandFrameUnderVsyncMutate(iframe) {\n  setStyles(iframe, {\n    'position': 'fixed',\n    'z-index': 1000,\n    'left': 0,\n    'right': 0,\n    'top': 0,\n    'bottom': 0,\n    'width': '100vw',\n    'height': '100vh',\n    'transition': null,\n    'transform': null,\n    'margin': 0,\n    'border': 0,\n  });\n}\n\n/**\n * Resets frame that was previously expanded to fill the entire viewport.\n * This function does direct DOM manipulation, so it needs to run under vsync\n * mutate context.\n * @param {!HTMLIFrameElement} iframe\n */\nexport function collapseFrameUnderVsyncMutate(iframe) {\n  resetStyles(iframe, [\n    'position',\n    'z-index',\n    'left',\n    'right',\n    'top',\n    'bottom',\n    'width',\n    'height',\n    'margin',\n    'border',\n  ]);\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {addAttributesToElement, closestAncestorElementBySelector} from './dom';\nimport {deserializeMessage, isAmpMessage} from './3p-frame-messaging';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {getData} from './event-helper';\nimport {parseUrlDeprecated} from './url';\nimport {remove} from './utils/array';\nimport {setStyle, toggle} from './style';\nimport {tryParseJson} from './json';\n\n/**\n * Sentinel used to force unlistening after a iframe is detached.\n * @type {string}\n */\nconst UNLISTEN_SENTINEL = 'unlisten';\n\n/**\n * The iframe feature policy that forces the iframe to pause when it's not\n * display.\n * See https://github.com/dtapuska/iframe-freeze.\n */\nconst EXECUTION_WHILE_NOT_RENDERED = 'execution-while-not-rendered';\n\n/**\n * @typedef {{\n *   frame: !Element,\n *   events: !Object<string, !Array<function(!JsonObject)>>\n * }}\n */\nlet WindowEventsDef;\n\n/**\n * Returns a mapping from a URL's origin to an array of windows and their\n * listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {boolean=} opt_create create the mapping if it does not exist\n * @return {?Object<string, !Array<!WindowEventsDef>>}\n */\nfunction getListenFors(parentWin, opt_create) {\n  let {listeningFors} = parentWin;\n\n  if (!listeningFors && opt_create) {\n    listeningFors = parentWin.listeningFors = Object.create(null);\n  }\n  return listeningFors || null;\n}\n\n/**\n * Returns an array of WindowEventsDef that have had any listenFor listeners\n * registered for this sentinel.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {boolean=} opt_create create the array if it does not exist\n * @return {?Array<!WindowEventsDef>}\n */\nfunction getListenForSentinel(parentWin, sentinel, opt_create) {\n  const listeningFors = getListenFors(parentWin, opt_create);\n  if (!listeningFors) {\n    return listeningFors;\n  }\n\n  let listenSentinel = listeningFors[sentinel];\n  if (!listenSentinel && opt_create) {\n    listenSentinel = listeningFors[sentinel] = [];\n  }\n  return listenSentinel || null;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {!Element} iframe the iframe element who's context will trigger the\n *     event\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getOrCreateListenForEvents(parentWin, iframe, opt_is3P) {\n  const sentinel = getSentinel_(iframe, opt_is3P);\n  const listenSentinel = getListenForSentinel(parentWin, sentinel, true);\n\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    if (we.frame === iframe) {\n      windowEvents = we;\n      break;\n    }\n  }\n\n  if (!windowEvents) {\n    windowEvents = {\n      frame: iframe,\n      events: Object.create(null),\n    };\n    listenSentinel.push(windowEvents);\n  }\n\n  return windowEvents.events;\n}\n\n/**\n * Returns an mapping of event names to listenFor listeners.\n * @param {?Window} parentWin the window that created the iframe\n * @param {string} sentinel the sentinel of the message\n * @param {string} origin the source window's origin\n * @param {?Window} triggerWin the window that triggered the event\n * @return {?Object<string, !Array<function(!JsonObject, !Window, string, !MessageEvent)>>}\n */\nfunction getListenForEvents(parentWin, sentinel, origin, triggerWin) {\n  const listenSentinel = getListenForSentinel(parentWin, sentinel);\n\n  if (!listenSentinel) {\n    return listenSentinel;\n  }\n\n  // Find the entry for the frame.\n  // TODO(@nekodo): Add a WeakMap<Window, WindowEventsDef> cache to\n  //     speed up this process.\n  let windowEvents;\n  for (let i = 0; i < listenSentinel.length; i++) {\n    const we = listenSentinel[i];\n    const {contentWindow} = we.frame;\n    if (!contentWindow) {\n      setTimeout(dropListenSentinel, 0, listenSentinel);\n    } else if (\n      triggerWin == contentWindow ||\n      isDescendantWindow(contentWindow, triggerWin)\n    ) {\n      // 3p code path, we may accept messages from nested frames.\n      windowEvents = we;\n      break;\n    }\n  }\n\n  return windowEvents ? windowEvents.events : null;\n}\n\n/**\n * Checks whether one window is a descendant of another by climbing\n * the parent chain.\n * @param {?Window} ancestor potential ancestor window\n * @param {?Window} descendant potential descendant window\n * @return {boolean}\n */\nfunction isDescendantWindow(ancestor, descendant) {\n  for (let win = descendant; win && win != win.parent; win = win.parent) {\n    if (win == ancestor) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Removes any listenFors registed on listenSentinel that do not have\n * a contentWindow (the frame was removed from the DOM tree).\n * @param {!Array<!WindowEventsDef>} listenSentinel\n */\nfunction dropListenSentinel(listenSentinel) {\n  const noopData = dict({'sentinel': UNLISTEN_SENTINEL});\n\n  for (let i = listenSentinel.length - 1; i >= 0; i--) {\n    const windowEvents = listenSentinel[i];\n\n    if (!windowEvents.frame.contentWindow) {\n      listenSentinel.splice(i, 1);\n\n      const {events} = windowEvents;\n      for (const name in events) {\n        // Splice here, so that each unlisten does not shift the array\n        events[name].splice(0, Infinity).forEach(event => {\n          event(noopData);\n        });\n      }\n    }\n  }\n}\n\n/**\n * Registers the global listenFor event listener if it has yet to be.\n * @param {?Window} parentWin\n */\nfunction registerGlobalListenerIfNeeded(parentWin) {\n  if (parentWin.listeningFors) {\n    return;\n  }\n  const listenForListener = function(event) {\n    if (!getData(event)) {\n      return;\n    }\n    const data = parseIfNeeded(getData(event));\n\n    if (!data || !data['sentinel']) {\n      return;\n    }\n\n    const listenForEvents = getListenForEvents(\n      parentWin,\n      data['sentinel'],\n      event.origin,\n      event.source\n    );\n    if (!listenForEvents) {\n      return;\n    }\n\n    let listeners = listenForEvents[data['type']];\n    if (!listeners) {\n      return;\n    }\n\n    // We slice to avoid issues with adding another listener or unlistening\n    // during iteration. We could move to a Doubly Linked List with\n    // backtracking, but that's overly complicated.\n    listeners = listeners.slice();\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener(data, event.source, event.origin, event);\n    }\n  };\n\n  parentWin.addEventListener('message', listenForListener);\n}\n\n/**\n * Allows listening for message from the iframe. Returns an unlisten\n * function to remove the listener.\n *\n * @param {?Element} iframe\n * @param {string} typeOfMessage\n * @param {?function(!JsonObject, !Window, string, !MessageEvent)} callback Called when a\n *     message of this type arrives for this iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @param {boolean=} opt_includingNestedWindows set to true if messages from\n *     nested frames should also be accepted.\n * @param {boolean=} opt_allowOpaqueOrigin set to true if messages from\n       opaque origins (origin == null) are allowed.\n * @return {!UnlistenDef}\n */\nexport function listenFor(\n  iframe,\n  typeOfMessage,\n  callback,\n  opt_is3P,\n  opt_includingNestedWindows,\n  opt_allowOpaqueOrigin\n) {\n  devAssert(iframe.src, 'only iframes with src supported');\n  devAssert(\n    !iframe.parentNode,\n    'cannot register events on an attached ' +\n      'iframe. It will cause hair-pulling bugs like #2942'\n  );\n  devAssert(callback);\n  const parentWin = iframe.ownerDocument.defaultView;\n\n  registerGlobalListenerIfNeeded(parentWin);\n\n  const listenForEvents = getOrCreateListenForEvents(\n    parentWin,\n    iframe,\n    opt_is3P\n  );\n\n  const iframeOrigin = parseUrlDeprecated(iframe.src).origin;\n  let events =\n    listenForEvents[typeOfMessage] || (listenForEvents[typeOfMessage] = []);\n\n  let unlisten;\n  let listener = function(data, source, origin, event) {\n    const sentinel = data['sentinel'];\n\n    // Exclude messages that don't satisfy amp sentinel rules.\n    if (sentinel == 'amp') {\n      // For `amp` sentinel, nested windows are not allowed\n      if (source != iframe.contentWindow) {\n        return;\n      }\n\n      // For `amp` sentinel origin must match unless opaque origin is allowed\n      const isOpaqueAndAllowed = origin == 'null' && opt_allowOpaqueOrigin;\n      if (iframeOrigin != origin && !isOpaqueAndAllowed) {\n        return;\n      }\n    }\n\n    // Exclude nested frames if necessary.\n    // Note that the source was already verified to be either the contentWindow\n    // of the iframe itself or a descendant window within it.\n    if (!opt_includingNestedWindows && source != iframe.contentWindow) {\n      return;\n    }\n\n    if (data.sentinel == UNLISTEN_SENTINEL) {\n      unlisten();\n      return;\n    }\n    callback(data, source, origin, event);\n  };\n\n  events.push(listener);\n\n  return (unlisten = function() {\n    if (listener) {\n      const index = events.indexOf(listener);\n      if (index > -1) {\n        events.splice(index, 1);\n      }\n      // Make sure references to the unlisten function do not keep\n      // alive too much.\n      listener = null;\n      events = null;\n      callback = null;\n    }\n  });\n}\n\n/**\n * Returns a promise that resolves when one of given messages has been observed\n * for the first time. And remove listener for all other messages.\n * @param {!Element} iframe\n * @param {string|!Array<string>} typeOfMessages\n * @param {boolean=} opt_is3P\n * @return {!Promise<!{data: !JsonObject, source: !Window, origin: string, event: !MessageEvent}>}\n */\nexport function listenForOncePromise(iframe, typeOfMessages, opt_is3P) {\n  const unlistenList = [];\n  if (typeof typeOfMessages == 'string') {\n    typeOfMessages = [typeOfMessages];\n  }\n  return new Promise(resolve => {\n    for (let i = 0; i < typeOfMessages.length; i++) {\n      const message = typeOfMessages[i];\n      const unlisten = listenFor(\n        iframe,\n        message,\n        (data, source, origin, event) => {\n          for (let i = 0; i < unlistenList.length; i++) {\n            unlistenList[i]();\n          }\n          resolve({data, source, origin, event});\n        },\n        opt_is3P\n      );\n      unlistenList.push(unlisten);\n    }\n  });\n}\n\n/**\n * Posts a message to the iframe.\n * @param {!Element} iframe The iframe.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {string} targetOrigin origin of the target.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessage(iframe, type, object, targetOrigin, opt_is3P) {\n  postMessageToWindows(\n    iframe,\n    [{win: iframe.contentWindow, origin: targetOrigin}],\n    type,\n    object,\n    opt_is3P\n  );\n}\n\n/**\n * Posts an identical message to multiple target windows with the same\n * sentinel.\n * The message is serialized only once.\n * @param {!Element} iframe The iframe.\n * @param {!Array<{win: !Window, origin: string}>} targets to send the message\n *     to, pairs of window and its origin.\n * @param {string} type Type of the message.\n * @param {!JsonObject} object Message payload.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n */\nexport function postMessageToWindows(iframe, targets, type, object, opt_is3P) {\n  if (!iframe.contentWindow) {\n    return;\n  }\n  object['type'] = type;\n  object['sentinel'] = getSentinel_(iframe, opt_is3P);\n  let payload = object;\n  if (opt_is3P) {\n    // Serialize ourselves because that is much faster in Chrome.\n    payload = 'amp-' + JSON.stringify(object);\n  }\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n    target.win./*OK*/ postMessage(payload, target.origin);\n  }\n}\n\n/**\n * Gets the sentinel string.\n * @param {!Element} iframe The iframe.\n * @param {boolean=} opt_is3P set to true if the iframe is 3p.\n * @return {string} Sentinel string.\n * @private\n */\nfunction getSentinel_(iframe, opt_is3P) {\n  return opt_is3P ? iframe.getAttribute('data-amp-3p-sentinel') : 'amp';\n}\n\n/**\n * JSON parses event.data if it needs to be\n * @param {*} data\n * @return {?JsonObject} object message\n * @private\n * @visibleForTesting\n */\nexport function parseIfNeeded(data) {\n  if (typeof data == 'string') {\n    if (data.charAt(0) == '{') {\n      data =\n        tryParseJson(data, e => {\n          dev().warn(\n            'IFRAME-HELPER',\n            'Postmessage could not be parsed. ' +\n              'Is it in a valid JSON format?',\n            e\n          );\n        }) || null;\n    } else if (isAmpMessage(data)) {\n      data = deserializeMessage(data);\n    } else {\n      data = null;\n    }\n  }\n  return /** @type {?JsonObject} */ (data);\n}\n\n/**\n * Manages a postMessage API for an iframe with a subscription message and\n * a way to broadcast messages to all subscribed windows, which\n * in turn must all be descendants of the contentWindow of the iframe.\n */\nexport class SubscriptionApi {\n  /**\n   * @param {!Element} iframe The iframe.\n   * @param {string} type Type of the subscription message.\n   * @param {boolean} is3p set to true if the iframe is 3p.\n   * @param {function(!JsonObject, !Window, string)} requestCallback Callback\n   *     invoked whenever a new window subscribes.\n   */\n  constructor(iframe, type, is3p, requestCallback) {\n    /** @private @const {!Element} */\n    this.iframe_ = iframe;\n    /** @private @const {boolean} */\n    this.is3p_ = is3p;\n    /** @private @const {!Array<{win: !Window, origin: string}>} */\n    this.clientWindows_ = [];\n\n    /** @private @const {!UnlistenDef} */\n    this.unlisten_ = listenFor(\n      this.iframe_,\n      type,\n      (data, source, origin) => {\n        // This message might be from any window within the iframe, we need\n        // to keep track of which windows want to be sent updates.\n        if (!this.clientWindows_.some(entry => entry.win == source)) {\n          this.clientWindows_.push({win: source, origin});\n        }\n        requestCallback(data, source, origin);\n      },\n      this.is3p_,\n      // For 3P frames we also allow nested frames within them to subscribe..\n      this.is3p_ /* opt_includingNestedWindows */\n    );\n  }\n\n  /**\n   * Sends a message to all subscribed windows.\n   * @param {string} type Type of the message.\n   * @param {!JsonObject} data Message payload.\n   */\n  send(type, data) {\n    // Remove clients that have been removed from the DOM.\n    remove(this.clientWindows_, client => !client.win.parent);\n    postMessageToWindows(\n      this.iframe_,\n      this.clientWindows_,\n      type,\n      data,\n      this.is3p_\n    );\n  }\n\n  /**\n   * Destroys iframe.\n   */\n  destroy() {\n    this.unlisten_();\n    this.clientWindows_.length = 0;\n  }\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function looksLikeTrackingIframe(element) {\n  const box = element.getLayoutBox();\n  // This heuristic is subject to change.\n  if (box.width > 10 || box.height > 10) {\n    return false;\n  }\n  // Iframe is not tracking iframe if open with user interaction\n  return !closestAncestorElementBySelector(element, '.i-amphtml-overlay');\n}\n\n// Most common ad sizes\n// Array of [width, height] pairs.\nconst adSizes = [[300, 250], [320, 50], [300, 50], [320, 100]];\n\n/**\n * Guess whether this element might be an ad.\n * @param {!Element} element An amp-iframe element.\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isAdLike(element) {\n  const box = element.getLayoutBox();\n  const {height, width} = box;\n  for (let i = 0; i < adSizes.length; i++) {\n    const refWidth = adSizes[i][0];\n    const refHeight = adSizes[i][1];\n    if (refHeight > height) {\n      continue;\n    }\n    if (refWidth > width) {\n      continue;\n    }\n    // Fuzzy matching to account for padding.\n    if (height - refHeight <= 20 && width - refWidth <= 20) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {!Element} iframe\n * @return {!Element}\n * @private\n */\nexport function disableScrollingOnIframe(iframe) {\n  addAttributesToElement(iframe, dict({'scrolling': 'no'}));\n\n  // This shouldn't work, but it does on Firefox.\n  // https://stackoverflow.com/a/15494969\n  setStyle(iframe, 'overflow', 'hidden');\n\n  return iframe;\n}\n\n/**\n * Returns true if win's properties can be accessed and win is defined.\n * This functioned is used to determine if a window is cross-domained\n * from the perspective of the current window.\n * @param {!Window} win\n * @return {boolean}\n * @private\n */\nexport function canInspectWindow(win) {\n  // TODO: this is not reliable.  The compiler assumes that property reads are\n  // side-effect free.  The recommended fix is to use goog.reflect.sinkValue\n  // but since we're not using the closure library I'm not sure how to do this.\n  // See https://github.com/google/closure-compiler/issues/3156\n  try {\n    // win['test'] could be truthy but not true the compiler shouldn't be able\n    // to optimize this check away.\n    return !!win.location.href && (win['test'] || true);\n  } catch (unusedErr) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n}\n\n/** @const {string} */\nexport const FIE_EMBED_PROP = '__AMP_EMBED__';\n\n/**\n * Returns the embed created using `installFriendlyIframeEmbed` or `null`.\n * Caution: This will only return the FIE after the iframe has 'loaded'. If you\n * are checking before this signal you may be in a race condition that returns\n * null.\n * @param {!HTMLIFrameElement} iframe\n * @return {?./friendly-iframe-embed.FriendlyIframeEmbed}\n */\nexport function getFriendlyIframeEmbedOptional(iframe) {\n  return /** @type {?./friendly-iframe-embed.FriendlyIframeEmbed} */ (iframe[\n    FIE_EMBED_PROP\n  ]);\n}\n\n/**\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isInFie(element) {\n  return (\n    element.classList.contains('i-amphtml-fie') ||\n    !!closestAncestorElementBySelector(element, '.i-amphtml-fie')\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n */\nexport function makePausable(iframe) {\n  const oldAllow = (iframe.getAttribute('allow') || '').trim();\n  iframe.setAttribute(\n    'allow',\n    `${EXECUTION_WHILE_NOT_RENDERED} 'none';` + oldAllow\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n * @return {boolean}\n */\nexport function isPausable(iframe) {\n  return (\n    !!iframe.featurePolicy &&\n    iframe.featurePolicy.features().indexOf(EXECUTION_WHILE_NOT_RENDERED) !=\n      -1 &&\n    !iframe.featurePolicy.allowsFeature(EXECUTION_WHILE_NOT_RENDERED)\n  );\n}\n\n/**\n * @param {!HTMLIFrameElement} iframe\n * @param {boolean} paused\n */\nexport function setPaused(iframe, paused) {\n  toggle(iframe, !paused);\n}\n","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview This module declares JSON types as defined in the\n * {@link http://json.org/}.\n */\n\nimport {childElementsByTag, isJsonScriptTag} from './dom';\nimport {isObject} from './types';\n\n// NOTE Type are changed to {*} because of\n// https://github.com/google/closure-compiler/issues/1999\n\n/**\n * JSON scalar. It's either string, number or boolean.\n * @typedef {*} should be string|number|boolean|null\n */\nlet JSONScalarDef;\n\n/**\n * JSON object. It's a map with string keys and JSON values.\n * @typedef {*} should be !Object<string, ?JSONValueDef>\n */\nlet JSONObjectDef;\n\n/**\n * JSON array. It's an array with JSON values.\n * @typedef {*} should be !Array<?JSONValueDef>\n */\nlet JSONArrayDef;\n\n/**\n * JSON value. It's either a scalar, an object or an array.\n * @typedef {*} should be !JSONScalarDef|!JSONObjectDef|!JSONArrayDef\n */\nlet JSONValueDef;\n\n/**\n * Recreates objects with prototype-less copies.\n * @param {!JsonObject} obj\n * @return {!JsonObject}\n */\nexport function recreateNonProtoObject(obj) {\n  const copy = Object.create(null);\n  for (const k in obj) {\n    if (!hasOwnProperty(obj, k)) {\n      continue;\n    }\n    const v = obj[k];\n    copy[k] = isObject(v) ? recreateNonProtoObject(v) : v;\n  }\n  return /** @type {!JsonObject} */ (copy);\n}\n\n/**\n * Returns a value from an object for a field-based expression. The expression\n * is a simple nested dot-notation of fields, such as `field1.field2`. If any\n * field in a chain does not exist or is not an object or array, the returned\n * value will be `undefined`.\n *\n * @param {!JsonObject} obj\n * @param {string} expr\n * @return {*}\n */\nexport function getValueForExpr(obj, expr) {\n  // The `.` indicates \"the object itself\".\n  if (expr == '.') {\n    return obj;\n  }\n  // Otherwise, navigate via properties.\n  const parts = expr.split('.');\n  let value = obj;\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    if (\n      part &&\n      value &&\n      value[part] !== undefined &&\n      hasOwnProperty(value, part)\n    ) {\n      value = value[part];\n      continue;\n    }\n    value = undefined;\n    break;\n  }\n  return value;\n}\n\n/**\n * Simple wrapper around JSON.parse that casts the return value\n * to JsonObject.\n * Create a new wrapper if an array return value is desired.\n * @param {*} json JSON string to parse\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function parseJson(json) {\n  return /** @type {?JsonObject} */ (JSON.parse(/** @type {string} */ (json)));\n}\n\n/**\n * Parses the given `json` string without throwing an exception if not valid.\n * Returns `undefined` if parsing fails.\n * Returns the `Object` corresponding to the JSON string when parsing succeeds.\n * @param {*} json JSON string to parse\n * @param {function(!Error)=} opt_onFailed Optional function that will be called\n *     with the error if parsing fails.\n * @return {?JsonObject} May be extend to parse arrays.\n */\nexport function tryParseJson(json, opt_onFailed) {\n  try {\n    return parseJson(json);\n  } catch (e) {\n    if (opt_onFailed) {\n      opt_onFailed(e);\n    }\n    return null;\n  }\n}\n\n/**\n * Helper method to get the json config from an element <script> tag\n * @param {!Element} element\n * @return {?JsonObject}\n * @throws {!Error} If element does not have exactly one <script> child\n * with type=\"application/json\", or if the <script> contents are not valid JSON.\n */\nexport function getChildJsonConfig(element) {\n  const scripts = childElementsByTag(element, 'script');\n  const n = scripts.length;\n  if (n !== 1) {\n    throw new Error(`Found ${scripts.length} <script> children. Expected 1.`);\n  }\n  const script = scripts[0];\n  if (!isJsonScriptTag(script)) {\n    throw new Error('<script> child must have type=\"application/json\"');\n  }\n  try {\n    return parseJson(script.textContent);\n  } catch (unusedError) {\n    throw new Error('Failed to parse <script> contents. Is it valid JSON?');\n  }\n}\n\n/**\n * Deeply checks strict equality of items in nested arrays and objects.\n *\n * @param {JSONValueDef} a\n * @param {JSONValueDef} b\n * @param {number} depth The maximum depth. Must be finite.\n * @return {boolean}\n * @throws {Error} If depth argument is not finite.\n */\nexport function deepEquals(a, b, depth = 5) {\n  if (!isFinite(depth) || depth < 0) {\n    throw new Error('Invalid depth: ' + depth);\n  }\n  if (a === b) {\n    return true;\n  }\n  /** @type {!Array<{a: JSONValueDef, b: JSONValueDef, depth: number}>} */\n  const queue = [{a, b, depth}];\n  while (queue.length > 0) {\n    const {a, b, depth} = queue.shift();\n    // Only check deep equality if depth > 0.\n    if (depth > 0) {\n      if (typeof a !== typeof b) {\n        return false;\n      } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          queue.push({a: a[i], b: b[i], depth: depth - 1});\n        }\n        continue;\n      } else if (a && b && typeof a === 'object' && typeof b === 'object') {\n        const keysA = Object.keys(/** @type {!Object} */ (a));\n        const keysB = Object.keys(/** @type {!Object} */ (b));\n        if (keysA.length !== keysB.length) {\n          return false;\n        }\n        for (let i = 0; i < keysA.length; i++) {\n          const k = keysA[i];\n          queue.push({a: a[k], b: b[k], depth: depth - 1});\n        }\n        continue;\n      }\n    }\n    // If we get here, then depth == 0 or (a, b) are primitives.\n    if (a !== b) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {*} obj\n * @param {string} key\n * @return {boolean}\n */\nfunction hasOwnProperty(obj, key) {\n  if (obj == null || typeof obj != 'object') {\n    return false;\n  }\n  return Object.prototype.hasOwnProperty.call(\n    /** @type {!Object} */ (obj),\n    key\n  );\n}\n\n/**\n * This helper function handles configurations specified in a JSON format.\n *\n * It allows the configuration is to be written in plain JS (which has better\n * dev ergonomics like comments and trailing commas), and allows the\n * configuration to be transformed into an efficient JSON-parsed representation\n * in the dist build. See https://v8.dev/blog/cost-of-javascript-2019#json\n *\n * @param {!Object} obj\n * @return {!JsonObject}\n */\nexport function jsonConfiguration(obj) {\n  return /** @type {!JsonObject} */ (obj);\n}\n\n/**\n * This converts an Object into a suitable type to be used in `includeJsonLiteral`.\n * This doesn't actually do any conversion, it only changes the closure type.\n *\n * @param {!Object|!Array|string|number|boolean|null} value\n * @return {!InternalJsonLiteralTypeDef}\n */\nexport function jsonLiteral(value) {\n  return /** @type {!InternalJsonLiteralTypeDef} */ (value);\n}\n\n/**\n * Allows inclusion of a variable (that's wrapped in a jsonLiteral\n * call) to be included inside a jsonConfiguration.\n *\n * @param {!InternalJsonLiteralTypeDef} value\n * @return {*}\n */\nexport function includeJsonLiteral(value) {\n  return value;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The structure that combines position and size for an element. The exact\n * interpretation of position and size depends on the use case.\n *\n * @typedef {{\n *   top: number,\n *   bottom: number,\n *   left: number,\n *   right: number,\n *   width: number,\n *   height: number,\n *   x: number,\n *   y: number\n * }}\n */\nexport let LayoutRectDef;\n\n/**\n * The structure that represents the margins of an Element.\n *\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nexport let LayoutMarginsDef;\n\n/**\n * The structure that represents a requested change to the margins of an\n * Element. Any new values specified will replace existing ones (rather than\n * being additive).\n *\n * @typedef {{\n *   top: (number|undefined),\n *   right: (number|undefined),\n *   bottom: (number|undefined),\n *   left: (number|undefined)\n * }}\n */\nexport let LayoutMarginsChangeDef;\n\n/**\n * RelativePositions\n *\n * Describes the relative position of an element to another (whether the\n * first is inside the second, on top of the second or on the bottom\n * @enum {string}\n */\nexport const RelativePositions = {\n  INSIDE: 'inside',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n};\n\n/**\n * Creates a layout rect based on the left, top, width and height parameters\n * in that order.\n * @param {number} left\n * @param {number} top\n * @param {number} width\n * @param {number} height\n * @return {!LayoutRectDef}\n */\nexport function layoutRectLtwh(left, top, width, height) {\n  return {\n    left,\n    top,\n    width,\n    height,\n    bottom: top + height,\n    right: left + width,\n    x: left,\n    y: top,\n  };\n}\n\n/**\n * Creates a layout rect based on the DOMRect, e.g. obtained from calling\n * getBoundingClientRect.\n * @param {!ClientRect} rect\n * @return {!LayoutRectDef}\n */\nexport function layoutRectFromDomRect(rect) {\n  return layoutRectLtwh(\n    Number(rect.left),\n    Number(rect.top),\n    Number(rect.width),\n    Number(rect.height)\n  );\n}\n\n/**\n * Returns true if the specified two rects overlap by a single pixel.\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectsOverlap(r1, r2) {\n  return (\n    r1.top <= r2.bottom &&\n    r2.top <= r1.bottom &&\n    r1.left <= r2.right &&\n    r2.left <= r1.right\n  );\n}\n\n/**\n * Returns the intersection between a, b or null if there is none.\n * @param {...?LayoutRectDef|undefined} var_args\n * @return {?LayoutRectDef}\n */\nexport function rectIntersection(var_args) {\n  let x0 = -Infinity;\n  let x1 = Infinity;\n  let y0 = -Infinity;\n  let y1 = Infinity;\n  for (let i = 0; i < arguments.length; i++) {\n    const current = arguments[i];\n    if (!current) {\n      continue;\n    }\n    x0 = Math.max(x0, current.left);\n    x1 = Math.min(x1, current.left + current.width);\n    y0 = Math.max(y0, current.top);\n    y1 = Math.min(y1, current.top + current.height);\n    if (x1 < x0 || y1 < y0) {\n      return null;\n    }\n  }\n  if (x1 == Infinity) {\n    return null;\n  }\n  return layoutRectLtwh(x0, y0, x1 - x0, y1 - y0);\n}\n\n/**\n * Returns the position of r2 relative to r1\n * @param {!LayoutRectDef} r1\n * @param {!LayoutRectDef} r2\n * @return {RelativePositions}\n */\nexport function layoutRectsRelativePos(r1, r2) {\n  if (r1.top < r2.top) {\n    return RelativePositions.TOP;\n  } else if (r1.bottom > r2.bottom) {\n    return RelativePositions.BOTTOM;\n  } else {\n    return RelativePositions.INSIDE;\n  }\n}\n\n/**\n * Determines if any portion of a layoutBox would be onscreen in the given\n * viewport, when scrolled to the specified position.\n * @param {!LayoutRectDef} layoutBox\n * @param {!./service/viewport/viewport-interface.ViewportInterface} viewport\n * @param {number} scrollPos\n * @return {RelativePositions}\n */\nexport function layoutPositionRelativeToScrolledViewport(\n  layoutBox,\n  viewport,\n  scrollPos\n) {\n  const scrollLayoutBox = layoutRectFromDomRect(\n    /** @type {!ClientRect} */ ({\n      top: scrollPos,\n      bottom: scrollPos + viewport.getHeight(),\n      left: 0,\n      right: viewport.getWidth(),\n    })\n  );\n  if (layoutRectsOverlap(layoutBox, scrollLayoutBox)) {\n    return RelativePositions.INSIDE;\n  } else {\n    return layoutRectsRelativePos(layoutBox, scrollLayoutBox);\n  }\n}\n\n/**\n * Expand the layout rect using multiples of width and height.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dw Expansion in width, specified as a multiple of width.\n * @param {number} dh Expansion in height, specified as a multiple of height.\n * @return {!LayoutRectDef}\n */\nexport function expandLayoutRect(rect, dw, dh) {\n  return layoutRectLtwh(\n    rect.left - rect.width * dw,\n    rect.top - rect.height * dh,\n    rect.width * (1 + dw * 2),\n    rect.height * (1 + dh * 2)\n  );\n}\n\n/**\n * Moves the layout rect using dx and dy.\n * @param {!LayoutRectDef} rect Original rect.\n * @param {number} dx Move horizontally with this value.\n * @param {number} dy Move vertically with this value.\n * @return {!LayoutRectDef}\n */\nexport function moveLayoutRect(rect, dx, dy) {\n  if ((dx == 0 && dy == 0) || (rect.width == 0 && rect.height == 0)) {\n    return rect;\n  }\n  return layoutRectLtwh(rect.left + dx, rect.top + dy, rect.width, rect.height);\n}\n\n/**\n * @param {!LayoutMarginsDef} margins\n * @param {!LayoutMarginsChangeDef} change\n * @return {boolean}\n */\nexport function areMarginsChanged(margins, change) {\n  return (\n    (change.top !== undefined && change.top != margins.top) ||\n    (change.right !== undefined && change.right != margins.right) ||\n    (change.bottom !== undefined && change.bottom != margins.bottom) ||\n    (change.left !== undefined && change.left != margins.left)\n  );\n}\n\n/**\n * @param {!LayoutRectDef} from\n * @param {!LayoutRectDef} to\n * @return {boolean}\n */\nexport function layoutRectSizeEquals(from, to) {\n  return from.width == to.width && from.height === to.height;\n}\n\n/**\n * @param {?LayoutRectDef} r1\n * @param {?LayoutRectDef} r2\n * @return {boolean}\n */\nexport function layoutRectEquals(r1, r2) {\n  if (!r1 || !r2) {\n    return false;\n  }\n  return (\n    r1.left == r2.left &&\n    r1.top == r2.top &&\n    r1.width == r2.width &&\n    r1.height == r2.height\n  );\n}\n\n/**\n * @param {LayoutMarginsChangeDef|undefined} marginsChange\n * @return {LayoutMarginsChangeDef|undefined}\n */\nexport function cloneLayoutMarginsChangeDef(marginsChange) {\n  if (!marginsChange) {\n    return marginsChange;\n  }\n  return {\n    top: marginsChange.top,\n    bottom: marginsChange.bottom,\n    left: marginsChange.left,\n    right: marginsChange.right,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = arg =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don’t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then(response => response.json(), noop)\n        .then(opt_messages => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * NOTE: for an explanation of the tempate R implementation see\n   * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {R} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is `null` or `undefined`.\n   * @template T\n   * @template R :=\n   *     mapunion(T, (V) =>\n   *         cond(eq(V, 'null'),\n   *             none(),\n   *             cond(eq(V, 'undefined'),\n   *                 none(),\n   *                 V)))\n   *  =:\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = val =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log contructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log contructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    mode => {\n      const logNum = parseInt(mode.log, 10);\n      if (mode.development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * NOTE: for an explanation of the tempate R implementation see\n * https://github.com/google/closure-library/blob/08858804/closure/goog/asserts/asserts.js#L192-L213\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {R} The value of shouldBeTrueish.\n * @template T\n * @template R :=\n *     mapunion(T, (V) =>\n *         cond(eq(V, 'null'),\n *             none(),\n *             cond(eq(V, 'undefined'),\n *                 none(),\n *                 V)))\n *  =:\n * @throws {!Error} When `value` is `null` or `undefined`.\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n    singlePassType: getMode(opt_win).singlePassType,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   singlePassType: (string|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const localDevEnabled = !!AMP_CONFIG.localDev;\n  const runningTests =\n    !!AMP_CONFIG.test || (IS_DEV && !!(win.__AMP_TEST || win.__karma__));\n  const isLocalDev = IS_DEV && (localDevEnabled || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n  const singlePassType = AMP_CONFIG.spt;\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    // amp-user-location override\n    userLocationOverride: hashQuery['amp-user-location'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n    singlePassType,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return internalRuntimeVersion();\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This class helps to manage observers. Observers can be added, removed or\n * fired through and instance of this class.\n * @template TYPE\n */\nexport class Observable {\n  /**\n   * Creates an instance of Observable.\n   */\n  constructor() {\n    /** @type {?Array<function(TYPE)>} */\n    this.handlers_ = null;\n  }\n\n  /**\n   * Adds the observer to this instance.\n   * @param {function(TYPE)} handler Observer's handler.\n   * @return {!UnlistenDef}\n   */\n  add(handler) {\n    if (!this.handlers_) {\n      this.handlers_ = [];\n    }\n    this.handlers_.push(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  /**\n   * Removes the observer from this instance.\n   * @param {function(TYPE)} handler Observer's instance.\n   */\n  remove(handler) {\n    if (!this.handlers_) {\n      return;\n    }\n    const index = this.handlers_.indexOf(handler);\n    if (index > -1) {\n      this.handlers_.splice(index, 1);\n    }\n  }\n\n  /**\n   * Removes all observers.\n   */\n  removeAll() {\n    if (!this.handlers_) {\n      return;\n    }\n    this.handlers_.length = 0;\n  }\n\n  /**\n   * Fires an event. All observers are called.\n   * @param {TYPE=} opt_event\n   */\n  fire(opt_event) {\n    if (!this.handlers_) {\n      return;\n    }\n    const handlers = this.handlers_;\n    for (let i = 0; i < handlers.length; i++) {\n      const handler = handlers[i];\n      handler(opt_event);\n    }\n  }\n\n  /**\n   * Returns number of handlers. Mostly needed for tests.\n   * @return {number}\n   */\n  getHandlerCount() {\n    if (!this.handlers_) {\n      return 0;\n    }\n    return this.handlers_.length;\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Services} from './services';\nimport {devAssert} from './log';\nimport {getServicePromise} from './service';\n\n/**\n * A map of services that delay rendering. The key is the name of the service\n * and the value is a DOM query which is used to check if the service is needed\n * in the current document.\n * Do not add a service unless absolutely necessary.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this list is used for server-side rendering (SSR) and any\n * changes made to it must be made in coordination with caches that implement\n * SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @const {!Object<string, string>}\n */\nconst SERVICES = {\n  'amp-dynamic-css-classes': '[custom-element=amp-dynamic-css-classes]',\n  'variant': 'amp-experiment',\n  'amp-story-render': 'amp-story[standalone]',\n};\n\n/**\n * Base class for render delaying services.\n * This should be extended to ensure the service\n * is properly handled\n *\n * @interface\n */\nexport class RenderDelayingService {\n  /**\n   * Function to return a promise for when\n   * it is finished delaying render, and is ready.\n   * NOTE: This should simply return Promise.resolve,\n   * if your service does not need to perform any logic\n   * after being registered.\n   * @return {!Promise}\n   */\n  whenReady() {}\n}\n\n/**\n * Maximum milliseconds to wait for all extensions to load before erroring.\n * @const\n */\nconst LOAD_TIMEOUT = 3000;\n\n/**\n * Detects any render delaying services that are required on the page, and\n * returns a promise with a timeout.\n * @param {!Window} win\n * @return {!Promise<!Array<*>>} resolves to an Array that has the same length\n *     as the detected render delaying services\n */\nexport function waitForServices(win) {\n  const promises = includedServices(win).map(serviceId => {\n    const serviceReadyPromise = getServicePromise(win, serviceId).then(\n      service => {\n        if (service && isRenderDelayingService(service)) {\n          return service.whenReady().then(() => {\n            return service;\n          });\n        }\n        return service;\n      }\n    );\n\n    return Services.timerFor(win).timeoutPromise(\n      LOAD_TIMEOUT,\n      serviceReadyPromise,\n      `Render timeout waiting for service ${serviceId} to be ready.`\n    );\n  });\n  return Promise.all(promises);\n}\n\n/**\n * Returns true if the page has a render delaying service.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function hasRenderDelayingServices(win) {\n  return includedServices(win).length > 0;\n}\n\n/**\n * Function to determine if the passed\n * Object is a Render Delaying Service\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isRenderDelayingService(service) {\n  const maybeRenderDelayingService = /** @type {!RenderDelayingService}*/ (service);\n  return typeof maybeRenderDelayingService.whenReady == 'function';\n}\n\n/**\n * Detects which, if any, render-delaying extensions are included on the page.\n * @param {!Window} win\n * @return {!Array<string>}\n */\nexport function includedServices(win) {\n  /** @const {!Document} */\n  const doc = win.document;\n  devAssert(doc.body);\n\n  return Object.keys(SERVICES).filter(service => {\n    return doc.querySelector(SERVICES[service]);\n  });\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {isInAmpdocFieExperiment} from './ampdoc-fie';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Services must implement this interface to be embeddable in FIEs.\n * @interface\n */\nexport class EmbeddableService {\n  /**\n   * Installs a new instance of the service in the given FIE window.\n   * @param {!Window} unusedEmbedWin\n   * @param {!./service/ampdoc-impl.AmpDoc} unusedAmpDoc\n   */\n  static installInEmbedWindow(unusedEmbedWin, unusedAmpDoc) {}\n}\n\n/**\n * Returns a service with the given id. Assumes that it has been constructed\n * already.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nexport function getExistingServiceForDocInEmbedScope(element, id) {\n  // TODO(#22733): completely remove this method once ampdoc-fie launches.\n  const document = element.ownerDocument;\n  const win = toWin(document.defaultView);\n  const topWin = getTopWindow(win);\n  // First, try to resolve via local embed window (if applicable).\n  const isEmbed = win != topWin;\n  const ampdocFieExperimentOn = isInAmpdocFieExperiment(topWin);\n  if (isEmbed && !ampdocFieExperimentOn) {\n    if (isServiceRegistered(win, id)) {\n      return getServiceInternal(win, id);\n    }\n    // Fallback from FIE to parent is intentionally unsupported for safety.\n    return null;\n  } else {\n    // Resolve via the element's ampdoc.\n    return getServiceForDocOrNullInternal(element, id);\n  }\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedScope(embedWin, id, service) {\n  const topWin = getTopWindow(embedWin);\n  devAssert(\n    embedWin != topWin,\n    'Service override can only be installed in embed window: %s',\n    id\n  );\n  devAssert(\n    !isServiceRegistered(embedWin, id),\n    'Service override has already been installed: %s',\n    id\n  );\n  const ampdocFieExperimentOn = isInAmpdocFieExperiment(topWin);\n  if (ampdocFieExperimentOn) {\n    const ampdoc = getAmpdoc(embedWin.document);\n    registerServiceInternal(\n      getAmpdocServiceHolder(ampdoc),\n      ampdoc,\n      id,\n      () => service,\n      /* override */ true\n    );\n  } else {\n    registerServiceInternal(embedWin, embedWin, id, () => service);\n    getServiceInternal(embedWin, id); // Force service to build.\n  }\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id\n * @return {?Object}\n */\nfunction getServiceForDocOrNullInternal(element, id) {\n  const ampdoc = getAmpdoc(element);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n * @template T\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n */\nfunction registerServiceInternal(holder, context, id, ctor, opt_override) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  // TODO(dvoytenko): Consider marking holder as destroyed for later-arriving\n  // service to be canceled automatically.\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then(instance =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * Adopts an embeddable (implements `EmbeddableService` interface) service\n * in embed scope.\n * @param {!Window} embedWin\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} serviceClass\n * @suppress {missingProperties}\n * @return {boolean}\n */\nexport function installServiceInEmbedIfEmbeddable(embedWin, serviceClass) {\n  const isEmbeddableService =\n    typeof serviceClass.installInEmbedWindow === 'function';\n  if (!isEmbeddableService) {\n    return false;\n  }\n  const frameElement = dev().assertElement(\n    embedWin.frameElement,\n    'frameElement not found for embed'\n  );\n  const ampdoc = getAmpdoc(frameElement);\n  serviceClass.installInEmbedWindow(embedWin, ampdoc);\n  return true;\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    () => service\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceForDocInEmbedScope,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?{incomingFragment: string, outgoingFragment: string}>}\n   */\n  static shareTrackingForOrNull(win) {\n    return /** @type {!Promise<?{incomingFragment: string, outgoingFragment: string}>} */ (getElementServiceIfAvailable(\n      win,\n      'share-tracking',\n      'amp-share-tracking',\n      true\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.StoryVariableDef>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService|?../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationService(win) {\n    return getService(win, 'localization');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreServiceV01(win) {\n    return getService(win, 'story-store');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!../extensions/amp-story/0.1/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestServiceV01(win) {\n    return getService(win, 'story-request-v01');\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNullV01(win) {\n    return (\n      /** @type {!Promise<?./service/localization.LocalizationService>} */\n      (getElementServiceIfAvailable(win, 'localization-v01', 'amp-story', true))\n    );\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!./service/localization.LocalizationService}\n   */\n  static localizationServiceV01(win) {\n    return getService(win, 'localization-v01');\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>}\n   */\n  static viewerIntegrationVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-integration/0.1/variable-service.ViewerIntegrationVariableDef>} */\n      (getElementServiceIfAvailable(\n        win,\n        'viewer-integration-variable',\n        'amp-viewer-integration',\n        true\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesFor(window) {\n    return /** @type {!./service/template-impl.Templates} */ (getService(\n      window,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getService(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>}\n   */\n  static userLocationForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-user-location/0.1/user-location-service.UserLocationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'user-location',\n      'amp-user-location',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getExistingServiceForDocInEmbedScope(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>}\n   */\n  static viewerAssistanceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-viewer-assistance/0.1/amp-viewer-assistance.AmpViewerAssistance>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'amp-viewer-assistance',\n        'amp-viewer-assistance'\n      ))\n    );\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {*} TODO(#23582): Specify return type\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CommonSignals} from './common-signals';\nimport {Services} from './services';\nimport {dev, devAssert, rethrowAsync} from './log';\nimport {getAmpdoc} from './service';\nimport {insertAfterOrAtStart, waitForBodyOpenPromise} from './dom';\nimport {map} from './utils/object';\nimport {setStyles} from './style';\nimport {waitForServices} from './render-delaying-services';\n\nconst TRANSFORMER_PROP = '__AMP_CSS_TR';\nconst STYLE_MAP_PROP = '__AMP_CSS_SM';\n\n/**\n * Adds the given css text to the given ampdoc.\n *\n * The style tags will be at the beginning of the head before all author\n * styles. One element can be the main runtime CSS. This is guaranteed\n * to always be the first stylesheet in the doc.\n *\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc The ampdoc that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are available.\n *     Not using a promise, because this is synchronous when possible.\n *     for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesForDoc(\n  ampdoc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const cssRoot = ampdoc.getHeadNode();\n  const style = insertStyleElement(\n    cssRoot,\n    maybeTransform(cssRoot, cssText),\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    const rootNode = ampdoc.getRootNode();\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(rootNode, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(rootNode, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Adds the given css text to the given document.\n * TODO(dvoytenko, #22733): Remove this method once FIE/ampdoc migration is\n * done.\n *\n * @param {!Document} doc The document that should get the new styles.\n * @param {string} cssText\n * @param {?function(!Element)|undefined} cb Called when the new styles are\n *     available. Not using a promise, because this is synchronous when\n *     possible. for better performance.\n * @param {boolean=} opt_isRuntimeCss If true, this style tag will be inserted\n *     as the first element in head and all style elements will be positioned\n *     after.\n * @param {string=} opt_ext\n * @return {!Element}\n */\nexport function installStylesLegacy(\n  doc,\n  cssText,\n  cb,\n  opt_isRuntimeCss,\n  opt_ext\n) {\n  const style = insertStyleElement(\n    dev().assertElement(doc.head),\n    cssText,\n    opt_isRuntimeCss || false,\n    opt_ext || null\n  );\n\n  if (cb) {\n    // Styles aren't always available synchronously. E.g. if there is a\n    // pending style download, it will have to finish before the new\n    // style is visible.\n    // For this reason we poll until the style becomes available.\n    // Sync case.\n    if (styleLoaded(doc, style)) {\n      cb(style);\n      return style;\n    }\n    // Poll until styles are available.\n    const interval = setInterval(() => {\n      if (styleLoaded(doc, style)) {\n        clearInterval(interval);\n        cb(style);\n      }\n    }, 4);\n  }\n  return style;\n}\n\n/**\n * Creates the properly configured style element.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @param {boolean} isRuntimeCss\n * @param {?string} ext\n * @return {!Element}\n */\nfunction insertStyleElement(cssRoot, cssText, isRuntimeCss, ext) {\n  let styleMap = cssRoot[STYLE_MAP_PROP];\n  if (!styleMap) {\n    styleMap = cssRoot[STYLE_MAP_PROP] = map();\n  }\n\n  const isExtCss =\n    !isRuntimeCss && (ext && ext != 'amp-custom' && ext != 'amp-keyframes');\n  const key = isRuntimeCss\n    ? 'amp-runtime'\n    : isExtCss\n    ? `amp-extension=${ext}`\n    : null;\n\n  // Check if it has already been created or discovered.\n  if (key) {\n    const existing = getExistingStyleElement(cssRoot, styleMap, key);\n    if (existing) {\n      if (existing.textContent !== cssText) {\n        existing.textContent = cssText;\n      }\n      return existing;\n    }\n  }\n\n  // Create the new style element and append to cssRoot.\n  const doc = cssRoot.ownerDocument || cssRoot;\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = cssText;\n  let afterElement = null;\n  // Make sure that we place style tags after the main runtime CSS. Otherwise\n  // the order is random.\n  if (isRuntimeCss) {\n    style.setAttribute('amp-runtime', '');\n  } else if (isExtCss) {\n    style.setAttribute('amp-extension', ext || '');\n    afterElement = dev().assertElement(\n      getExistingStyleElement(cssRoot, styleMap, 'amp-runtime')\n    );\n  } else {\n    if (ext) {\n      style.setAttribute(ext, '');\n    }\n    afterElement = cssRoot.lastChild;\n  }\n  insertAfterOrAtStart(cssRoot, style, afterElement);\n  if (key) {\n    styleMap[key] = style;\n  }\n  return style;\n}\n\n/**\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {!Object<string, !Element>} styleMap\n * @param {string} key\n * @return {?Element}\n */\nfunction getExistingStyleElement(cssRoot, styleMap, key) {\n  // Already cached.\n  if (styleMap[key]) {\n    return styleMap[key];\n  }\n  // Check if the style has already been added by the server layout.\n  const existing = cssRoot./*OK*/ querySelector(`style[${key}]`);\n  if (existing) {\n    styleMap[key] = existing;\n    return existing;\n  }\n  // Nothing found.\n  return null;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {function(string):string} transformer\n */\nexport function installCssTransformer(cssRoot, transformer) {\n  cssRoot[TRANSFORMER_PROP] = transformer;\n}\n\n/**\n * Applies a transformer to the CSS text if it has been registered.\n * @param {!Element|!ShadowRoot} cssRoot\n * @param {string} cssText\n * @return {string}\n */\nfunction maybeTransform(cssRoot, cssText) {\n  const transformer = cssRoot[TRANSFORMER_PROP];\n  return transformer ? transformer(cssText) : cssText;\n}\n\n/** @private {boolean} */\nlet bodyMadeVisible = false;\n\n/**\n * @param {boolean} value\n * @visibleForTesting\n */\nexport function setBodyMadeVisibleForTesting(value) {\n  bodyMadeVisible = value;\n}\n\n/**\n * Sets the document's body opacity to 1.\n * If the body is not yet available (because our script was loaded\n * synchronously), polls until it is.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisible(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  const win = /** @type {!Window} */ (doc.defaultView);\n  waitForBodyOpenPromise(doc)\n    .then(() => {\n      return waitForServices(win);\n    })\n    .catch(reason => {\n      rethrowAsync(reason);\n      return [];\n    })\n    .then(services => {\n      bodyMadeVisible = true;\n      setBodyVisibleStyles(doc);\n      const ampdoc = getAmpdoc(doc);\n      ampdoc.signals().signal(CommonSignals.RENDER_START);\n      if (services.length > 0) {\n        const resources = Services.resourcesForDoc(doc.documentElement);\n        resources./*OK*/ schedulePass(1, /* relayoutAll */ true);\n      }\n      try {\n        const perf = Services.performanceFor(win);\n        perf.tick('mbv');\n        perf.flush();\n      } catch (e) {}\n    });\n}\n\n/**\n * Set the document's body opacity to 1. Called in error cases.\n * @param {!Document} doc The document who's body we should make visible.\n */\nexport function makeBodyVisibleRecovery(doc) {\n  devAssert(doc.defaultView, 'Passed in document must have a defaultView');\n  if (bodyMadeVisible) {\n    return;\n  }\n  bodyMadeVisible = true;\n  setBodyVisibleStyles(doc);\n}\n\n/**\n * Make sure that body exists, and make it visible.\n * @param {!Document} doc\n */\nfunction setBodyVisibleStyles(doc) {\n  setStyles(dev().assertElement(doc.body), {\n    opacity: 1,\n    visibility: 'visible',\n    'animation': 'none',\n  });\n}\n\n/**\n * Indicates that the body is always visible. For instance, in case of PWA.\n * This check is on a module level variable, and could be problematic if you are\n * relying on this function across different binaries.\n * @param {!Window} unusedWin\n */\nexport function bodyAlwaysVisible(unusedWin) {\n  bodyMadeVisible = true;\n}\n\n/**\n * Checks whether a style element was registered in the DOM.\n * @param {!Document|!ShadowRoot} doc\n * @param {!Element} style\n * @return {boolean}\n */\nfunction styleLoaded(doc, style) {\n  const sheets = doc.styleSheets;\n  for (let i = 0; i < sheets.length; i++) {\n    const sheet = sheets[i];\n    if (sheet.ownerNode == style) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (propertyName) {\n    element.style[propertyName] = /** @type {string} */ (opt_units\n      ? value + opt_units\n      : value);\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent_(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith, startsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n  // Actions viewer\n  'action': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n  }\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// TODO(rsimha, #15334): Enable this rule.\n/* eslint jsdoc/check-types: 0 */\n\n/**\n * Creates a function that is evaluated only once and returns the cached result\n * subsequently.\n *\n * Please note that `once` only takes the function definition into account,\n * so it will return the same cached value even when the arguments are\n * different.\n *\n * @param {function(...):T} fn\n * @return {function(...):T}\n * @template T\n */\nexport function once(fn) {\n  let evaluated = false;\n  let retValue = null;\n  let callback = fn;\n  return (...args) => {\n    if (!evaluated) {\n      retValue = callback.apply(self, args);\n      evaluated = true;\n      callback = null; // GC\n    }\n    return retValue;\n  };\n}\n","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {dev} from '../log';\n\n/** @const {string} */\nconst TAG = 'lru-cache';\n\n/**\n * @template T\n */\nexport class LruCache {\n  /**\n   * @param {number} capacity\n   */\n  constructor(capacity) {\n    /** @private @const {number} */\n    this.capacity_ = capacity;\n\n    /** @private {number} */\n    this.size_ = 0;\n\n    /**\n     * An incrementing counter to define the last access.\n     * @private {number}\n     */\n    this.access_ = 0;\n\n    /** @private {!Object<(number|string), {payload: T, access: number}>} */\n    this.cache_ = Object.create(null);\n  }\n\n  /**\n   * Returns whether key is cached.\n   *\n   * @param {number|string} key\n   * @return {boolean}\n   */\n  has(key) {\n    return !!this.cache_[key];\n  }\n\n  /**\n   * @param {number|string} key\n   * @return {T} The cached payload.\n   */\n  get(key) {\n    const cacheable = this.cache_[key];\n    if (cacheable) {\n      cacheable.access = ++this.access_;\n      return cacheable.payload;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {number|string} key\n   * @param {T} payload The payload to cache.\n   */\n  put(key, payload) {\n    if (!this.has(key)) {\n      this.size_++;\n    }\n    this.cache_[key] = {payload, access: this.access_};\n    this.evict_();\n  }\n\n  /**\n   * Evicts the oldest cache entry, if we've exceeded capacity.\n   */\n  evict_() {\n    if (this.size_ <= this.capacity_) {\n      return;\n    }\n\n    dev().warn(TAG, 'Trimming LRU cache');\n    const cache = this.cache_;\n    let oldest = this.access_ + 1;\n    let oldestKey;\n    for (const key in cache) {\n      const {access} = cache[key];\n      if (access < oldest) {\n        oldest = access;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey !== undefined) {\n      delete cache[oldestKey];\n      this.size_--;\n    }\n  }\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach(key => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise(resolve => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = value => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = reason => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      result => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      error => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function(...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function(...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n","/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n"]}